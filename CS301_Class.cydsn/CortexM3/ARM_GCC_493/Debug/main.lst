ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	map
  19              		.data
  20              		.align	2
  21              		.type	map, %object
  22              		.size	map, 1140
  23              	map:
  24 0000 01000000 		.word	1
  25 0004 01000000 		.word	1
  26 0008 01000000 		.word	1
  27 000c 01000000 		.word	1
  28 0010 01000000 		.word	1
  29 0014 01000000 		.word	1
  30 0018 01000000 		.word	1
  31 001c 01000000 		.word	1
  32 0020 01000000 		.word	1
  33 0024 01000000 		.word	1
  34 0028 01000000 		.word	1
  35 002c 01000000 		.word	1
  36 0030 01000000 		.word	1
  37 0034 01000000 		.word	1
  38 0038 01000000 		.word	1
  39 003c 01000000 		.word	1
  40 0040 01000000 		.word	1
  41 0044 01000000 		.word	1
  42 0048 01000000 		.word	1
  43 004c 01000000 		.word	1
  44 0050 00000000 		.word	0
  45 0054 01000000 		.word	1
  46 0058 00000000 		.word	0
  47 005c 00000000 		.word	0
  48 0060 00000000 		.word	0
  49 0064 00000000 		.word	0
  50 0068 00000000 		.word	0
  51 006c 00000000 		.word	0
  52 0070 00000000 		.word	0
  53 0074 00000000 		.word	0
  54 0078 00000000 		.word	0
  55 007c 00000000 		.word	0
  56 0080 00000000 		.word	0
  57 0084 00000000 		.word	0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 2


  58 0088 00000000 		.word	0
  59 008c 00000000 		.word	0
  60 0090 00000000 		.word	0
  61 0094 01000000 		.word	1
  62 0098 01000000 		.word	1
  63 009c 00000000 		.word	0
  64 00a0 01000000 		.word	1
  65 00a4 00000000 		.word	0
  66 00a8 01000000 		.word	1
  67 00ac 00000000 		.word	0
  68 00b0 01000000 		.word	1
  69 00b4 01000000 		.word	1
  70 00b8 01000000 		.word	1
  71 00bc 00000000 		.word	0
  72 00c0 01000000 		.word	1
  73 00c4 01000000 		.word	1
  74 00c8 01000000 		.word	1
  75 00cc 00000000 		.word	0
  76 00d0 01000000 		.word	1
  77 00d4 01000000 		.word	1
  78 00d8 01000000 		.word	1
  79 00dc 00000000 		.word	0
  80 00e0 01000000 		.word	1
  81 00e4 01000000 		.word	1
  82 00e8 00000000 		.word	0
  83 00ec 01000000 		.word	1
  84 00f0 00000000 		.word	0
  85 00f4 01000000 		.word	1
  86 00f8 00000000 		.word	0
  87 00fc 01000000 		.word	1
  88 0100 00000000 		.word	0
  89 0104 01000000 		.word	1
  90 0108 00000000 		.word	0
  91 010c 00000000 		.word	0
  92 0110 00000000 		.word	0
  93 0114 01000000 		.word	1
  94 0118 00000000 		.word	0
  95 011c 00000000 		.word	0
  96 0120 00000000 		.word	0
  97 0124 01000000 		.word	1
  98 0128 00000000 		.word	0
  99 012c 01000000 		.word	1
 100 0130 01000000 		.word	1
 101 0134 00000000 		.word	0
 102 0138 01000000 		.word	1
 103 013c 00000000 		.word	0
 104 0140 01000000 		.word	1
 105 0144 00000000 		.word	0
 106 0148 00000000 		.word	0
 107 014c 00000000 		.word	0
 108 0150 01000000 		.word	1
 109 0154 01000000 		.word	1
 110 0158 01000000 		.word	1
 111 015c 00000000 		.word	0
 112 0160 01000000 		.word	1
 113 0164 01000000 		.word	1
 114 0168 01000000 		.word	1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 3


 115 016c 01000000 		.word	1
 116 0170 01000000 		.word	1
 117 0174 00000000 		.word	0
 118 0178 01000000 		.word	1
 119 017c 01000000 		.word	1
 120 0180 00000000 		.word	0
 121 0184 00000000 		.word	0
 122 0188 00000000 		.word	0
 123 018c 00000000 		.word	0
 124 0190 00000000 		.word	0
 125 0194 01000000 		.word	1
 126 0198 00000000 		.word	0
 127 019c 00000000 		.word	0
 128 01a0 00000000 		.word	0
 129 01a4 01000000 		.word	1
 130 01a8 00000000 		.word	0
 131 01ac 01000000 		.word	1
 132 01b0 00000000 		.word	0
 133 01b4 00000000 		.word	0
 134 01b8 00000000 		.word	0
 135 01bc 00000000 		.word	0
 136 01c0 00000000 		.word	0
 137 01c4 01000000 		.word	1
 138 01c8 01000000 		.word	1
 139 01cc 01000000 		.word	1
 140 01d0 01000000 		.word	1
 141 01d4 01000000 		.word	1
 142 01d8 01000000 		.word	1
 143 01dc 01000000 		.word	1
 144 01e0 01000000 		.word	1
 145 01e4 00000000 		.word	0
 146 01e8 01000000 		.word	1
 147 01ec 00000000 		.word	0
 148 01f0 01000000 		.word	1
 149 01f4 00000000 		.word	0
 150 01f8 01000000 		.word	1
 151 01fc 00000000 		.word	0
 152 0200 01000000 		.word	1
 153 0204 01000000 		.word	1
 154 0208 01000000 		.word	1
 155 020c 00000000 		.word	0
 156 0210 01000000 		.word	1
 157 0214 01000000 		.word	1
 158 0218 00000000 		.word	0
 159 021c 00000000 		.word	0
 160 0220 00000000 		.word	0
 161 0224 00000000 		.word	0
 162 0228 00000000 		.word	0
 163 022c 00000000 		.word	0
 164 0230 00000000 		.word	0
 165 0234 01000000 		.word	1
 166 0238 00000000 		.word	0
 167 023c 01000000 		.word	1
 168 0240 00000000 		.word	0
 169 0244 01000000 		.word	1
 170 0248 00000000 		.word	0
 171 024c 01000000 		.word	1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 4


 172 0250 00000000 		.word	0
 173 0254 00000000 		.word	0
 174 0258 00000000 		.word	0
 175 025c 01000000 		.word	1
 176 0260 01000000 		.word	1
 177 0264 01000000 		.word	1
 178 0268 01000000 		.word	1
 179 026c 00000000 		.word	0
 180 0270 01000000 		.word	1
 181 0274 00000000 		.word	0
 182 0278 01000000 		.word	1
 183 027c 01000000 		.word	1
 184 0280 01000000 		.word	1
 185 0284 01000000 		.word	1
 186 0288 01000000 		.word	1
 187 028c 00000000 		.word	0
 188 0290 01000000 		.word	1
 189 0294 00000000 		.word	0
 190 0298 01000000 		.word	1
 191 029c 00000000 		.word	0
 192 02a0 01000000 		.word	1
 193 02a4 01000000 		.word	1
 194 02a8 01000000 		.word	1
 195 02ac 01000000 		.word	1
 196 02b0 00000000 		.word	0
 197 02b4 00000000 		.word	0
 198 02b8 00000000 		.word	0
 199 02bc 01000000 		.word	1
 200 02c0 00000000 		.word	0
 201 02c4 01000000 		.word	1
 202 02c8 00000000 		.word	0
 203 02cc 00000000 		.word	0
 204 02d0 00000000 		.word	0
 205 02d4 01000000 		.word	1
 206 02d8 00000000 		.word	0
 207 02dc 00000000 		.word	0
 208 02e0 00000000 		.word	0
 209 02e4 01000000 		.word	1
 210 02e8 00000000 		.word	0
 211 02ec 00000000 		.word	0
 212 02f0 00000000 		.word	0
 213 02f4 01000000 		.word	1
 214 02f8 01000000 		.word	1
 215 02fc 00000000 		.word	0
 216 0300 01000000 		.word	1
 217 0304 01000000 		.word	1
 218 0308 01000000 		.word	1
 219 030c 00000000 		.word	0
 220 0310 01000000 		.word	1
 221 0314 00000000 		.word	0
 222 0318 01000000 		.word	1
 223 031c 00000000 		.word	0
 224 0320 01000000 		.word	1
 225 0324 00000000 		.word	0
 226 0328 01000000 		.word	1
 227 032c 01000000 		.word	1
 228 0330 01000000 		.word	1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 5


 229 0334 01000000 		.word	1
 230 0338 01000000 		.word	1
 231 033c 00000000 		.word	0
 232 0340 01000000 		.word	1
 233 0344 01000000 		.word	1
 234 0348 00000000 		.word	0
 235 034c 00000000 		.word	0
 236 0350 00000000 		.word	0
 237 0354 00000000 		.word	0
 238 0358 00000000 		.word	0
 239 035c 00000000 		.word	0
 240 0360 00000000 		.word	0
 241 0364 01000000 		.word	1
 242 0368 00000000 		.word	0
 243 036c 00000000 		.word	0
 244 0370 00000000 		.word	0
 245 0374 00000000 		.word	0
 246 0378 00000000 		.word	0
 247 037c 01000000 		.word	1
 248 0380 00000000 		.word	0
 249 0384 00000000 		.word	0
 250 0388 00000000 		.word	0
 251 038c 01000000 		.word	1
 252 0390 01000000 		.word	1
 253 0394 00000000 		.word	0
 254 0398 01000000 		.word	1
 255 039c 01000000 		.word	1
 256 03a0 01000000 		.word	1
 257 03a4 01000000 		.word	1
 258 03a8 01000000 		.word	1
 259 03ac 01000000 		.word	1
 260 03b0 01000000 		.word	1
 261 03b4 00000000 		.word	0
 262 03b8 01000000 		.word	1
 263 03bc 01000000 		.word	1
 264 03c0 01000000 		.word	1
 265 03c4 01000000 		.word	1
 266 03c8 01000000 		.word	1
 267 03cc 00000000 		.word	0
 268 03d0 01000000 		.word	1
 269 03d4 01000000 		.word	1
 270 03d8 01000000 		.word	1
 271 03dc 01000000 		.word	1
 272 03e0 00000000 		.word	0
 273 03e4 00000000 		.word	0
 274 03e8 00000000 		.word	0
 275 03ec 00000000 		.word	0
 276 03f0 00000000 		.word	0
 277 03f4 00000000 		.word	0
 278 03f8 00000000 		.word	0
 279 03fc 01000000 		.word	1
 280 0400 00000000 		.word	0
 281 0404 00000000 		.word	0
 282 0408 00000000 		.word	0
 283 040c 00000000 		.word	0
 284 0410 00000000 		.word	0
 285 0414 00000000 		.word	0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 6


 286 0418 00000000 		.word	0
 287 041c 00000000 		.word	0
 288 0420 00000000 		.word	0
 289 0424 01000000 		.word	1
 290 0428 01000000 		.word	1
 291 042c 01000000 		.word	1
 292 0430 01000000 		.word	1
 293 0434 01000000 		.word	1
 294 0438 01000000 		.word	1
 295 043c 01000000 		.word	1
 296 0440 01000000 		.word	1
 297 0444 01000000 		.word	1
 298 0448 01000000 		.word	1
 299 044c 01000000 		.word	1
 300 0450 01000000 		.word	1
 301 0454 01000000 		.word	1
 302 0458 01000000 		.word	1
 303 045c 01000000 		.word	1
 304 0460 01000000 		.word	1
 305 0464 01000000 		.word	1
 306 0468 01000000 		.word	1
 307 046c 01000000 		.word	1
 308 0470 01000000 		.word	1
 309              		.global	food_list
 310              		.align	2
 311              		.type	food_list, %object
 312              		.size	food_list, 48
 313              	food_list:
 314 0474 04000000 		.word	4
 315 0478 05000000 		.word	5
 316 047c 07000000 		.word	7
 317 0480 01000000 		.word	1
 318 0484 0B000000 		.word	11
 319 0488 05000000 		.word	5
 320 048c 0A000000 		.word	10
 321 0490 0B000000 		.word	11
 322 0494 05000000 		.word	5
 323 0498 08000000 		.word	8
 324 049c 11000000 		.word	17
 325 04a0 02000000 		.word	2
 326              		.global	ts
 327              		.bss
 328              		.type	ts, %object
 329              		.size	ts, 1
 330              	ts:
 331 0000 00       		.space	1
 332              		.global	ts_enc
 333 0001 00       		.align	1
 334              		.type	ts_enc, %object
 335              		.size	ts_enc, 2
 336              	ts_enc:
 337 0002 0000     		.space	2
 338              		.global	ts_update
 339              		.align	1
 340              		.type	ts_update, %object
 341              		.size	ts_update, 2
 342              	ts_update:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 7


 343 0004 0000     		.space	2
 344              		.global	ts_speed
 345              		.align	1
 346              		.type	ts_speed, %object
 347              		.size	ts_speed, 2
 348              	ts_speed:
 349 0006 0000     		.space	2
 350              		.global	ts_display
 351              		.align	1
 352              		.type	ts_display, %object
 353              		.size	ts_display, 2
 354              	ts_display:
 355 0008 0000     		.space	2
 356              		.global	flag_ts_enc
 357              		.type	flag_ts_enc, %object
 358              		.size	flag_ts_enc, 1
 359              	flag_ts_enc:
 360 000a 00       		.space	1
 361              		.global	flag_ts_update
 362              		.type	flag_ts_update, %object
 363              		.size	flag_ts_update, 1
 364              	flag_ts_update:
 365 000b 00       		.space	1
 366              		.global	flag_ts_speed
 367              		.type	flag_ts_speed, %object
 368              		.size	flag_ts_speed, 1
 369              	flag_ts_speed:
 370 000c 00       		.space	1
 371              		.global	flag_ts_display
 372              		.type	flag_ts_display, %object
 373              		.size	flag_ts_display, 1
 374              	flag_ts_display:
 375 000d 00       		.space	1
 376              		.global	flag_rx
 377              		.type	flag_rx, %object
 378              		.size	flag_rx, 1
 379              	flag_rx:
 380 000e 00       		.space	1
 381              		.global	flag_packet
 382              		.type	flag_packet, %object
 383              		.size	flag_packet, 1
 384              	flag_packet:
 385 000f 00       		.space	1
 386              		.global	flag_KB_string
 387              		.type	flag_KB_string, %object
 388              		.size	flag_KB_string, 1
 389              	flag_KB_string:
 390 0010 00       		.space	1
 391              		.global	dataready_flag
 392              		.type	dataready_flag, %object
 393              		.size	dataready_flag, 1
 394              	dataready_flag:
 395 0011 00       		.space	1
 396              		.global	flag_rf_transmission_active
 397              		.data
 398              		.type	flag_rf_transmission_active, %object
 399              		.size	flag_rf_transmission_active, 1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 8


 400              	flag_rf_transmission_active:
 401 04a4 0A       		.byte	10
 402              		.global	displaystring
 403 04a5 000000   		.align	2
 404              		.type	displaystring, %object
 405              		.size	displaystring, 64
 406              	displaystring:
 407 04a8 43533330 		.ascii	"CS301 2016\012\000"
 407      31203230 
 407      31360A00 
 408 04b4 00000000 		.space	52
 408      00000000 
 408      00000000 
 408      00000000 
 408      00000000 
 409              		.comm	line,64,4
 410              		.comm	entry,64,4
 411              		.comm	usbBuffer,64,4
 412              		.comm	system_state,32,4
 413              		.global	printingFlag
 414              		.bss
 415 0012 0000     		.align	2
 416              		.type	printingFlag, %object
 417              		.size	printingFlag, 4
 418              	printingFlag:
 419 0014 00000000 		.space	4
 420              		.global	timeout
 421              		.data
 422              		.align	2
 423              		.type	timeout, %object
 424              		.size	timeout, 4
 425              	timeout:
 426 04e8 0A000000 		.word	10
 427              		.global	ADC_0
 428              		.bss
 429              		.align	2
 430              		.type	ADC_0, %object
 431              		.size	ADC_0, 4
 432              	ADC_0:
 433 0018 00000000 		.space	4
 434              		.global	adc0_count
 435              		.align	2
 436              		.type	adc0_count, %object
 437              		.size	adc0_count, 4
 438              	adc0_count:
 439 001c 00000000 		.space	4
 440              		.global	ADC_1
 441              		.align	2
 442              		.type	ADC_1, %object
 443              		.size	ADC_1, 4
 444              	ADC_1:
 445 0020 00000000 		.space	4
 446              		.global	adc1_count
 447              		.align	2
 448              		.type	adc1_count, %object
 449              		.size	adc1_count, 4
 450              	adc1_count:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 9


 451 0024 00000000 		.space	4
 452              		.global	ADC_2
 453              		.align	2
 454              		.type	ADC_2, %object
 455              		.size	ADC_2, 4
 456              	ADC_2:
 457 0028 00000000 		.space	4
 458              		.global	adc2_count
 459              		.align	2
 460              		.type	adc2_count, %object
 461              		.size	adc2_count, 4
 462              	adc2_count:
 463 002c 00000000 		.space	4
 464              		.global	ADC_3
 465              		.align	2
 466              		.type	ADC_3, %object
 467              		.size	ADC_3, 4
 468              	ADC_3:
 469 0030 00000000 		.space	4
 470              		.global	adc3_count
 471              		.align	2
 472              		.type	adc3_count, %object
 473              		.size	adc3_count, 4
 474              	adc3_count:
 475 0034 00000000 		.space	4
 476              		.global	ADC_4
 477              		.align	2
 478              		.type	ADC_4, %object
 479              		.size	ADC_4, 4
 480              	ADC_4:
 481 0038 00000000 		.space	4
 482              		.global	adc4_count
 483              		.align	2
 484              		.type	adc4_count, %object
 485              		.size	adc4_count, 4
 486              	adc4_count:
 487 003c 00000000 		.space	4
 488              		.global	ADC_5
 489              		.align	2
 490              		.type	ADC_5, %object
 491              		.size	ADC_5, 4
 492              	ADC_5:
 493 0040 00000000 		.space	4
 494              		.global	adc5_count
 495              		.align	2
 496              		.type	adc5_count, %object
 497              		.size	adc5_count, 4
 498              	adc5_count:
 499 0044 00000000 		.space	4
 500              		.global	has_received
 501              		.align	2
 502              		.type	has_received, %object
 503              		.size	has_received, 4
 504              	has_received:
 505 0048 00000000 		.space	4
 506              		.global	start_receiving
 507              		.align	2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 10


 508              		.type	start_receiving, %object
 509              		.size	start_receiving, 4
 510              	start_receiving:
 511 004c 00000000 		.space	4
 512              		.global	end_receiving
 513              		.align	2
 514              		.type	end_receiving, %object
 515              		.size	end_receiving, 4
 516              	end_receiving:
 517 0050 00000000 		.space	4
 518              		.global	analysing
 519              		.align	2
 520              		.type	analysing, %object
 521              		.size	analysing, 4
 522              	analysing:
 523 0054 00000000 		.space	4
 524              		.global	path_i
 525              		.align	2
 526              		.type	path_i, %object
 527              		.size	path_i, 4
 528              	path_i:
 529 0058 00000000 		.space	4
 530              		.global	commaCount
 531              		.align	2
 532              		.type	commaCount, %object
 533              		.size	commaCount, 4
 534              	commaCount:
 535 005c 00000000 		.space	4
 536              		.global	negative
 537              		.align	2
 538              		.type	negative, %object
 539              		.size	negative, 4
 540              	negative:
 541 0060 00000000 		.space	4
 542              		.global	test
 543              		.align	2
 544              		.type	test, %object
 545              		.size	test, 4
 546              	test:
 547 0064 00000000 		.space	4
 548              		.comm	RFdata,32,4
 549              		.global	clearedRF
 550              		.align	2
 551              		.type	clearedRF, %object
 552              		.size	clearedRF, 32
 553              	clearedRF:
 554 0068 00000000 		.space	32
 554      00000000 
 554      00000000 
 554      00000000 
 554      00000000 
 555              		.global	currentRForient
 556              		.align	2
 557              		.type	currentRForient, %object
 558              		.size	currentRForient, 4
 559              	currentRForient:
 560 0088 00000000 		.space	4
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 11


 561              		.global	turnDone_delay
 562              		.align	2
 563              		.type	turnDone_delay, %object
 564              		.size	turnDone_delay, 4
 565              	turnDone_delay:
 566 008c 00000000 		.space	4
 567              		.global	off_track
 568              		.align	2
 569              		.type	off_track, %object
 570              		.size	off_track, 4
 571              	off_track:
 572 0090 00000000 		.space	4
 573              		.global	off_track_counter
 574              		.align	2
 575              		.type	off_track_counter, %object
 576              		.size	off_track_counter, 4
 577              	off_track_counter:
 578 0094 00000000 		.space	4
 579              		.global	front_detected
 580              		.align	2
 581              		.type	front_detected, %object
 582              		.size	front_detected, 4
 583              	front_detected:
 584 0098 00000000 		.space	4
 585              		.global	free_to_detect_front
 586              		.data
 587              		.align	2
 588              		.type	free_to_detect_front, %object
 589              		.size	free_to_detect_front, 4
 590              	free_to_detect_front:
 591 04ec 01000000 		.word	1
 592              		.comm	PathArray,600,4
 593              		.comm	FinalArray,1000,4
 594              		.comm	NewNodes,600,4
 595              		.comm	OldNodes,600,4
 596              		.global	neighbours
 597              		.align	2
 598              		.type	neighbours, %object
 599              		.size	neighbours, 8
 600              	neighbours:
 601 04f0 65       		.byte	101
 602 04f1 65       		.byte	101
 603 04f2 65       		.byte	101
 604 04f3 65       		.byte	101
 605 04f4 65       		.byte	101
 606 04f5 65       		.byte	101
 607 04f6 65       		.byte	101
 608 04f7 65       		.byte	101
 609              		.comm	visited,285,4
 610              		.comm	newNodes,285,4
 611              		.comm	DistBefore,1140,4
 612              		.comm	TotalDist,1140,4
 613              		.comm	CameFrom,570,4
 614              		.comm	tentativeDist,4,4
 615              		.global	START_ROW
 616              		.bss
 617              		.type	START_ROW, %object
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 12


 618              		.size	START_ROW, 1
 619              	START_ROW:
 620 009c 00       		.space	1
 621              		.global	START_COL
 622              		.type	START_COL, %object
 623              		.size	START_COL, 1
 624              	START_COL:
 625 009d 00       		.space	1
 626              		.global	PIZZA_ROW
 627              		.type	PIZZA_ROW, %object
 628              		.size	PIZZA_ROW, 1
 629              	PIZZA_ROW:
 630 009e 00       		.space	1
 631              		.global	PIZZA_COL
 632              		.type	PIZZA_COL, %object
 633              		.size	PIZZA_COL, 1
 634              	PIZZA_COL:
 635 009f 00       		.space	1
 636              		.global	next_free_index
 637              		.align	2
 638              		.type	next_free_index, %object
 639              		.size	next_free_index, 4
 640              	next_free_index:
 641 00a0 00000000 		.space	4
 642              		.comm	food_states,285,4
 643              		.global	turnDone
 644              		.align	2
 645              		.type	turnDone, %object
 646              		.size	turnDone, 4
 647              	turnDone:
 648 00a4 00000000 		.space	4
 649              		.global	turnDone_180
 650              		.align	2
 651              		.type	turnDone_180, %object
 652              		.size	turnDone_180, 4
 653              	turnDone_180:
 654 00a8 00000000 		.space	4
 655              		.global	orientation
 656              		.align	2
 657              		.type	orientation, %object
 658              		.size	orientation, 4
 659              	orientation:
 660 00ac 00000000 		.space	4
 661              		.global	path_index
 662              		.align	2
 663              		.type	path_index, %object
 664              		.size	path_index, 4
 665              	path_index:
 666 00b0 00000000 		.space	4
 667              		.global	duplicateFlag
 668              		.align	2
 669              		.type	duplicateFlag, %object
 670              		.size	duplicateFlag, 4
 671              	duplicateFlag:
 672 00b4 00000000 		.space	4
 673              		.global	almost_180
 674              		.align	2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 13


 675              		.type	almost_180, %object
 676              		.size	almost_180, 4
 677              	almost_180:
 678 00b8 00000000 		.space	4
 679              		.comm	currentRFpos,2,4
 680              		.comm	previous,2,4
 681              		.global	__aeabi_dcmpgt
 682              		.section	.text.check,"ax",%progbits
 683              		.align	2
 684              		.global	check
 685              		.thumb
 686              		.thumb_func
 687              		.type	check, %function
 688              	check:
 689              	.LFB63:
 690              		.file 1 ".\\main.c"
   1:.\main.c      **** /* ========================================
   2:.\main.c      ****  * Fully working code
   3:.\main.c      ****  * Copyright Univ of Auckland, 2016
   4:.\main.c      ****  * All Rights Reserved
   5:.\main.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\main.c      ****  *
   7:.\main.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\main.c      ****  * WHICH IS THE PROPERTY OF Univ of Auckland.
   9:.\main.c      ****  *
  10:.\main.c      ****  * ========================================
  11:.\main.c      **** 
  12:.\main.c      ****   .oooooo.                              .o8                 oooo                                   
  13:.\main.c      ****  d8P'  `Y8b                            "888                 `888                                   
  14:.\main.c      **** 888      888 oooo  oooo  oooo d8b       888oooo.   .ooooo.   888   .ooooo.  oooo    ooo  .ooooo.   
  15:.\main.c      **** 888      888 `888  `888  `888""8P       d88' `88b d88' `88b  888  d88' `88b  `88.  .8'  d88' `88b d
  16:.\main.c      **** 888      888  888   888   888           888   888 888ooo888  888  888   888   `88..8'   888ooo888 8
  17:.\main.c      **** `88b    d88'  888   888   888           888   888 888    .o  888  888   888    `888'    888    .o 8
  18:.\main.c      ****  `Y8bood8P'   `V88V"V8P' d888b          `Y8bod8P' `Y8bod8P' o888o `Y8bod8P'     `8'     `Y8bod8P' `
  19:.\main.c      **** 
  20:.\main.c      **** oooo                          .                                                    
  21:.\main.c      **** `888                        .o8                                                    
  22:.\main.c      ****  888   .ooooo.   .ooooo.  .o888oo oooo  oooo  oooo d8b  .ooooo.  oooo d8b  .oooo.o 
  23:.\main.c      ****  888  d88' `88b d88' `"Y8   888   `888  `888  `888""8P d88' `88b `888""8P d88(  "8 
  24:.\main.c      ****  888  888ooo888 888         888    888   888   888     888ooo888  888     `"Y88b.  
  25:.\main.c      ****  888  888    .o 888   .o8   888 .  888   888   888     888    .o  888     o.  )88b 
  26:.\main.c      **** o888o `Y8bod8P' `Y8bod8P'   "888"  `V88V"V8P' d888b    `Y8bod8P' d888b    8""888P' 
  27:.\main.c      **** 
  28:.\main.c      **** ssssssssssssssssssssssssyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyysyssyyyysssysssssyyyyyyyyyyyyyyyyyyyyyyyyy
  29:.\main.c      **** ssssssssssssssssssssssyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyysyyyyyysyyyysssssyyyyyyyyyyyyyyyyyyyyyyyyyy
  30:.\main.c      **** sssssssssssssssyyssyyyyyyyyyyyyyyyyyyyyyyyhhyhhhhhhyyyyyyssyssssyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  31:.\main.c      **** ssssssssssyyyyyyyyyyyyyyyyyyyyyyyyyyhdhddmNNNNNNNNmmdmmddyyyysssysssssssyyyyyyyyyyyyyyyyyyyyyyyyyyy
  32:.\main.c      **** sssssssssyyyyyyyyyyyyyyyyyyyyyyyyhddNNNNmmmhhhddhhhhdmmNNNmdhyyssssssssssyyyyyyyyyyyyyyyyyyyyyyyyyy
  33:.\main.c      **** ssssssyyyyyyyyyyyyyyyyyyyyyyyyhdmNmdhhhhyyysoosso+o++ooyyhmNMNNdhhyysssyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  34:.\main.c      **** ysyyyyyyyyyyyyyyyyyyyyyyyyyyhdmdhysossssooo+//++//////+++osyhmNMMMNmhyyyyyyyyyyyyyyyyyyyyyyyyyyyyys
  35:.\main.c      **** syyyyyyyyyyyyyyyyyyyysyyyydmmhsso+++//////::::::::::://////++oshmNMMMNdyyyyyyyyyyyyyyyyyyyyyyyyyyys
  36:.\main.c      **** syyyyyyyyyyyyysssssssssyhmmhsoo+///:::::::::---:::::::::://///++osdNMMMmhyyyyyyyyyyyyyyyyyyyyyyysss
  37:.\main.c      **** sssssssssssssssssssssyhNNdsoo++///::::-----------------::://///+++ohNMMMNdyyyyyyyyyyyyyyyyyyyysssss
  38:.\main.c      **** ssssssssssssssssssssymMNhsoo++///:::--------------------::////////+odNMMMMdyyyyyyyyyyyyyyyyysssysss
  39:.\main.c      **** sssssssssssssssssssyNMNhsooo++//:::-------------------::::////////+ohmMMMMMdyyyyyyyyyyyyysyssssssss
  40:.\main.c      **** sssssssssssssssssshNMNhyssooo+///:::------------------::://///////+oymMMMMMNhyyyyyyyyysssssssssssss
  41:.\main.c      **** ssssssssssssssssshNMMmhysssoo+++/::::-----------------::::////////++ymNMMMMMdyyyyyyyyysssssssssssss
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 14


  42:.\main.c      **** ssssssssssssssssyNMMMdysssssoo++//::::-------------::///+oosssso++++sdNMMMMMNyyyyysssssssssssssssss
  43:.\main.c      **** sssssssssssssssydMMMMmhysosooo++////:::---------:/+shmmmNNNNNNNmdhs+osmMMMMMMhyyyysssssssssssssssss
  44:.\main.c      **** ssssssssssssssssyNMMMNdysssssyyyhhhhyso/:---::::/oyhmmNNdhhyyhdmmmdyooymMMMMMdyyyssssssssssssssssss
  45:.\main.c      **** ssssssssssssssssyNMMMMdyyydmNMMMMMMNmdhs+///////+syhhhhysoooossyhhhhyooyNMMMMmyyyssssssssssssssssss
  46:.\main.c      **** sssssssssssssssyyNMMMNhydNMMNmmdddddddhhyso+///+oyyyyyyyysyysyyyyyysssosdMMMMNyyyyssssssssssssssssy
  47:.\main.c      **** ssssssssyssyssyyymMMMNhhNNNmdyyyyyyyhhhhhhyo:--:+sssyyysmdNNyhmdysysosyyhMMMMmsosysssssssssssyyyyyy
  48:.\main.c      **** yyyyyysyyyyyyyyyydMMMmhdmmdddddddmddhsyssoys/::/+o+osssosyhhyyhysso+++oosmMNhooyyyyssssssssyyyyyyyy
  49:.\main.c      **** yyyyyyyyyyyyyyyyyhMMMmhhhhdmmNNhdNNms+oo/syy+:::+sy+/+oosssssoooso+++++ossmdosyssyyysssyyyyyyyyyyyy
  50:.\main.c      **** yyyyyyyyyyyyyyyyyyNMMNdhyhmhmmmhhdhysoo++hho:--:/+s+//://+++o+++//////+ooosyyo++oyyyyyyyyyyyyyyyyyy
  51:.\main.c      **** yyyyyyyyyyyyyyyyyymMMMdhsshsyhyyyyyso+/+oss/:---://++//::::::::::::///+osoosys/+syyyyyyyyyyyyyyyyyy
  52:.\main.c      **** yyyyyyyyyyyyyyyyyyydNMhysssssossoo+++///oss/:---:/::/++//::-----::://+ossoosso//oyyyyyyyyyyyyyyyyyy
  53:.\main.c      **** yyyyyyyyyyyyyyyyyhdddNhhysoo++////::://o++o//::::/:://++///::::::///++osssosso/:+hyyyyyyyyyyyyyyyyy
  54:.\main.c      **** yyyyyyyyyyyyyyyyyyyhdmhhysoo++///:::://sssyysooosyhhhyyo+++++/////++oooossssys//ohhhyyyyyyyyyyyyyyy
  55:.\main.c      **** yyyyyyyyyyyyyyyyyyyyydhhhysso+///://+/+shdmmmmddmdhhhys++++oso+/+++ooooossssyyoshhhhhhyyyyyyyyyyyyy
  56:.\main.c      **** yyyyyyyyyyyyyyyyyyysshhhdhyyso+++++oo+oosyhddddhhysooo+oooooosso++oooooosssyyyoohhhhhhhyyyyyyyyyyyy
  57:.\main.c      **** yyyyyyyyyyyyyyyyyyysohdddhhhyssoooyyossssssssoooo++++++oosyyysyo++oooooossyyyh++hhhhhhhyyyyyyyyyyyy
  58:.\main.c      **** yyyyyyyyyyyyyyyyyyhysydddhhhhhyysyhyyhhyyyyyyyysyyyhhhhhdddhhyyo++oosoossyyhhdhyhhhhhhhyyyyyyyyyyyy
  59:.\main.c      **** yyyyyyyyyyyyyyyyyyyhdyddddhhhhhysoyhdmmNmmddhhysooooossoo++++ssoosyssssyyhhhhdhhhhhhhhhyyyyyyyyyyyy
  60:.\main.c      **** yyyyyyyyyyyyyyyyyyyhhhdmmdhhhhdhyoossoosyssssoo++ooo++++++//+oosyhyyyyhhhhhddhhhhhhhhhhhyyyyyyyyyyy
  61:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhyshmmddhyyddyoooooooosyyyhhhhyyso+++//++osyhdhhhddddddddhhhdhhhhhhhyyyyyyyyyyy
  62:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhhhdmmmmdhhhddysssssssoossyyysso+++//+++osydddhdddddddmdhhhhhhhhhhhyyyyyyyyyyyy
  63:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhhhhhdmmmmddddddyysssooo+++/////////++oosyhddddddddmmmdhhhhhhhhhhhhyyyyyyyyyyyy
  64:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhhhhhddmmmmmmdmmdhyssooo++++oo+////+oooshddddmmmmmmmmmdhhhhhhhhhhhhyyyyyyyyyyyy
  65:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyhhhdddmNNNNmmmmmdyysssssossssooosyyhhdddmmmmmmmmmmdhdhhhhhhhhhhhyyyyyyyyyyyyy
  66:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyhhhhddddmNNNNNNNNmddhhddhhhdddddddmmmmmmmmmmmmmmmdhyhhhhhhhhhhhyyyyyyyyyyyyyy
  67:.\main.c      **** yyyyyyyyyyyyyyhyyyyyyyhhhhhdddddmNNNNNNNNNNNNNNNNNNNNNNNNNNmmmmmmmmmmdhyyyyhhhhhhhhhyyyyyyyyyyyyyyy
  68:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyhhhhhhddddmNNNNNNNNNNNNNNNNNNNNNNNNNNmmmmmmmdhhyyssyoyhhhhhhyyyyyyyyyyyyyyyy
  69:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyhhhhhhhddmNNNNNNNNNNNNNNNNNNNNNNNNNmmmmmdhhyysssso+oyhhhhyyyyyyyyyyyyyyyyy
  70:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyyyyhhhhhdmmmNNNNNNNNNNNNNNNNNNNNmmmmdddhhysssooss/oooshhyyyyyyyyyyyyyyyyyy
  71:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyhhhhdmmmmmNNNNmmmmmmmmmmmddhhhhhhyyssooooso/+o+oooyysssyyyyyyyyyyyyyy
  72:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyhhhmdddddmmmddhhhhhhhhhhyyyyysssooooooo+/oooooo+oysoooooossssssssyy
  73:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyymddhhhhdddhyyyssyssyyyssssssoo+ooo+++oooooo+++osso+ooooo+oossooo
  74:.\main.c      **** 
  75:.\main.c      **** yyyyyyyyyyyyyyysyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyss
  76:.\main.c      **** yyyyyyyyysyyyyysyyyyyysyyyyyyyyyyyyyyyyyyyyyyyyyhhdddmmmmddhhyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  77:.\main.c      **** yyyyyyyyysyyyyysyyyyyyyyyyyyyyyyyyyhhddmmmNmmmmmNNNNNNNNNNNNNmdhyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  78:.\main.c      **** syyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyhdmNNNNNNNNNNNNNNNNNNNNNNNNNNNNNdhyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  79:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyhdNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNmhyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  80:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyyyyydNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNdyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  81:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyyyhmNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNdyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
  82:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyydmNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNmhyyyyyyyyyyyyyyyyyyyyyyyyyyy
  83:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyydmNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNmhyyyyyyyyyyyyyyyyyyyyyyyyyy
  84:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyydNNNNNNNNNNNNNNNNNNNNNNNNNNmmNmNNNNNNNNNNNNNNNNNNNmdyyyyyyyyyyyyyyyyyyyyyyyyy
  85:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyhNNNNNNMNNNNNNNNNNNNNNNNmmdddhhhddmmddhdmmNNNNNNNNNNNdyyyyyyyyyyyyyyyyyyyyyyyy
  86:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhmNNNNNNNNMNNNNmmmmmdddhyyhyyysyyyyyysssyhhddmmNNNNNNNNdyyyyyyyyyyyyyyyyyyyyyyy
  87:.\main.c      **** yyyyyyyyyyyyyyyyyyyhmNNNNNNNNNNNNNmhhhhhyysoossoooooooooooosssyyyhdmmNNNNNNmhyyyyyyyyyyyyyyyyyyyyyy
  88:.\main.c      **** yyyyyyyyyyyyyyyyyyhmNNNNNNNNNNNmmmhyyyyssooooo+++++++++ooooooossyhhddNNNNNNNmhyyyyyyyyyyyyyyyyyyyyy
  89:.\main.c      **** yyyyyyyyyyyyyyyyyydNNNNNNmmmmmmdhhysssssooo++++/////+++++++oooossyyhhmmNNNNNNdyyyyyyyyyyyyyyyyyyyyy
  90:.\main.c      **** yyyyyyyyyyyyyyyyyhNNNNNNNNNmmmdhhyysssoooo++//////////++++++oooossyyyddmNNNNNNhyyyyyyyyyyyyyyyyyyyy
  91:.\main.c      **** yyyyyyyyyyyyyyyyydNNNNNNNNNmmddhyyysssooo++++///////////+++++ooosssyyhdmNNNNNNhyyyyyyyyyyyyyyyyyyyy
  92:.\main.c      **** yyyyyyyyyyyyyyyyyhNNNNNNNNNNmdhyyysssoooo++++////////////++++ooosssyyhdmNNNNNNhyyyyyyyyyyyyyyyyyyyy
  93:.\main.c      **** yyyyyyyyyyyyyyyyyymNNNNNNNNNNmhyyssssooo+++/////////////////++oooossyhdNNNNNNNhyyyyyyyyyyyyyyyyyyyy
  94:.\main.c      **** yyyyyyyyyyyyyyyyyyhNNNNNNNNNmdhyysssooo++////::::::::::://///+++oossyhdmNNNNNNhyyyyyyyyyyyyyyyyyyyy
  95:.\main.c      **** yyyyyyyyyyyyyyyyyyhNNNNNNNNmmdhhysssoo++//::-------------::////++oosyyhmNNNNNNhyyyyyyyyyyyyyyyyyyyy
  96:.\main.c      **** yyyyyyyyyyyyyyyyyyymNNNNNNmmdddhhyssooo+/:::--------------:////+oosyhhhdmNNNNNhyyyyyyyyyyyyyyyyyyyy
  97:.\main.c      **** yyyyyyyyyyyyyyyyyyyhmmNNNNmmmNNNmddhhhdhyys+//::::::::://+osyyyyhhhdmmmddmNdyhyyyyyyyyyyyyyyyyyyyyy
  98:.\main.c      **** yyyyyyyyyyyyyyyyyyyhh+dNNNNNNNNmdhhhyyssosoyyooo/////++sossyhddddddmmmNNNNNh+oyyyyyyyyyyyyyyyyyyyyy
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 15


  99:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhoNNNNmmmddddmhhmdmy+sssyyyddhshdhssso/osdmmddddhhmmNdNmooyyyyyyyyyyyyyyyyyyyyy
 100:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhhNmmmhhhyyhddysddh++ooosyso+//+soyyo++++hdhoodmdyyhhymmdsyyyyyyyyyyyyyyyyyyyyy
 101:.\main.c      **** yyyyyyyyyyyyyyyyyyyydymmdhhyyysyhhhhhso+++/oydoo::::+ooys+/+oosyyyhhyyyysohmdyyyyyyyyyyyyyyyyyyyyyy
 102:.\main.c      **** yyyyyyyyyyyyyyyyyyyydsdmdyysysssssssoo+++++++oo+/://+oo/+o++++oooossssysoshhsyyyyyyyyyyyyyyyyyyyyyy
 103:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhhdmdhhysoooooo+++/////++oo+////++o++//+++++++oooooosydhyyyyyyyyyyyyyyyyyyyyyyy
 104:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyddmdhhssoo+++++///:::/++o++/////++o++////////++++oosyhhyyyyyyyyyyyyyyyyyyyyyyy
 105:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyddmmdyysoo++//////:::/o+o+//::://++o+/::://///+++oosyhhsyyyyyyyyyyyyyyyyyyyyyy
 106:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyhdmmdhysoo++////::///+++++/:---://++++/::://///++ooshhyyyyyyyyyyyyyyyyyyyyyyyy
 107:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyhmddysso++///::///+o++++/:-..-:/++++//://////++osyhhyyyyyyyyyyyyyyyyyyyyyyyy
 108:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyydmdhysoo++///////+o+++o+///::/+++++/////////++oshdhyyyyyyyyyyyyyyyyyyyyyyyy
 109:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyhmdhyssoo++//////+++++/////:://++++///////+++osyhdyyyyyyyyyyyyyyyyyyyyyyyyy
 110:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyydmhyyssoo++++/+++o++++/::::://++++++++++++oosyhddhyyyyyyyyyyyyyyyyyyyyyyyy
 111:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyyyhmdhyyssoooo+++ooo++++////////+++ooo++ooo+oosydmNmdhhhyyyyyyyyyyyyyyyyyyyy
 112:.\main.c      **** yyyyyyyyyyyyyyyyyyyyyyyydmNNdyyyssoooooossyssooo++//++oosssssoooooossyhdNmNNNmmmddhhyyyyyyyyyyyyyyy
 113:.\main.c      **** yyyyyyyyyyyyyyyyyyyyhddmNNNNNdhyyysoooo+oossoo+++///++oossysoooooosyyhdmNNNNNNNNmmmmdddhhyyyyyyyyyy
 114:.\main.c      **** yyyyyyyyyyyyyyyyyhhdmmmNNNNNNNdhhyysooooooooo+++/////++oossoooooosyyhdNNmNmNNNNNNmNNNNmmmmddhhhyyyy
 115:.\main.c      **** yyyyyyyyyyyyyyyhdmmNNNNNNmNNNNNmhhhysssoooooo++++++++++ooosoossssyyhdmNNNmNmNNNNNNNNNNNNNNNNNmmmddh
 116:.\main.c      **** yyyyyyyyyyhhdmmmmmNNNNNmNmNmNNNNmddhyyssooooo+++++++++++oooosssyyhhdmNNNNmNmNNNNNNmNmNNNmNNNNNNNNNN
 117:.\main.c      **** yyyyyhhhdmmmmmmNNNNNNNmNNmNmNNNNNNmdhhyssoo++++++///++++++ossyyhhdddmNNmNNmNmNmNmNNNNNNNNNNNNNNNNNN
 118:.\main.c      **** yyhddmmmmmNmNNNNmNNNmNmNNmNmNmNNmmNNmdhyyso++++///////+++ossyhhdddddNmNmNNmNmmNmmNNNNmNmNNNNmNNNNNN
 119:.\main.c      **** dmmmmNNNNmNmNmNNNNNNmNmNmmNmNmNNmddmNNmdhysoo++//////++oosyhddddhhhdNmNNmNNmNmNmNmNNNmNNmNNNNNNNNNN
 120:.\main.c      **** NmNNmNmNNNNmmmNNNNNNNNmNmNNNNdmNmmhhhdmNmddysoo+++++ooosyhdddhhyyyyhNNNNmNNmNmmmmmNmNmmNmNNmNmNNNNm
 121:.\main.c      **** NmNNNNmNmNNmdmNmNNNmNmmNmNNNNmmNmNmhhyyhdmmmmdhhyyhhhdddddhhyyssyyydNNNNmmNmmNdNdNdNmmmNmmNmNNNNmNm
 122:.\main.c      **** NmNmNmNNmNNNmNNmNmNmNmmNmNmNNmmNmmNdhyyyyyyhdddddddddhhhyyssssssssymmNNNmmNNdNdNdNmmmNNNNmNmNNNNmNN
 123:.\main.c      **** mNNmNmNNmNmNmNNmNmNmNdNNmNmNNmmNNmNmmhhyssssssssssyyssssssssssssssdNmNmNNmmNdmdmmdNdNmNNNmNNNNNNNNN
 124:.\main.c      **** mNmNNmNmNNmNmNNNNmNmNmNmmNmNmmNNNmNmNmhyyyysssossssssssssosososshdmNNNmNNNmNmmNdNdNmmmNNNmNNNNmNNNN
 125:.\main.c      **** mNmNNmNmNNmNmNNNNNmmNdNmmNmNmmNmNmNmNNmdhyyyssssssssssoooooooshmmNmNNNmNmNNNNNNNNNNNmNNNNmNNmNNNNNN
 126:.\main.c      **** 
 127:.\main.c      **** */
 128:.\main.c      **** 
 129:.\main.c      **** #include <stdio.h>
 130:.\main.c      **** #include <string.h>
 131:.\main.c      **** #include <stdlib.h>
 132:.\main.c      **** #include <project.h>
 133:.\main.c      **** #include <math.h>
 134:.\main.c      **** #include "map.h"
 135:.\main.c      **** #include "defines.h"
 136:.\main.c      **** #include "vars.h"
 137:.\main.c      **** 
 138:.\main.c      **** #define TAIL 101
 139:.\main.c      **** #define The_INFINITY 9999
 140:.\main.c      **** #define MAXMAP_ROWS 15
 141:.\main.c      **** #define MAXMAP_COLS 19
 142:.\main.c      **** #define ARRAY_SIZE 300
 143:.\main.c      **** #define WALKABLE 0
 144:.\main.c      **** 
 145:.\main.c      **** #define TOP_LEFT ADC_0
 146:.\main.c      **** #define TOP_MIDDLE ADC_2
 147:.\main.c      **** #define TOP_RIGHT ADC_4
 148:.\main.c      **** #define BOTTOM_LEFT ADC_1
 149:.\main.c      **** #define BOTTOM_MIDDLE ADC_3
 150:.\main.c      **** #define BOTTOM_RIGHT ADC_5
 151:.\main.c      **** 
 152:.\main.c      **** //* ========================================WheelSpeed Functions
 153:.\main.c      **** int RFround(int16 RFvalue);
 154:.\main.c      **** //* ========================================WheelSpeed flags
 155:.\main.c      **** int printingFlag = 0;
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 16


 156:.\main.c      **** //* ========================================ADC Functions
 157:.\main.c      **** double calculateADC(int ADC);
 158:.\main.c      **** //* ========================================ADC Flags
 159:.\main.c      **** // Higher timeout value = lower sensitivity (will correct itself less often)
 160:.\main.c      **** int timeout = 10;
 161:.\main.c      **** 
 162:.\main.c      **** int ADC_0 = 0;
 163:.\main.c      **** int adc0_count = 0;
 164:.\main.c      **** int ADC_1 = 0;
 165:.\main.c      **** int adc1_count = 0;
 166:.\main.c      **** int ADC_2 = 0;
 167:.\main.c      **** int adc2_count = 0;
 168:.\main.c      **** int ADC_3 = 0;
 169:.\main.c      **** int adc3_count = 0;
 170:.\main.c      **** int ADC_4 = 0;
 171:.\main.c      **** int adc4_count = 0;
 172:.\main.c      **** int ADC_5 = 0;
 173:.\main.c      **** int adc5_count = 0;
 174:.\main.c      **** //* ========================================RF
 175:.\main.c      **** void Receive_Data(uint8 c);
 176:.\main.c      **** int16 concatenate(int16 a,uint8 c);
 177:.\main.c      **** int has_received = 0;
 178:.\main.c      **** int start_receiving = 0;
 179:.\main.c      **** int end_receiving = 0;
 180:.\main.c      **** int analysing = 0;
 181:.\main.c      **** //int i = 0;
 182:.\main.c      **** int path_i = 0;
 183:.\main.c      **** int commaCount=0;
 184:.\main.c      **** int negative = FALSE;
 185:.\main.c      **** int test =0;
 186:.\main.c      **** vtype1 RFdata;
 187:.\main.c      **** vtype1 clearedRF = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 188:.\main.c      **** //* ========================================Pathfinding and other stuff
 189:.\main.c      **** int currentRForient = 0;
 190:.\main.c      **** int turnDone_delay = 0;
 191:.\main.c      **** int off_track = 0;
 192:.\main.c      **** int off_track_counter = 0;
 193:.\main.c      **** int front_detected = 0;
 194:.\main.c      **** int free_to_detect_front = 1;
 195:.\main.c      **** 
 196:.\main.c      **** 
 197:.\main.c      **** 
 198:.\main.c      **** 
 199:.\main.c      **** 
 200:.\main.c      **** /************************* Declarations for Pathfinding C *************************/
 201:.\main.c      **** typedef struct MAP {
 202:.\main.c      **** 	int map[15][19];
 203:.\main.c      **** } MAP;
 204:.\main.c      **** 
 205:.\main.c      **** // Defines the Node structure. Chars because they're tiny.
 206:.\main.c      **** typedef struct Node {
 207:.\main.c      **** 	char row;
 208:.\main.c      **** 	char col;
 209:.\main.c      **** } Node;
 210:.\main.c      **** 
 211:.\main.c      **** // To find neighbours of a Node.
 212:.\main.c      **** typedef struct NodeList {
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 17


 213:.\main.c      **** 	Node foundneighbours[4];
 214:.\main.c      **** 	char lastindex;
 215:.\main.c      **** } NodeList;
 216:.\main.c      **** 
 217:.\main.c      **** typedef struct NodeMAP {
 218:.\main.c      **** 	Node map[15][19];
 219:.\main.c      **** } NodeMAP;
 220:.\main.c      **** 
 221:.\main.c      **** // Global Variables
 222:.\main.c      **** Node PathArray[ARRAY_SIZE];
 223:.\main.c      **** Node FinalArray[500];
 224:.\main.c      **** Node NewNodes[ARRAY_SIZE];
 225:.\main.c      **** Node OldNodes[ARRAY_SIZE];
 226:.\main.c      **** Node neighbours[4] = { {TAIL,TAIL},{TAIL,TAIL},{TAIL,TAIL},{TAIL,TAIL} };
 227:.\main.c      **** 
 228:.\main.c      **** char visited[MAXMAP_ROWS][MAXMAP_COLS];
 229:.\main.c      **** char newNodes[MAXMAP_ROWS][MAXMAP_COLS];
 230:.\main.c      **** MAP DistBefore;
 231:.\main.c      **** MAP TotalDist;
 232:.\main.c      **** NodeMAP CameFrom;
 233:.\main.c      **** int tentativeDist;
 234:.\main.c      **** 
 235:.\main.c      **** // Functions
 236:.\main.c      **** void push(Node p, Node Array[]);
 237:.\main.c      **** void listNeighbours(Node val);
 238:.\main.c      **** int hCost(Node current, Node target);
 239:.\main.c      **** Node findCurrentNode(Node Array[], MAP map);
 240:.\main.c      **** void deleteNode(Node p, Node Array[]);
 241:.\main.c      **** int existInList(Node p, Node Array[]);
 242:.\main.c      **** void TidyUpThePath(Node Start, Node Pizza);
 243:.\main.c      **** void astar();
 244:.\main.c      **** void astar_and_append();
 245:.\main.c      **** 
 246:.\main.c      **** char START_ROW = 0;
 247:.\main.c      **** char START_COL = 0;
 248:.\main.c      **** char PIZZA_ROW = 0;
 249:.\main.c      **** char PIZZA_COL = 0;
 250:.\main.c      **** int next_free_index = 0;
 251:.\main.c      **** 
 252:.\main.c      **** char food_states[MAXMAP_ROWS][MAXMAP_COLS];
 253:.\main.c      **** void findNearestFood();
 254:.\main.c      **** int foodLeft();
 255:.\main.c      **** 
 256:.\main.c      **** 
 257:.\main.c      **** 
 258:.\main.c      **** 
 259:.\main.c      **** 
 260:.\main.c      **** /************************* Declarations for Final Maze Navigation *************************/
 261:.\main.c      **** #define RIGHT 1
 262:.\main.c      **** #define LEFT 2
 263:.\main.c      **** #define UP 3
 264:.\main.c      **** #define DOWN 4
 265:.\main.c      **** int turnDone = 0;
 266:.\main.c      **** int turnDone_180 = 0;
 267:.\main.c      **** int orientation = 0;
 268:.\main.c      **** int path_index = 0;
 269:.\main.c      **** int duplicateFlag = 0;
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 18


 270:.\main.c      **** int almost_180=0;
 271:.\main.c      **** Node currentRFpos;
 272:.\main.c      **** Node previous;
 273:.\main.c      **** 
 274:.\main.c      **** void useRF();
 275:.\main.c      **** void Straight();
 276:.\main.c      **** int nextNodeDirection(int i);
 277:.\main.c      **** 
 278:.\main.c      **** 
 279:.\main.c      **** 
 280:.\main.c      **** 
 281:.\main.c      **** 
 282:.\main.c      **** /*
 283:.\main.c      **** ooooo  .oooooo..o ooooooooo.   
 284:.\main.c      **** `888' d8P'    `Y8 `888   `Y88. 
 285:.\main.c      ****  888  Y88bo.       888   .d88' 
 286:.\main.c      ****  888   `"Y8888o.   888ooo88P'  
 287:.\main.c      ****  888       `"Y88b  888`88b.    
 288:.\main.c      ****  888  oo     .d8P  888  `88b.  
 289:.\main.c      **** o888o 8""88888P'  o888o  o888o
 290:.\main.c      **** */
 291:.\main.c      **** 
 292:.\main.c      **** CY_ISR_PROTO(test_isr);
 293:.\main.c      **** CY_ISR_PROTO(check);
 294:.\main.c      **** CY_ISR_PROTO(printing);
 295:.\main.c      **** 
 296:.\main.c      **** // For speed correction, 50ms timer is best. For ADC reading, 500ms. LED will show you current valu
 297:.\main.c      **** CY_ISR(check) {
 691              		.loc 1 297 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 1, uses_anonymous_args = 0
 695 0000 80B5     		push	{r7, lr}
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 7, -8
 698              		.cfi_offset 14, -4
 699 0002 00AF     		add	r7, sp, #0
 700              		.cfi_def_cfa_register 7
 298:.\main.c      ****     Timer_1_ReadStatusRegister();
 701              		.loc 1 298 0
 702 0004 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 299:.\main.c      ****      /*-----------------------------------------*/
 300:.\main.c      ****     if (calculateADC(0) > 1.0) {
 703              		.loc 1 300 0
 704 0008 0020     		movs	r0, #0
 705 000a FFF7FEFF 		bl	calculateADC
 706 000e 0246     		mov	r2, r0
 707 0010 0B46     		mov	r3, r1
 708 0012 1046     		mov	r0, r2
 709 0014 1946     		mov	r1, r3
 710 0016 4FF00002 		mov	r2, #0
 711 001a 9A4B     		ldr	r3, .L59
 712 001c FFF7FEFF 		bl	__aeabi_dcmpgt
 713 0020 0346     		mov	r3, r0
 714 0022 002B     		cmp	r3, #0
 715 0024 06D0     		beq	.L53
 301:.\main.c      ****         ADC_0 = 1;
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 19


 716              		.loc 1 301 0
 717 0026 984B     		ldr	r3, .L59+4
 718 0028 0122     		movs	r2, #1
 719 002a 1A60     		str	r2, [r3]
 302:.\main.c      ****         adc0_count = 0;
 720              		.loc 1 302 0
 721 002c 974B     		ldr	r3, .L59+8
 722 002e 0022     		movs	r2, #0
 723 0030 1A60     		str	r2, [r3]
 724 0032 04E0     		b	.L4
 725              	.L53:
 303:.\main.c      ****     }
 304:.\main.c      ****     else{
 305:.\main.c      ****         adc0_count++;
 726              		.loc 1 305 0
 727 0034 954B     		ldr	r3, .L59+8
 728 0036 1B68     		ldr	r3, [r3]
 729 0038 0133     		adds	r3, r3, #1
 730 003a 944A     		ldr	r2, .L59+8
 731 003c 1360     		str	r3, [r2]
 732              	.L4:
 306:.\main.c      ****     }
 307:.\main.c      ****     if (adc0_count > timeout){
 733              		.loc 1 307 0
 734 003e 934B     		ldr	r3, .L59+8
 735 0040 1A68     		ldr	r2, [r3]
 736 0042 934B     		ldr	r3, .L59+12
 737 0044 1B68     		ldr	r3, [r3]
 738 0046 9A42     		cmp	r2, r3
 739 0048 05DD     		ble	.L5
 308:.\main.c      ****         ADC_0 = 0;
 740              		.loc 1 308 0
 741 004a 8F4B     		ldr	r3, .L59+4
 742 004c 0022     		movs	r2, #0
 743 004e 1A60     		str	r2, [r3]
 309:.\main.c      ****         adc0_count = 0;
 744              		.loc 1 309 0
 745 0050 8E4B     		ldr	r3, .L59+8
 746 0052 0022     		movs	r2, #0
 747 0054 1A60     		str	r2, [r3]
 748              	.L5:
 310:.\main.c      ****     }
 311:.\main.c      ****    /*-----------------------------------------*/
 312:.\main.c      ****         if (calculateADC(1) > 1.0) {
 749              		.loc 1 312 0
 750 0056 0120     		movs	r0, #1
 751 0058 FFF7FEFF 		bl	calculateADC
 752 005c 0246     		mov	r2, r0
 753 005e 0B46     		mov	r3, r1
 754 0060 1046     		mov	r0, r2
 755 0062 1946     		mov	r1, r3
 756 0064 4FF00002 		mov	r2, #0
 757 0068 864B     		ldr	r3, .L59
 758 006a FFF7FEFF 		bl	__aeabi_dcmpgt
 759 006e 0346     		mov	r3, r0
 760 0070 002B     		cmp	r3, #0
 761 0072 06D0     		beq	.L54
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 20


 313:.\main.c      ****         ADC_1 = 1;
 762              		.loc 1 313 0
 763 0074 874B     		ldr	r3, .L59+16
 764 0076 0122     		movs	r2, #1
 765 0078 1A60     		str	r2, [r3]
 314:.\main.c      ****         adc1_count = 0;
 766              		.loc 1 314 0
 767 007a 874B     		ldr	r3, .L59+20
 768 007c 0022     		movs	r2, #0
 769 007e 1A60     		str	r2, [r3]
 770 0080 04E0     		b	.L8
 771              	.L54:
 315:.\main.c      ****     }
 316:.\main.c      ****     else{
 317:.\main.c      ****         adc1_count++;
 772              		.loc 1 317 0
 773 0082 854B     		ldr	r3, .L59+20
 774 0084 1B68     		ldr	r3, [r3]
 775 0086 0133     		adds	r3, r3, #1
 776 0088 834A     		ldr	r2, .L59+20
 777 008a 1360     		str	r3, [r2]
 778              	.L8:
 318:.\main.c      ****     }
 319:.\main.c      ****     if (adc1_count > timeout){
 779              		.loc 1 319 0
 780 008c 824B     		ldr	r3, .L59+20
 781 008e 1A68     		ldr	r2, [r3]
 782 0090 7F4B     		ldr	r3, .L59+12
 783 0092 1B68     		ldr	r3, [r3]
 784 0094 9A42     		cmp	r2, r3
 785 0096 05DD     		ble	.L9
 320:.\main.c      ****         ADC_1 = 0;
 786              		.loc 1 320 0
 787 0098 7E4B     		ldr	r3, .L59+16
 788 009a 0022     		movs	r2, #0
 789 009c 1A60     		str	r2, [r3]
 321:.\main.c      ****         adc1_count = 0;
 790              		.loc 1 321 0
 791 009e 7E4B     		ldr	r3, .L59+20
 792 00a0 0022     		movs	r2, #0
 793 00a2 1A60     		str	r2, [r3]
 794              	.L9:
 322:.\main.c      ****     }
 323:.\main.c      ****    /*-----------------------------------------*/
 324:.\main.c      ****         if (calculateADC(2) > 1.0) {
 795              		.loc 1 324 0
 796 00a4 0220     		movs	r0, #2
 797 00a6 FFF7FEFF 		bl	calculateADC
 798 00aa 0246     		mov	r2, r0
 799 00ac 0B46     		mov	r3, r1
 800 00ae 1046     		mov	r0, r2
 801 00b0 1946     		mov	r1, r3
 802 00b2 4FF00002 		mov	r2, #0
 803 00b6 734B     		ldr	r3, .L59
 804 00b8 FFF7FEFF 		bl	__aeabi_dcmpgt
 805 00bc 0346     		mov	r3, r0
 806 00be 002B     		cmp	r3, #0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 21


 807 00c0 06D0     		beq	.L55
 325:.\main.c      ****         ADC_2 = 1;
 808              		.loc 1 325 0
 809 00c2 764B     		ldr	r3, .L59+24
 810 00c4 0122     		movs	r2, #1
 811 00c6 1A60     		str	r2, [r3]
 326:.\main.c      ****         adc2_count = 0;
 812              		.loc 1 326 0
 813 00c8 754B     		ldr	r3, .L59+28
 814 00ca 0022     		movs	r2, #0
 815 00cc 1A60     		str	r2, [r3]
 816 00ce 04E0     		b	.L12
 817              	.L55:
 327:.\main.c      ****     }
 328:.\main.c      ****     else{
 329:.\main.c      ****         adc2_count++;
 818              		.loc 1 329 0
 819 00d0 734B     		ldr	r3, .L59+28
 820 00d2 1B68     		ldr	r3, [r3]
 821 00d4 0133     		adds	r3, r3, #1
 822 00d6 724A     		ldr	r2, .L59+28
 823 00d8 1360     		str	r3, [r2]
 824              	.L12:
 330:.\main.c      ****     }
 331:.\main.c      ****     if (adc2_count > timeout){
 825              		.loc 1 331 0
 826 00da 714B     		ldr	r3, .L59+28
 827 00dc 1A68     		ldr	r2, [r3]
 828 00de 6C4B     		ldr	r3, .L59+12
 829 00e0 1B68     		ldr	r3, [r3]
 830 00e2 9A42     		cmp	r2, r3
 831 00e4 05DD     		ble	.L13
 332:.\main.c      ****         ADC_2 = 0;
 832              		.loc 1 332 0
 833 00e6 6D4B     		ldr	r3, .L59+24
 834 00e8 0022     		movs	r2, #0
 835 00ea 1A60     		str	r2, [r3]
 333:.\main.c      ****         adc2_count = 0;
 836              		.loc 1 333 0
 837 00ec 6C4B     		ldr	r3, .L59+28
 838 00ee 0022     		movs	r2, #0
 839 00f0 1A60     		str	r2, [r3]
 840              	.L13:
 334:.\main.c      ****     }
 335:.\main.c      ****    /*-----------------------------------------*/
 336:.\main.c      ****         if (calculateADC(3) > 1.0) {
 841              		.loc 1 336 0
 842 00f2 0320     		movs	r0, #3
 843 00f4 FFF7FEFF 		bl	calculateADC
 844 00f8 0246     		mov	r2, r0
 845 00fa 0B46     		mov	r3, r1
 846 00fc 1046     		mov	r0, r2
 847 00fe 1946     		mov	r1, r3
 848 0100 4FF00002 		mov	r2, #0
 849 0104 5F4B     		ldr	r3, .L59
 850 0106 FFF7FEFF 		bl	__aeabi_dcmpgt
 851 010a 0346     		mov	r3, r0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 22


 852 010c 002B     		cmp	r3, #0
 853 010e 06D0     		beq	.L56
 337:.\main.c      ****         ADC_3 = 1;
 854              		.loc 1 337 0
 855 0110 644B     		ldr	r3, .L59+32
 856 0112 0122     		movs	r2, #1
 857 0114 1A60     		str	r2, [r3]
 338:.\main.c      ****         adc3_count = 0;
 858              		.loc 1 338 0
 859 0116 644B     		ldr	r3, .L59+36
 860 0118 0022     		movs	r2, #0
 861 011a 1A60     		str	r2, [r3]
 862 011c 04E0     		b	.L16
 863              	.L56:
 339:.\main.c      ****     }
 340:.\main.c      ****     else{
 341:.\main.c      ****         adc3_count++;
 864              		.loc 1 341 0
 865 011e 624B     		ldr	r3, .L59+36
 866 0120 1B68     		ldr	r3, [r3]
 867 0122 0133     		adds	r3, r3, #1
 868 0124 604A     		ldr	r2, .L59+36
 869 0126 1360     		str	r3, [r2]
 870              	.L16:
 342:.\main.c      ****     }
 343:.\main.c      ****     if (adc3_count > timeout){
 871              		.loc 1 343 0
 872 0128 5F4B     		ldr	r3, .L59+36
 873 012a 1A68     		ldr	r2, [r3]
 874 012c 584B     		ldr	r3, .L59+12
 875 012e 1B68     		ldr	r3, [r3]
 876 0130 9A42     		cmp	r2, r3
 877 0132 05DD     		ble	.L17
 344:.\main.c      ****         ADC_3 = 0;
 878              		.loc 1 344 0
 879 0134 5B4B     		ldr	r3, .L59+32
 880 0136 0022     		movs	r2, #0
 881 0138 1A60     		str	r2, [r3]
 345:.\main.c      ****         adc3_count = 0;
 882              		.loc 1 345 0
 883 013a 5B4B     		ldr	r3, .L59+36
 884 013c 0022     		movs	r2, #0
 885 013e 1A60     		str	r2, [r3]
 886              	.L17:
 346:.\main.c      ****     }
 347:.\main.c      ****    /*-----------------------------------------*/
 348:.\main.c      ****         if (calculateADC(4) > 1.0) {
 887              		.loc 1 348 0
 888 0140 0420     		movs	r0, #4
 889 0142 FFF7FEFF 		bl	calculateADC
 890 0146 0246     		mov	r2, r0
 891 0148 0B46     		mov	r3, r1
 892 014a 1046     		mov	r0, r2
 893 014c 1946     		mov	r1, r3
 894 014e 4FF00002 		mov	r2, #0
 895 0152 4C4B     		ldr	r3, .L59
 896 0154 FFF7FEFF 		bl	__aeabi_dcmpgt
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 23


 897 0158 0346     		mov	r3, r0
 898 015a 002B     		cmp	r3, #0
 899 015c 06D0     		beq	.L57
 349:.\main.c      ****         ADC_4 = 1;
 900              		.loc 1 349 0
 901 015e 534B     		ldr	r3, .L59+40
 902 0160 0122     		movs	r2, #1
 903 0162 1A60     		str	r2, [r3]
 350:.\main.c      ****         adc4_count = 0;
 904              		.loc 1 350 0
 905 0164 524B     		ldr	r3, .L59+44
 906 0166 0022     		movs	r2, #0
 907 0168 1A60     		str	r2, [r3]
 908 016a 04E0     		b	.L20
 909              	.L57:
 351:.\main.c      ****     }
 352:.\main.c      ****     else{
 353:.\main.c      ****         adc4_count++;
 910              		.loc 1 353 0
 911 016c 504B     		ldr	r3, .L59+44
 912 016e 1B68     		ldr	r3, [r3]
 913 0170 0133     		adds	r3, r3, #1
 914 0172 4F4A     		ldr	r2, .L59+44
 915 0174 1360     		str	r3, [r2]
 916              	.L20:
 354:.\main.c      ****     }
 355:.\main.c      ****     if (adc4_count > timeout){
 917              		.loc 1 355 0
 918 0176 4E4B     		ldr	r3, .L59+44
 919 0178 1A68     		ldr	r2, [r3]
 920 017a 454B     		ldr	r3, .L59+12
 921 017c 1B68     		ldr	r3, [r3]
 922 017e 9A42     		cmp	r2, r3
 923 0180 05DD     		ble	.L21
 356:.\main.c      ****         ADC_4 = 0;
 924              		.loc 1 356 0
 925 0182 4A4B     		ldr	r3, .L59+40
 926 0184 0022     		movs	r2, #0
 927 0186 1A60     		str	r2, [r3]
 357:.\main.c      ****         adc4_count = 0;
 928              		.loc 1 357 0
 929 0188 494B     		ldr	r3, .L59+44
 930 018a 0022     		movs	r2, #0
 931 018c 1A60     		str	r2, [r3]
 932              	.L21:
 358:.\main.c      ****     }
 359:.\main.c      ****    /*-----------------------------------------*/
 360:.\main.c      ****         if (calculateADC(5) > 1.0) {
 933              		.loc 1 360 0
 934 018e 0520     		movs	r0, #5
 935 0190 FFF7FEFF 		bl	calculateADC
 936 0194 0246     		mov	r2, r0
 937 0196 0B46     		mov	r3, r1
 938 0198 1046     		mov	r0, r2
 939 019a 1946     		mov	r1, r3
 940 019c 4FF00002 		mov	r2, #0
 941 01a0 384B     		ldr	r3, .L59
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 24


 942 01a2 FFF7FEFF 		bl	__aeabi_dcmpgt
 943 01a6 0346     		mov	r3, r0
 944 01a8 002B     		cmp	r3, #0
 945 01aa 06D0     		beq	.L58
 361:.\main.c      ****         ADC_5 = 1;
 946              		.loc 1 361 0
 947 01ac 414B     		ldr	r3, .L59+48
 948 01ae 0122     		movs	r2, #1
 949 01b0 1A60     		str	r2, [r3]
 362:.\main.c      ****         adc5_count = 0;
 950              		.loc 1 362 0
 951 01b2 414B     		ldr	r3, .L59+52
 952 01b4 0022     		movs	r2, #0
 953 01b6 1A60     		str	r2, [r3]
 954 01b8 04E0     		b	.L24
 955              	.L58:
 363:.\main.c      ****     }
 364:.\main.c      ****     else{
 365:.\main.c      ****         adc5_count++;
 956              		.loc 1 365 0
 957 01ba 3F4B     		ldr	r3, .L59+52
 958 01bc 1B68     		ldr	r3, [r3]
 959 01be 0133     		adds	r3, r3, #1
 960 01c0 3D4A     		ldr	r2, .L59+52
 961 01c2 1360     		str	r3, [r2]
 962              	.L24:
 366:.\main.c      ****     }
 367:.\main.c      ****     if (adc5_count > timeout){
 963              		.loc 1 367 0
 964 01c4 3C4B     		ldr	r3, .L59+52
 965 01c6 1A68     		ldr	r2, [r3]
 966 01c8 314B     		ldr	r3, .L59+12
 967 01ca 1B68     		ldr	r3, [r3]
 968 01cc 9A42     		cmp	r2, r3
 969 01ce 05DD     		ble	.L25
 368:.\main.c      ****         ADC_5 = 0;
 970              		.loc 1 368 0
 971 01d0 384B     		ldr	r3, .L59+48
 972 01d2 0022     		movs	r2, #0
 973 01d4 1A60     		str	r2, [r3]
 369:.\main.c      ****         adc5_count = 0;
 974              		.loc 1 369 0
 975 01d6 384B     		ldr	r3, .L59+52
 976 01d8 0022     		movs	r2, #0
 977 01da 1A60     		str	r2, [r3]
 978              	.L25:
 370:.\main.c      ****     }
 371:.\main.c      ****    /*-----------------------------------------*/
 372:.\main.c      ****     
 373:.\main.c      ****     if (TOP_LEFT == 1 && TOP_MIDDLE == 1 && TOP_RIGHT == 1 && BOTTOM_LEFT == 1 && BOTTOM_MIDDLE == 
 979              		.loc 1 373 0
 980 01dc 2A4B     		ldr	r3, .L59+4
 981 01de 1B68     		ldr	r3, [r3]
 982 01e0 012B     		cmp	r3, #1
 983 01e2 24D1     		bne	.L26
 984              		.loc 1 373 0 is_stmt 0 discriminator 1
 985 01e4 2D4B     		ldr	r3, .L59+24
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 25


 986 01e6 1B68     		ldr	r3, [r3]
 987 01e8 012B     		cmp	r3, #1
 988 01ea 20D1     		bne	.L26
 989              		.loc 1 373 0 discriminator 2
 990 01ec 2F4B     		ldr	r3, .L59+40
 991 01ee 1B68     		ldr	r3, [r3]
 992 01f0 012B     		cmp	r3, #1
 993 01f2 1CD1     		bne	.L26
 994              		.loc 1 373 0 discriminator 3
 995 01f4 274B     		ldr	r3, .L59+16
 996 01f6 1B68     		ldr	r3, [r3]
 997 01f8 012B     		cmp	r3, #1
 998 01fa 18D1     		bne	.L26
 999              		.loc 1 373 0 discriminator 4
 1000 01fc 294B     		ldr	r3, .L59+32
 1001 01fe 1B68     		ldr	r3, [r3]
 1002 0200 012B     		cmp	r3, #1
 1003 0202 14D1     		bne	.L26
 1004              		.loc 1 373 0 discriminator 5
 1005 0204 2B4B     		ldr	r3, .L59+48
 1006 0206 1B68     		ldr	r3, [r3]
 1007 0208 012B     		cmp	r3, #1
 1008 020a 10D1     		bne	.L26
 374:.\main.c      ****         ++off_track_counter;
 1009              		.loc 1 374 0 is_stmt 1
 1010 020c 2B4B     		ldr	r3, .L59+56
 1011 020e 1B68     		ldr	r3, [r3]
 1012 0210 0133     		adds	r3, r3, #1
 1013 0212 2A4A     		ldr	r2, .L59+56
 1014 0214 1360     		str	r3, [r2]
 375:.\main.c      ****         if (off_track_counter == 50) {
 1015              		.loc 1 375 0
 1016 0216 294B     		ldr	r3, .L59+56
 1017 0218 1B68     		ldr	r3, [r3]
 1018 021a 322B     		cmp	r3, #50
 1019 021c 06D1     		bne	.L27
 376:.\main.c      ****             off_track = 1;
 1020              		.loc 1 376 0
 1021 021e 284B     		ldr	r3, .L59+60
 1022 0220 0122     		movs	r2, #1
 1023 0222 1A60     		str	r2, [r3]
 377:.\main.c      ****             off_track_counter = 0;
 1024              		.loc 1 377 0
 1025 0224 254B     		ldr	r3, .L59+56
 1026 0226 0022     		movs	r2, #0
 1027 0228 1A60     		str	r2, [r3]
 375:.\main.c      ****         if (off_track_counter == 50) {
 1028              		.loc 1 375 0
 1029 022a 2DE1     		b	.L1
 1030              	.L27:
 1031 022c 2CE1     		b	.L1
 1032              	.L26:
 378:.\main.c      ****         }
 379:.\main.c      ****     }
 380:.\main.c      ****     
 381:.\main.c      ****     else if (orientation == RIGHT) {
 1033              		.loc 1 381 0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 26


 1034 022e 254B     		ldr	r3, .L59+64
 1035 0230 1B68     		ldr	r3, [r3]
 1036 0232 012B     		cmp	r3, #1
 1037 0234 63D1     		bne	.L29
 382:.\main.c      ****         if (nextNodeDirection(path_index) == UP && BOTTOM_LEFT == 0) {
 1038              		.loc 1 382 0
 1039 0236 244B     		ldr	r3, .L59+68
 1040 0238 1B68     		ldr	r3, [r3]
 1041 023a 1846     		mov	r0, r3
 1042 023c FFF7FEFF 		bl	nextNodeDirection
 1043 0240 0346     		mov	r3, r0
 1044 0242 032B     		cmp	r3, #3
 1045 0244 0AD1     		bne	.L30
 1046              		.loc 1 382 0 is_stmt 0 discriminator 1
 1047 0246 134B     		ldr	r3, .L59+16
 1048 0248 1B68     		ldr	r3, [r3]
 1049 024a 002B     		cmp	r3, #0
 1050 024c 06D1     		bne	.L30
 383:.\main.c      ****             off_track = 0;
 1051              		.loc 1 383 0 is_stmt 1
 1052 024e 1C4B     		ldr	r3, .L59+60
 1053 0250 0022     		movs	r2, #0
 1054 0252 1A60     		str	r2, [r3]
 384:.\main.c      ****             off_track_counter = 0;
 1055              		.loc 1 384 0
 1056 0254 194B     		ldr	r3, .L59+56
 1057 0256 0022     		movs	r2, #0
 1058 0258 1A60     		str	r2, [r3]
 1059 025a 4FE0     		b	.L31
 1060              	.L30:
 385:.\main.c      ****         }
 386:.\main.c      ****         else if (nextNodeDirection(path_index) == DOWN && BOTTOM_RIGHT == 0) {
 1061              		.loc 1 386 0
 1062 025c 1A4B     		ldr	r3, .L59+68
 1063 025e 1B68     		ldr	r3, [r3]
 1064 0260 1846     		mov	r0, r3
 1065 0262 FFF7FEFF 		bl	nextNodeDirection
 1066 0266 0346     		mov	r3, r0
 1067 0268 042B     		cmp	r3, #4
 1068 026a 2FD1     		bne	.L32
 1069              		.loc 1 386 0 is_stmt 0 discriminator 1
 1070 026c 114B     		ldr	r3, .L59+48
 1071 026e 1B68     		ldr	r3, [r3]
 1072 0270 002B     		cmp	r3, #0
 1073 0272 2BD1     		bne	.L32
 387:.\main.c      ****             off_track = 0;
 1074              		.loc 1 387 0 is_stmt 1
 1075 0274 124B     		ldr	r3, .L59+60
 1076 0276 0022     		movs	r2, #0
 1077 0278 1A60     		str	r2, [r3]
 388:.\main.c      ****             off_track_counter = 0;
 1078              		.loc 1 388 0
 1079 027a 104B     		ldr	r3, .L59+56
 1080 027c 0022     		movs	r2, #0
 1081 027e 1A60     		str	r2, [r3]
 1082 0280 3CE0     		b	.L31
 1083              	.L60:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 27


 1084 0282 00BF     		.align	2
 1085              	.L59:
 1086 0284 0000F03F 		.word	1072693248
 1087 0288 00000000 		.word	ADC_0
 1088 028c 00000000 		.word	adc0_count
 1089 0290 00000000 		.word	timeout
 1090 0294 00000000 		.word	ADC_1
 1091 0298 00000000 		.word	adc1_count
 1092 029c 00000000 		.word	ADC_2
 1093 02a0 00000000 		.word	adc2_count
 1094 02a4 00000000 		.word	ADC_3
 1095 02a8 00000000 		.word	adc3_count
 1096 02ac 00000000 		.word	ADC_4
 1097 02b0 00000000 		.word	adc4_count
 1098 02b4 00000000 		.word	ADC_5
 1099 02b8 00000000 		.word	adc5_count
 1100 02bc 00000000 		.word	off_track_counter
 1101 02c0 00000000 		.word	off_track
 1102 02c4 00000000 		.word	orientation
 1103 02c8 00000000 		.word	path_index
 1104              	.L32:
 389:.\main.c      ****         }
 390:.\main.c      ****         else if (nextNodeDirection(path_index) == RIGHT || nextNodeDirection(path_index) == LEFT) {
 1105              		.loc 1 390 0
 1106 02cc 6F4B     		ldr	r3, .L61
 1107 02ce 1B68     		ldr	r3, [r3]
 1108 02d0 1846     		mov	r0, r3
 1109 02d2 FFF7FEFF 		bl	nextNodeDirection
 1110 02d6 0346     		mov	r3, r0
 1111 02d8 012B     		cmp	r3, #1
 1112 02da 08D0     		beq	.L33
 1113              		.loc 1 390 0 is_stmt 0 discriminator 1
 1114 02dc 6B4B     		ldr	r3, .L61
 1115 02de 1B68     		ldr	r3, [r3]
 1116 02e0 1846     		mov	r0, r3
 1117 02e2 FFF7FEFF 		bl	nextNodeDirection
 1118 02e6 0346     		mov	r3, r0
 1119 02e8 022B     		cmp	r3, #2
 1120 02ea 40F0CD80 		bne	.L1
 1121              	.L33:
 391:.\main.c      ****             off_track = 0;
 1122              		.loc 1 391 0 is_stmt 1
 1123 02ee 684B     		ldr	r3, .L61+4
 1124 02f0 0022     		movs	r2, #0
 1125 02f2 1A60     		str	r2, [r3]
 392:.\main.c      ****             off_track_counter = 0;
 1126              		.loc 1 392 0
 1127 02f4 674B     		ldr	r3, .L61+8
 1128 02f6 0022     		movs	r2, #0
 1129 02f8 1A60     		str	r2, [r3]
 1130 02fa C5E0     		b	.L1
 1131              	.L31:
 1132 02fc C4E0     		b	.L1
 1133              	.L29:
 393:.\main.c      ****         }
 394:.\main.c      ****     }
 395:.\main.c      ****     
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 28


 396:.\main.c      ****     else if (orientation == LEFT) {
 1134              		.loc 1 396 0
 1135 02fe 664B     		ldr	r3, .L61+12
 1136 0300 1B68     		ldr	r3, [r3]
 1137 0302 022B     		cmp	r3, #2
 1138 0304 3ED1     		bne	.L34
 397:.\main.c      ****         if (nextNodeDirection(path_index) == UP && BOTTOM_RIGHT == 0) {
 1139              		.loc 1 397 0
 1140 0306 614B     		ldr	r3, .L61
 1141 0308 1B68     		ldr	r3, [r3]
 1142 030a 1846     		mov	r0, r3
 1143 030c FFF7FEFF 		bl	nextNodeDirection
 1144 0310 0346     		mov	r3, r0
 1145 0312 032B     		cmp	r3, #3
 1146 0314 0AD1     		bne	.L35
 1147              		.loc 1 397 0 is_stmt 0 discriminator 1
 1148 0316 614B     		ldr	r3, .L61+16
 1149 0318 1B68     		ldr	r3, [r3]
 1150 031a 002B     		cmp	r3, #0
 1151 031c 06D1     		bne	.L35
 398:.\main.c      ****             off_track = 0;
 1152              		.loc 1 398 0 is_stmt 1
 1153 031e 5C4B     		ldr	r3, .L61+4
 1154 0320 0022     		movs	r2, #0
 1155 0322 1A60     		str	r2, [r3]
 399:.\main.c      ****             off_track_counter = 0;
 1156              		.loc 1 399 0
 1157 0324 5B4B     		ldr	r3, .L61+8
 1158 0326 0022     		movs	r2, #0
 1159 0328 1A60     		str	r2, [r3]
 1160 032a 2AE0     		b	.L36
 1161              	.L35:
 400:.\main.c      ****         }
 401:.\main.c      ****         else if (nextNodeDirection(path_index) == DOWN && BOTTOM_LEFT == 0) {
 1162              		.loc 1 401 0
 1163 032c 574B     		ldr	r3, .L61
 1164 032e 1B68     		ldr	r3, [r3]
 1165 0330 1846     		mov	r0, r3
 1166 0332 FFF7FEFF 		bl	nextNodeDirection
 1167 0336 0346     		mov	r3, r0
 1168 0338 042B     		cmp	r3, #4
 1169 033a 0AD1     		bne	.L37
 1170              		.loc 1 401 0 is_stmt 0 discriminator 1
 1171 033c 584B     		ldr	r3, .L61+20
 1172 033e 1B68     		ldr	r3, [r3]
 1173 0340 002B     		cmp	r3, #0
 1174 0342 06D1     		bne	.L37
 402:.\main.c      ****             off_track = 0;
 1175              		.loc 1 402 0 is_stmt 1
 1176 0344 524B     		ldr	r3, .L61+4
 1177 0346 0022     		movs	r2, #0
 1178 0348 1A60     		str	r2, [r3]
 403:.\main.c      ****             off_track_counter = 0;
 1179              		.loc 1 403 0
 1180 034a 524B     		ldr	r3, .L61+8
 1181 034c 0022     		movs	r2, #0
 1182 034e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 29


 1183 0350 17E0     		b	.L36
 1184              	.L37:
 404:.\main.c      ****         }
 405:.\main.c      ****         else if (nextNodeDirection(path_index) == RIGHT || nextNodeDirection(path_index) == LEFT) {
 1185              		.loc 1 405 0
 1186 0352 4E4B     		ldr	r3, .L61
 1187 0354 1B68     		ldr	r3, [r3]
 1188 0356 1846     		mov	r0, r3
 1189 0358 FFF7FEFF 		bl	nextNodeDirection
 1190 035c 0346     		mov	r3, r0
 1191 035e 012B     		cmp	r3, #1
 1192 0360 08D0     		beq	.L38
 1193              		.loc 1 405 0 is_stmt 0 discriminator 1
 1194 0362 4A4B     		ldr	r3, .L61
 1195 0364 1B68     		ldr	r3, [r3]
 1196 0366 1846     		mov	r0, r3
 1197 0368 FFF7FEFF 		bl	nextNodeDirection
 1198 036c 0346     		mov	r3, r0
 1199 036e 022B     		cmp	r3, #2
 1200 0370 40F08A80 		bne	.L1
 1201              	.L38:
 406:.\main.c      ****             off_track = 0;
 1202              		.loc 1 406 0 is_stmt 1
 1203 0374 464B     		ldr	r3, .L61+4
 1204 0376 0022     		movs	r2, #0
 1205 0378 1A60     		str	r2, [r3]
 407:.\main.c      ****             off_track_counter = 0;
 1206              		.loc 1 407 0
 1207 037a 464B     		ldr	r3, .L61+8
 1208 037c 0022     		movs	r2, #0
 1209 037e 1A60     		str	r2, [r3]
 1210 0380 82E0     		b	.L1
 1211              	.L36:
 1212 0382 81E0     		b	.L1
 1213              	.L34:
 408:.\main.c      ****         }
 409:.\main.c      ****     }
 410:.\main.c      ****     
 411:.\main.c      ****     else if (orientation == UP) {
 1214              		.loc 1 411 0
 1215 0384 444B     		ldr	r3, .L61+12
 1216 0386 1B68     		ldr	r3, [r3]
 1217 0388 032B     		cmp	r3, #3
 1218 038a 3DD1     		bne	.L39
 412:.\main.c      ****         if (nextNodeDirection(path_index) == RIGHT && BOTTOM_RIGHT == 0) {
 1219              		.loc 1 412 0
 1220 038c 3F4B     		ldr	r3, .L61
 1221 038e 1B68     		ldr	r3, [r3]
 1222 0390 1846     		mov	r0, r3
 1223 0392 FFF7FEFF 		bl	nextNodeDirection
 1224 0396 0346     		mov	r3, r0
 1225 0398 012B     		cmp	r3, #1
 1226 039a 0AD1     		bne	.L40
 1227              		.loc 1 412 0 is_stmt 0 discriminator 1
 1228 039c 3F4B     		ldr	r3, .L61+16
 1229 039e 1B68     		ldr	r3, [r3]
 1230 03a0 002B     		cmp	r3, #0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 30


 1231 03a2 06D1     		bne	.L40
 413:.\main.c      ****             off_track = 0;
 1232              		.loc 1 413 0 is_stmt 1
 1233 03a4 3A4B     		ldr	r3, .L61+4
 1234 03a6 0022     		movs	r2, #0
 1235 03a8 1A60     		str	r2, [r3]
 414:.\main.c      ****             off_track_counter = 0;
 1236              		.loc 1 414 0
 1237 03aa 3A4B     		ldr	r3, .L61+8
 1238 03ac 0022     		movs	r2, #0
 1239 03ae 1A60     		str	r2, [r3]
 1240 03b0 29E0     		b	.L41
 1241              	.L40:
 415:.\main.c      ****         }
 416:.\main.c      ****         else if (nextNodeDirection(path_index) == LEFT && BOTTOM_LEFT == 0) {
 1242              		.loc 1 416 0
 1243 03b2 364B     		ldr	r3, .L61
 1244 03b4 1B68     		ldr	r3, [r3]
 1245 03b6 1846     		mov	r0, r3
 1246 03b8 FFF7FEFF 		bl	nextNodeDirection
 1247 03bc 0346     		mov	r3, r0
 1248 03be 022B     		cmp	r3, #2
 1249 03c0 0AD1     		bne	.L42
 1250              		.loc 1 416 0 is_stmt 0 discriminator 1
 1251 03c2 374B     		ldr	r3, .L61+20
 1252 03c4 1B68     		ldr	r3, [r3]
 1253 03c6 002B     		cmp	r3, #0
 1254 03c8 06D1     		bne	.L42
 417:.\main.c      ****             off_track = 0;
 1255              		.loc 1 417 0 is_stmt 1
 1256 03ca 314B     		ldr	r3, .L61+4
 1257 03cc 0022     		movs	r2, #0
 1258 03ce 1A60     		str	r2, [r3]
 418:.\main.c      ****             off_track_counter = 0;
 1259              		.loc 1 418 0
 1260 03d0 304B     		ldr	r3, .L61+8
 1261 03d2 0022     		movs	r2, #0
 1262 03d4 1A60     		str	r2, [r3]
 1263 03d6 16E0     		b	.L41
 1264              	.L42:
 419:.\main.c      ****         }
 420:.\main.c      ****         else if (nextNodeDirection(path_index) == UP || nextNodeDirection(path_index) == DOWN) {
 1265              		.loc 1 420 0
 1266 03d8 2C4B     		ldr	r3, .L61
 1267 03da 1B68     		ldr	r3, [r3]
 1268 03dc 1846     		mov	r0, r3
 1269 03de FFF7FEFF 		bl	nextNodeDirection
 1270 03e2 0346     		mov	r3, r0
 1271 03e4 032B     		cmp	r3, #3
 1272 03e6 07D0     		beq	.L43
 1273              		.loc 1 420 0 is_stmt 0 discriminator 1
 1274 03e8 284B     		ldr	r3, .L61
 1275 03ea 1B68     		ldr	r3, [r3]
 1276 03ec 1846     		mov	r0, r3
 1277 03ee FFF7FEFF 		bl	nextNodeDirection
 1278 03f2 0346     		mov	r3, r0
 1279 03f4 042B     		cmp	r3, #4
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 31


 1280 03f6 47D1     		bne	.L1
 1281              	.L43:
 421:.\main.c      ****             off_track = 0;
 1282              		.loc 1 421 0 is_stmt 1
 1283 03f8 254B     		ldr	r3, .L61+4
 1284 03fa 0022     		movs	r2, #0
 1285 03fc 1A60     		str	r2, [r3]
 422:.\main.c      ****             off_track_counter = 0;
 1286              		.loc 1 422 0
 1287 03fe 254B     		ldr	r3, .L61+8
 1288 0400 0022     		movs	r2, #0
 1289 0402 1A60     		str	r2, [r3]
 1290 0404 40E0     		b	.L1
 1291              	.L41:
 1292 0406 3FE0     		b	.L1
 1293              	.L39:
 423:.\main.c      ****         }
 424:.\main.c      ****     }
 425:.\main.c      ****     
 426:.\main.c      ****     else if (orientation == DOWN) {
 1294              		.loc 1 426 0
 1295 0408 234B     		ldr	r3, .L61+12
 1296 040a 1B68     		ldr	r3, [r3]
 1297 040c 042B     		cmp	r3, #4
 1298 040e 3BD1     		bne	.L1
 427:.\main.c      ****         if (nextNodeDirection(path_index) == RIGHT && BOTTOM_LEFT == 0) {
 1299              		.loc 1 427 0
 1300 0410 1E4B     		ldr	r3, .L61
 1301 0412 1B68     		ldr	r3, [r3]
 1302 0414 1846     		mov	r0, r3
 1303 0416 FFF7FEFF 		bl	nextNodeDirection
 1304 041a 0346     		mov	r3, r0
 1305 041c 012B     		cmp	r3, #1
 1306 041e 0AD1     		bne	.L44
 1307              		.loc 1 427 0 is_stmt 0 discriminator 1
 1308 0420 1F4B     		ldr	r3, .L61+20
 1309 0422 1B68     		ldr	r3, [r3]
 1310 0424 002B     		cmp	r3, #0
 1311 0426 06D1     		bne	.L44
 428:.\main.c      ****             off_track = 0;
 1312              		.loc 1 428 0 is_stmt 1
 1313 0428 194B     		ldr	r3, .L61+4
 1314 042a 0022     		movs	r2, #0
 1315 042c 1A60     		str	r2, [r3]
 429:.\main.c      ****             off_track_counter = 0;
 1316              		.loc 1 429 0
 1317 042e 194B     		ldr	r3, .L61+8
 1318 0430 0022     		movs	r2, #0
 1319 0432 1A60     		str	r2, [r3]
 1320 0434 28E0     		b	.L1
 1321              	.L44:
 430:.\main.c      ****         }
 431:.\main.c      ****         else if (nextNodeDirection(path_index) == LEFT && BOTTOM_RIGHT == 0) {
 1322              		.loc 1 431 0
 1323 0436 154B     		ldr	r3, .L61
 1324 0438 1B68     		ldr	r3, [r3]
 1325 043a 1846     		mov	r0, r3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 32


 1326 043c FFF7FEFF 		bl	nextNodeDirection
 1327 0440 0346     		mov	r3, r0
 1328 0442 022B     		cmp	r3, #2
 1329 0444 0AD1     		bne	.L45
 1330              		.loc 1 431 0 is_stmt 0 discriminator 1
 1331 0446 154B     		ldr	r3, .L61+16
 1332 0448 1B68     		ldr	r3, [r3]
 1333 044a 002B     		cmp	r3, #0
 1334 044c 06D1     		bne	.L45
 432:.\main.c      ****             off_track = 0;
 1335              		.loc 1 432 0 is_stmt 1
 1336 044e 104B     		ldr	r3, .L61+4
 1337 0450 0022     		movs	r2, #0
 1338 0452 1A60     		str	r2, [r3]
 433:.\main.c      ****             off_track_counter = 0;
 1339              		.loc 1 433 0
 1340 0454 0F4B     		ldr	r3, .L61+8
 1341 0456 0022     		movs	r2, #0
 1342 0458 1A60     		str	r2, [r3]
 1343 045a 15E0     		b	.L1
 1344              	.L45:
 434:.\main.c      ****         }
 435:.\main.c      ****         else if (nextNodeDirection(path_index) == UP || nextNodeDirection(path_index) == DOWN) {
 1345              		.loc 1 435 0
 1346 045c 0B4B     		ldr	r3, .L61
 1347 045e 1B68     		ldr	r3, [r3]
 1348 0460 1846     		mov	r0, r3
 1349 0462 FFF7FEFF 		bl	nextNodeDirection
 1350 0466 0346     		mov	r3, r0
 1351 0468 032B     		cmp	r3, #3
 1352 046a 07D0     		beq	.L46
 1353              		.loc 1 435 0 is_stmt 0 discriminator 1
 1354 046c 074B     		ldr	r3, .L61
 1355 046e 1B68     		ldr	r3, [r3]
 1356 0470 1846     		mov	r0, r3
 1357 0472 FFF7FEFF 		bl	nextNodeDirection
 1358 0476 0346     		mov	r3, r0
 1359 0478 042B     		cmp	r3, #4
 1360 047a 05D1     		bne	.L1
 1361              	.L46:
 436:.\main.c      ****             off_track = 0;
 1362              		.loc 1 436 0 is_stmt 1
 1363 047c 044B     		ldr	r3, .L61+4
 1364 047e 0022     		movs	r2, #0
 1365 0480 1A60     		str	r2, [r3]
 437:.\main.c      ****             off_track_counter = 0;
 1366              		.loc 1 437 0
 1367 0482 044B     		ldr	r3, .L61+8
 1368 0484 0022     		movs	r2, #0
 1369 0486 1A60     		str	r2, [r3]
 1370              	.L1:
 438:.\main.c      ****         }
 439:.\main.c      ****     }
 440:.\main.c      **** }
 1371              		.loc 1 440 0
 1372 0488 80BD     		pop	{r7, pc}
 1373              	.L62:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 33


 1374 048a 00BF     		.align	2
 1375              	.L61:
 1376 048c 00000000 		.word	path_index
 1377 0490 00000000 		.word	off_track
 1378 0494 00000000 		.word	off_track_counter
 1379 0498 00000000 		.word	orientation
 1380 049c 00000000 		.word	ADC_5
 1381 04a0 00000000 		.word	ADC_1
 1382              		.cfi_endproc
 1383              	.LFE63:
 1384              		.size	check, .-check
 1385              		.section	.text.printing,"ax",%progbits
 1386              		.align	2
 1387              		.global	printing
 1388              		.thumb
 1389              		.thumb_func
 1390              		.type	printing, %function
 1391              	printing:
 1392              	.LFB64:
 441:.\main.c      **** 
 442:.\main.c      **** CY_ISR(printing) {
 1393              		.loc 1 442 0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 0
 1396              		@ frame_needed = 1, uses_anonymous_args = 0
 1397 0000 80B5     		push	{r7, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 00AF     		add	r7, sp, #0
 1402              		.cfi_def_cfa_register 7
 443:.\main.c      ****     
 444:.\main.c      ****     printingFlag = 1;
 1403              		.loc 1 444 0
 1404 0004 104B     		ldr	r3, .L67
 1405 0006 0122     		movs	r2, #1
 1406 0008 1A60     		str	r2, [r3]
 445:.\main.c      ****     Timer_2_ReadStatusRegister();
 1407              		.loc 1 445 0
 1408 000a FFF7FEFF 		bl	Timer_2_ReadStatusRegister
 446:.\main.c      ****     
 447:.\main.c      ****     if (turnDone == 1) {
 1409              		.loc 1 447 0
 1410 000e 0F4B     		ldr	r3, .L67+4
 1411 0010 1B68     		ldr	r3, [r3]
 1412 0012 012B     		cmp	r3, #1
 1413 0014 04D1     		bne	.L64
 448:.\main.c      ****         ++turnDone_delay;
 1414              		.loc 1 448 0
 1415 0016 0E4B     		ldr	r3, .L67+8
 1416 0018 1B68     		ldr	r3, [r3]
 1417 001a 0133     		adds	r3, r3, #1
 1418 001c 0C4A     		ldr	r2, .L67+8
 1419 001e 1360     		str	r3, [r2]
 1420              	.L64:
 449:.\main.c      ****     }
 450:.\main.c      ****     
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 34


 451:.\main.c      ****     if (turnDone_delay == 3) {
 1421              		.loc 1 451 0
 1422 0020 0B4B     		ldr	r3, .L67+8
 1423 0022 1B68     		ldr	r3, [r3]
 1424 0024 032B     		cmp	r3, #3
 1425 0026 0DD1     		bne	.L63
 452:.\main.c      ****         // After completing a turn, you can turn again only after getting out of the intersection.
 453:.\main.c      ****         if (BOTTOM_LEFT == 1 && BOTTOM_RIGHT == 1) {
 1426              		.loc 1 453 0
 1427 0028 0A4B     		ldr	r3, .L67+12
 1428 002a 1B68     		ldr	r3, [r3]
 1429 002c 012B     		cmp	r3, #1
 1430 002e 06D1     		bne	.L66
 1431              		.loc 1 453 0 is_stmt 0 discriminator 1
 1432 0030 094B     		ldr	r3, .L67+16
 1433 0032 1B68     		ldr	r3, [r3]
 1434 0034 012B     		cmp	r3, #1
 1435 0036 02D1     		bne	.L66
 454:.\main.c      ****             turnDone = 0;
 1436              		.loc 1 454 0 is_stmt 1
 1437 0038 044B     		ldr	r3, .L67+4
 1438 003a 0022     		movs	r2, #0
 1439 003c 1A60     		str	r2, [r3]
 1440              	.L66:
 455:.\main.c      ****         }
 456:.\main.c      ****         turnDone_delay = 0;
 1441              		.loc 1 456 0
 1442 003e 044B     		ldr	r3, .L67+8
 1443 0040 0022     		movs	r2, #0
 1444 0042 1A60     		str	r2, [r3]
 1445              	.L63:
 457:.\main.c      ****     }
 458:.\main.c      **** }
 1446              		.loc 1 458 0
 1447 0044 80BD     		pop	{r7, pc}
 1448              	.L68:
 1449 0046 00BF     		.align	2
 1450              	.L67:
 1451 0048 00000000 		.word	printingFlag
 1452 004c 00000000 		.word	turnDone
 1453 0050 00000000 		.word	turnDone_delay
 1454 0054 00000000 		.word	ADC_1
 1455 0058 00000000 		.word	ADC_5
 1456              		.cfi_endproc
 1457              	.LFE64:
 1458              		.size	printing, .-printing
 1459              		.section	.text.test_isr,"ax",%progbits
 1460              		.align	2
 1461              		.global	test_isr
 1462              		.thumb
 1463              		.thumb_func
 1464              		.type	test_isr, %function
 1465              	test_isr:
 1466              	.LFB65:
 459:.\main.c      **** 
 460:.\main.c      **** #define RECEIVING start_receiving &&(!end_receiving)
 461:.\main.c      **** 
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 35


 462:.\main.c      **** CY_ISR(test_isr){
 1467              		.loc 1 462 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 40
 1470              		@ frame_needed = 1, uses_anonymous_args = 0
 1471 0000 B0B5     		push	{r4, r5, r7, lr}
 1472              		.cfi_def_cfa_offset 16
 1473              		.cfi_offset 4, -16
 1474              		.cfi_offset 5, -12
 1475              		.cfi_offset 7, -8
 1476              		.cfi_offset 14, -4
 1477 0002 8AB0     		sub	sp, sp, #40
 1478              		.cfi_def_cfa_offset 56
 1479 0004 00AF     		add	r7, sp, #0
 1480              		.cfi_def_cfa_register 7
 463:.\main.c      ****     
 464:.\main.c      ****     uint8 character = UART_GetChar();
 1481              		.loc 1 464 0
 1482 0006 FFF7FEFF 		bl	UART_GetChar
 1483 000a 0346     		mov	r3, r0
 1484 000c 87F82730 		strb	r3, [r7, #39]
 465:.\main.c      ****     if (character =='#'){
 1485              		.loc 1 465 0
 1486 0010 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1487 0014 232B     		cmp	r3, #35
 1488 0016 34D1     		bne	.L70
 1489              	.LBB2:
 466:.\main.c      ****         vtype1 a={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 1490              		.loc 1 466 0
 1491 0018 3B1D     		adds	r3, r7, #4
 1492 001a 0022     		movs	r2, #0
 1493 001c 1A60     		str	r2, [r3]
 1494 001e 0433     		adds	r3, r3, #4
 1495 0020 0022     		movs	r2, #0
 1496 0022 1A60     		str	r2, [r3]
 1497 0024 0433     		adds	r3, r3, #4
 1498 0026 0022     		movs	r2, #0
 1499 0028 1A60     		str	r2, [r3]
 1500 002a 0433     		adds	r3, r3, #4
 1501 002c 0022     		movs	r2, #0
 1502 002e 1A60     		str	r2, [r3]
 1503 0030 0433     		adds	r3, r3, #4
 1504 0032 0022     		movs	r2, #0
 1505 0034 1A60     		str	r2, [r3]
 1506 0036 0433     		adds	r3, r3, #4
 1507 0038 0022     		movs	r2, #0
 1508 003a 1A60     		str	r2, [r3]
 1509 003c 0433     		adds	r3, r3, #4
 1510 003e 0022     		movs	r2, #0
 1511 0040 1A60     		str	r2, [r3]
 1512 0042 0433     		adds	r3, r3, #4
 1513 0044 0022     		movs	r2, #0
 1514 0046 1A60     		str	r2, [r3]
 1515 0048 0433     		adds	r3, r3, #4
 467:.\main.c      ****         RFdata = a;
 1516              		.loc 1 467 0
 1517 004a 4B4B     		ldr	r3, .L77
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 36


 1518 004c 1D46     		mov	r5, r3
 1519 004e 3C1D     		adds	r4, r7, #4
 1520 0050 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1521 0052 2860     		str	r0, [r5]	@ unaligned
 1522 0054 6960     		str	r1, [r5, #4]	@ unaligned
 1523 0056 AA60     		str	r2, [r5, #8]	@ unaligned
 1524 0058 EB60     		str	r3, [r5, #12]	@ unaligned
 1525 005a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 1526 005c 2861     		str	r0, [r5, #16]	@ unaligned
 1527 005e 6961     		str	r1, [r5, #20]	@ unaligned
 1528 0060 AA61     		str	r2, [r5, #24]	@ unaligned
 1529 0062 EB61     		str	r3, [r5, #28]	@ unaligned
 468:.\main.c      ****         start_receiving = TRUE;
 1530              		.loc 1 468 0
 1531 0064 454B     		ldr	r3, .L77+4
 1532 0066 0122     		movs	r2, #1
 1533 0068 1A60     		str	r2, [r3]
 469:.\main.c      ****         end_receiving = FALSE;
 1534              		.loc 1 469 0
 1535 006a 454B     		ldr	r3, .L77+8
 1536 006c 0022     		movs	r2, #0
 1537 006e 1A60     		str	r2, [r3]
 470:.\main.c      ****         commaCount=0;
 1538              		.loc 1 470 0
 1539 0070 444B     		ldr	r3, .L77+12
 1540 0072 0022     		movs	r2, #0
 1541 0074 1A60     		str	r2, [r3]
 471:.\main.c      ****          test++;
 1542              		.loc 1 471 0
 1543 0076 444B     		ldr	r3, .L77+16
 1544 0078 1B68     		ldr	r3, [r3]
 1545 007a 0133     		adds	r3, r3, #1
 1546 007c 424A     		ldr	r2, .L77+16
 1547 007e 1360     		str	r3, [r2]
 1548              	.LBE2:
 1549 0080 77E0     		b	.L69
 1550              	.L70:
 472:.\main.c      ****     }else if ( character == '\n'){
 1551              		.loc 1 472 0
 1552 0082 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1553 0086 0A2B     		cmp	r3, #10
 1554 0088 4CD1     		bne	.L72
 473:.\main.c      ****          end_receiving  = TRUE;
 1555              		.loc 1 473 0
 1556 008a 3D4B     		ldr	r3, .L77+8
 1557 008c 0122     		movs	r2, #1
 1558 008e 1A60     		str	r2, [r3]
 474:.\main.c      ****          start_receiving = FALSE;
 1559              		.loc 1 474 0
 1560 0090 3A4B     		ldr	r3, .L77+4
 1561 0092 0022     		movs	r2, #0
 1562 0094 1A60     		str	r2, [r3]
 475:.\main.c      ****         
 476:.\main.c      ****         // Gets RF information as soon as it's available.
 477:.\main.c      ****         currentRFpos.row = RFround(RFdata.robot_ypos);
 1563              		.loc 1 477 0
 1564 0096 384B     		ldr	r3, .L77
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 37


 1565 0098 9B88     		ldrh	r3, [r3, #4]
 1566 009a 1BB2     		sxth	r3, r3
 1567 009c 1846     		mov	r0, r3
 1568 009e FFF7FEFF 		bl	RFround
 1569 00a2 0346     		mov	r3, r0
 1570 00a4 DAB2     		uxtb	r2, r3
 1571 00a6 394B     		ldr	r3, .L77+20
 1572 00a8 1A70     		strb	r2, [r3]
 478:.\main.c      ****         currentRFpos.col = RFround(RFdata.robot_xpos);
 1573              		.loc 1 478 0
 1574 00aa 334B     		ldr	r3, .L77
 1575 00ac 5B88     		ldrh	r3, [r3, #2]
 1576 00ae 1BB2     		sxth	r3, r3
 1577 00b0 1846     		mov	r0, r3
 1578 00b2 FFF7FEFF 		bl	RFround
 1579 00b6 0346     		mov	r3, r0
 1580 00b8 DAB2     		uxtb	r2, r3
 1581 00ba 344B     		ldr	r3, .L77+20
 1582 00bc 5A70     		strb	r2, [r3, #1]
 479:.\main.c      ****         currentRForient = RFdata.robot_orientation/10;
 1583              		.loc 1 479 0
 1584 00be 2E4B     		ldr	r3, .L77
 1585 00c0 DB88     		ldrh	r3, [r3, #6]
 1586 00c2 1BB2     		sxth	r3, r3
 1587 00c4 324A     		ldr	r2, .L77+24
 1588 00c6 82FB0312 		smull	r1, r2, r2, r3
 1589 00ca 9210     		asrs	r2, r2, #2
 1590 00cc DB17     		asrs	r3, r3, #31
 1591 00ce D31A     		subs	r3, r2, r3
 1592 00d0 9BB2     		uxth	r3, r3
 1593 00d2 1BB2     		sxth	r3, r3
 1594 00d4 2F4A     		ldr	r2, .L77+28
 1595 00d6 1360     		str	r3, [r2]
 480:.\main.c      ****         
 481:.\main.c      ****         // Fixes some 180 bugs.
 482:.\main.c      ****         if (orientation == RIGHT && currentRForient >= 0 && currentRForient <= 90) {
 1596              		.loc 1 482 0
 1597 00d8 2F4B     		ldr	r3, .L77+32
 1598 00da 1B68     		ldr	r3, [r3]
 1599 00dc 012B     		cmp	r3, #1
 1600 00de 0ED1     		bne	.L73
 1601              		.loc 1 482 0 is_stmt 0 discriminator 1
 1602 00e0 2C4B     		ldr	r3, .L77+28
 1603 00e2 1B68     		ldr	r3, [r3]
 1604 00e4 002B     		cmp	r3, #0
 1605 00e6 0ADB     		blt	.L73
 1606              		.loc 1 482 0 discriminator 2
 1607 00e8 2A4B     		ldr	r3, .L77+28
 1608 00ea 1B68     		ldr	r3, [r3]
 1609 00ec 5A2B     		cmp	r3, #90
 1610 00ee 06DC     		bgt	.L73
 483:.\main.c      ****             currentRForient += 360;
 1611              		.loc 1 483 0 is_stmt 1
 1612 00f0 284B     		ldr	r3, .L77+28
 1613 00f2 1B68     		ldr	r3, [r3]
 1614 00f4 03F5B473 		add	r3, r3, #360
 1615 00f8 264A     		ldr	r2, .L77+28
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 38


 1616 00fa 1360     		str	r3, [r2]
 1617 00fc 39E0     		b	.L69
 1618              	.L73:
 484:.\main.c      ****         }
 485:.\main.c      ****         else if (orientation == UP && currentRForient >= 0 && currentRForient <= 180) {
 1619              		.loc 1 485 0
 1620 00fe 264B     		ldr	r3, .L77+32
 1621 0100 1B68     		ldr	r3, [r3]
 1622 0102 032B     		cmp	r3, #3
 1623 0104 35D1     		bne	.L69
 1624              		.loc 1 485 0 is_stmt 0 discriminator 1
 1625 0106 234B     		ldr	r3, .L77+28
 1626 0108 1B68     		ldr	r3, [r3]
 1627 010a 002B     		cmp	r3, #0
 1628 010c 31DB     		blt	.L69
 1629              		.loc 1 485 0 discriminator 2
 1630 010e 214B     		ldr	r3, .L77+28
 1631 0110 1B68     		ldr	r3, [r3]
 1632 0112 B42B     		cmp	r3, #180
 1633 0114 2DDC     		bgt	.L69
 486:.\main.c      ****             currentRForient += 360;
 1634              		.loc 1 486 0 is_stmt 1
 1635 0116 1F4B     		ldr	r3, .L77+28
 1636 0118 1B68     		ldr	r3, [r3]
 1637 011a 03F5B473 		add	r3, r3, #360
 1638 011e 1D4A     		ldr	r2, .L77+28
 1639 0120 1360     		str	r3, [r2]
 1640 0122 26E0     		b	.L69
 1641              	.L72:
 487:.\main.c      ****         }
 488:.\main.c      ****          
 489:.\main.c      ****     }else if ( character == ','){
 1642              		.loc 1 489 0
 1643 0124 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1644 0128 2C2B     		cmp	r3, #44
 1645 012a 05D1     		bne	.L75
 490:.\main.c      ****         commaCount= commaCount+1;
 1646              		.loc 1 490 0
 1647 012c 154B     		ldr	r3, .L77+12
 1648 012e 1B68     		ldr	r3, [r3]
 1649 0130 0133     		adds	r3, r3, #1
 1650 0132 144A     		ldr	r2, .L77+12
 1651 0134 1360     		str	r3, [r2]
 1652 0136 1CE0     		b	.L69
 1653              	.L75:
 491:.\main.c      ****     }else if (character == '-'){
 1654              		.loc 1 491 0
 1655 0138 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1656 013c 2D2B     		cmp	r3, #45
 1657 013e 03D1     		bne	.L76
 492:.\main.c      ****         negative = TRUE;
 1658              		.loc 1 492 0
 1659 0140 164B     		ldr	r3, .L77+36
 1660 0142 0122     		movs	r2, #1
 1661 0144 1A60     		str	r2, [r3]
 1662 0146 14E0     		b	.L69
 1663              	.L76:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 39


 493:.\main.c      ****     }else if (character == ']'||character == '['){
 1664              		.loc 1 493 0
 1665 0148 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1666 014c 5D2B     		cmp	r3, #93
 1667 014e 10D0     		beq	.L69
 1668              		.loc 1 493 0 is_stmt 0 discriminator 1
 1669 0150 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1670 0154 5B2B     		cmp	r3, #91
 1671 0156 0CD0     		beq	.L69
 494:.\main.c      **** 
 495:.\main.c      ****     }else {
 496:.\main.c      ****         if (RECEIVING) Receive_Data(character);
 1672              		.loc 1 496 0 is_stmt 1
 1673 0158 084B     		ldr	r3, .L77+4
 1674 015a 1B68     		ldr	r3, [r3]
 1675 015c 002B     		cmp	r3, #0
 1676 015e 08D0     		beq	.L69
 1677              		.loc 1 496 0 is_stmt 0 discriminator 1
 1678 0160 074B     		ldr	r3, .L77+8
 1679 0162 1B68     		ldr	r3, [r3]
 1680 0164 002B     		cmp	r3, #0
 1681 0166 04D1     		bne	.L69
 1682              		.loc 1 496 0 discriminator 2
 1683 0168 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 1684 016c 1846     		mov	r0, r3
 1685 016e FFF7FEFF 		bl	Receive_Data
 1686              	.L69:
 497:.\main.c      **** }
 498:.\main.c      **** }
 1687              		.loc 1 498 0 is_stmt 1
 1688 0172 2837     		adds	r7, r7, #40
 1689              		.cfi_def_cfa_offset 16
 1690 0174 BD46     		mov	sp, r7
 1691              		.cfi_def_cfa_register 13
 1692              		@ sp needed
 1693 0176 B0BD     		pop	{r4, r5, r7, pc}
 1694              	.L78:
 1695              		.align	2
 1696              	.L77:
 1697 0178 00000000 		.word	RFdata
 1698 017c 00000000 		.word	start_receiving
 1699 0180 00000000 		.word	end_receiving
 1700 0184 00000000 		.word	commaCount
 1701 0188 00000000 		.word	test
 1702 018c 00000000 		.word	currentRFpos
 1703 0190 67666666 		.word	1717986919
 1704 0194 00000000 		.word	currentRForient
 1705 0198 00000000 		.word	orientation
 1706 019c 00000000 		.word	negative
 1707              		.cfi_endproc
 1708              	.LFE65:
 1709              		.size	test_isr, .-test_isr
 1710              		.section	.text.Receive_Data,"ax",%progbits
 1711              		.align	2
 1712              		.global	Receive_Data
 1713              		.thumb
 1714              		.thumb_func
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 40


 1715              		.type	Receive_Data, %function
 1716              	Receive_Data:
 1717              	.LFB66:
 499:.\main.c      **** 
 500:.\main.c      **** 
 501:.\main.c      **** 
 502:.\main.c      **** 
 503:.\main.c      **** 
 504:.\main.c      **** /*
 505:.\main.c      **** ooooo     ooo       .o.       ooooooooo.   ooooooooooooo  .oooooo..o 
 506:.\main.c      **** `888'     `8'      .888.      `888   `Y88. 8'   888   `8 d8P'    `Y8 
 507:.\main.c      ****  888       8      .8"888.      888   .d88'      888      Y88bo.      
 508:.\main.c      ****  888       8     .8' `888.     888ooo88P'       888       `"Y8888o.  
 509:.\main.c      ****  888       8    .88ooo8888.    888`88b.         888           `"Y88b 
 510:.\main.c      ****  `88.    .8'   .8'     `888.   888  `88b.       888      oo     .d8P 
 511:.\main.c      ****    `YbodP'    o88o     o8888o o888o  o888o     o888o     8""88888P' 
 512:.\main.c      **** */
 513:.\main.c      **** 
 514:.\main.c      **** void Receive_Data(uint8 c){
 1718              		.loc 1 514 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 8
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 80B5     		push	{r7, lr}
 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 82B0     		sub	sp, sp, #8
 1727              		.cfi_def_cfa_offset 16
 1728 0004 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 1730 0006 0346     		mov	r3, r0
 1731 0008 FB71     		strb	r3, [r7, #7]
 515:.\main.c      ****     switch (commaCount){
 1732              		.loc 1 515 0
 1733 000a 984B     		ldr	r3, .L101
 1734 000c 1B68     		ldr	r3, [r3]
 1735 000e 102B     		cmp	r3, #16
 1736 0010 00F22881 		bhi	.L100
 1737 0014 01A2     		adr	r2, .L82
 1738 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1739 001a 00BF     		.p2align 2
 1740              	.L82:
 1741 001c 61000000 		.word	.L81+1
 1742 0020 83000000 		.word	.L83+1
 1743 0024 A3000000 		.word	.L84+1
 1744 0028 C1000000 		.word	.L85+1
 1745 002c DF000000 		.word	.L86+1
 1746 0030 FD000000 		.word	.L87+1
 1747 0034 1B010000 		.word	.L88+1
 1748 0038 39010000 		.word	.L89+1
 1749 003c 57010000 		.word	.L90+1
 1750 0040 75010000 		.word	.L91+1
 1751 0044 93010000 		.word	.L92+1
 1752 0048 B1010000 		.word	.L93+1
 1753 004c CF010000 		.word	.L94+1
 1754 0050 ED010000 		.word	.L95+1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 41


 1755 0054 0B020000 		.word	.L96+1
 1756 0058 29020000 		.word	.L97+1
 1757 005c 47020000 		.word	.L98+1
 1758              		.p2align 1
 1759              	.L81:
 516:.\main.c      ****         case 0 :
 517:.\main.c      ****             RFdata.rssi = concatenate(RFdata.rssi, c-48);
 1760              		.loc 1 517 0
 1761 0060 834B     		ldr	r3, .L101+4
 1762 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1763 0064 5BB2     		sxtb	r3, r3
 1764 0066 9AB2     		uxth	r2, r3
 1765 0068 FB79     		ldrb	r3, [r7, #7]
 1766 006a 303B     		subs	r3, r3, #48
 1767 006c DBB2     		uxtb	r3, r3
 1768 006e 12B2     		sxth	r2, r2
 1769 0070 1046     		mov	r0, r2
 1770 0072 1946     		mov	r1, r3
 1771 0074 FFF7FEFF 		bl	concatenate
 1772 0078 0346     		mov	r3, r0
 1773 007a DAB2     		uxtb	r2, r3
 1774 007c 7C4B     		ldr	r3, .L101+4
 1775 007e 1A70     		strb	r2, [r3]
 518:.\main.c      ****         break;
 1776              		.loc 1 518 0
 1777 0080 F1E0     		b	.L79
 1778              	.L83:
 519:.\main.c      ****         case 1 :
 520:.\main.c      ****             RFdata.index = concatenate(RFdata.index, c-48);
 1779              		.loc 1 520 0
 1780 0082 7B4B     		ldr	r3, .L101+4
 1781 0084 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1782 0086 9AB2     		uxth	r2, r3
 1783 0088 FB79     		ldrb	r3, [r7, #7]
 1784 008a 303B     		subs	r3, r3, #48
 1785 008c DBB2     		uxtb	r3, r3
 1786 008e 12B2     		sxth	r2, r2
 1787 0090 1046     		mov	r0, r2
 1788 0092 1946     		mov	r1, r3
 1789 0094 FFF7FEFF 		bl	concatenate
 1790 0098 0346     		mov	r3, r0
 1791 009a DAB2     		uxtb	r2, r3
 1792 009c 744B     		ldr	r3, .L101+4
 1793 009e 5A70     		strb	r2, [r3, #1]
 521:.\main.c      ****         break;
 1794              		.loc 1 521 0
 1795 00a0 E1E0     		b	.L79
 1796              	.L84:
 522:.\main.c      ****         case 2 :
 523:.\main.c      ****             RFdata.robot_xpos = concatenate(RFdata.robot_xpos, c-48);
 1797              		.loc 1 523 0
 1798 00a2 734B     		ldr	r3, .L101+4
 1799 00a4 5A88     		ldrh	r2, [r3, #2]
 1800 00a6 FB79     		ldrb	r3, [r7, #7]
 1801 00a8 303B     		subs	r3, r3, #48
 1802 00aa DBB2     		uxtb	r3, r3
 1803 00ac 12B2     		sxth	r2, r2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 42


 1804 00ae 1046     		mov	r0, r2
 1805 00b0 1946     		mov	r1, r3
 1806 00b2 FFF7FEFF 		bl	concatenate
 1807 00b6 0346     		mov	r3, r0
 1808 00b8 1A46     		mov	r2, r3
 1809 00ba 6D4B     		ldr	r3, .L101+4
 1810 00bc 5A80     		strh	r2, [r3, #2]	@ movhi
 524:.\main.c      ****         break;
 1811              		.loc 1 524 0
 1812 00be D2E0     		b	.L79
 1813              	.L85:
 525:.\main.c      ****         case 3 :
 526:.\main.c      ****             RFdata.robot_ypos = concatenate(RFdata.robot_ypos, c-48);
 1814              		.loc 1 526 0
 1815 00c0 6B4B     		ldr	r3, .L101+4
 1816 00c2 9A88     		ldrh	r2, [r3, #4]
 1817 00c4 FB79     		ldrb	r3, [r7, #7]
 1818 00c6 303B     		subs	r3, r3, #48
 1819 00c8 DBB2     		uxtb	r3, r3
 1820 00ca 12B2     		sxth	r2, r2
 1821 00cc 1046     		mov	r0, r2
 1822 00ce 1946     		mov	r1, r3
 1823 00d0 FFF7FEFF 		bl	concatenate
 1824 00d4 0346     		mov	r3, r0
 1825 00d6 1A46     		mov	r2, r3
 1826 00d8 654B     		ldr	r3, .L101+4
 1827 00da 9A80     		strh	r2, [r3, #4]	@ movhi
 527:.\main.c      ****         break;
 1828              		.loc 1 527 0
 1829 00dc C3E0     		b	.L79
 1830              	.L86:
 528:.\main.c      ****         case 4 :
 529:.\main.c      ****             RFdata.robot_orientation = concatenate(RFdata.robot_orientation, c-48);
 1831              		.loc 1 529 0
 1832 00de 644B     		ldr	r3, .L101+4
 1833 00e0 DA88     		ldrh	r2, [r3, #6]
 1834 00e2 FB79     		ldrb	r3, [r7, #7]
 1835 00e4 303B     		subs	r3, r3, #48
 1836 00e6 DBB2     		uxtb	r3, r3
 1837 00e8 12B2     		sxth	r2, r2
 1838 00ea 1046     		mov	r0, r2
 1839 00ec 1946     		mov	r1, r3
 1840 00ee FFF7FEFF 		bl	concatenate
 1841 00f2 0346     		mov	r3, r0
 1842 00f4 1A46     		mov	r2, r3
 1843 00f6 5E4B     		ldr	r3, .L101+4
 1844 00f8 DA80     		strh	r2, [r3, #6]	@ movhi
 530:.\main.c      ****         break;
 1845              		.loc 1 530 0
 1846 00fa B4E0     		b	.L79
 1847              	.L87:
 531:.\main.c      ****         case 5 :
 532:.\main.c      ****             RFdata.g0_xpos = concatenate(RFdata.g0_xpos, c-48);
 1848              		.loc 1 532 0
 1849 00fc 5C4B     		ldr	r3, .L101+4
 1850 00fe 1A89     		ldrh	r2, [r3, #8]
 1851 0100 FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 43


 1852 0102 303B     		subs	r3, r3, #48
 1853 0104 DBB2     		uxtb	r3, r3
 1854 0106 12B2     		sxth	r2, r2
 1855 0108 1046     		mov	r0, r2
 1856 010a 1946     		mov	r1, r3
 1857 010c FFF7FEFF 		bl	concatenate
 1858 0110 0346     		mov	r3, r0
 1859 0112 1A46     		mov	r2, r3
 1860 0114 564B     		ldr	r3, .L101+4
 1861 0116 1A81     		strh	r2, [r3, #8]	@ movhi
 533:.\main.c      ****         break;
 1862              		.loc 1 533 0
 1863 0118 A5E0     		b	.L79
 1864              	.L88:
 534:.\main.c      ****         case 6 :
 535:.\main.c      ****             RFdata.g0_ypos = concatenate(RFdata.g0_ypos, c-48);
 1865              		.loc 1 535 0
 1866 011a 554B     		ldr	r3, .L101+4
 1867 011c 5A89     		ldrh	r2, [r3, #10]
 1868 011e FB79     		ldrb	r3, [r7, #7]
 1869 0120 303B     		subs	r3, r3, #48
 1870 0122 DBB2     		uxtb	r3, r3
 1871 0124 12B2     		sxth	r2, r2
 1872 0126 1046     		mov	r0, r2
 1873 0128 1946     		mov	r1, r3
 1874 012a FFF7FEFF 		bl	concatenate
 1875 012e 0346     		mov	r3, r0
 1876 0130 1A46     		mov	r2, r3
 1877 0132 4F4B     		ldr	r3, .L101+4
 1878 0134 5A81     		strh	r2, [r3, #10]	@ movhi
 536:.\main.c      ****         break;
 1879              		.loc 1 536 0
 1880 0136 96E0     		b	.L79
 1881              	.L89:
 537:.\main.c      ****         case 7 :
 538:.\main.c      ****             RFdata.g0_speed = concatenate(RFdata.g0_speed, c-48);
 1882              		.loc 1 538 0
 1883 0138 4D4B     		ldr	r3, .L101+4
 1884 013a 9A89     		ldrh	r2, [r3, #12]
 1885 013c FB79     		ldrb	r3, [r7, #7]
 1886 013e 303B     		subs	r3, r3, #48
 1887 0140 DBB2     		uxtb	r3, r3
 1888 0142 12B2     		sxth	r2, r2
 1889 0144 1046     		mov	r0, r2
 1890 0146 1946     		mov	r1, r3
 1891 0148 FFF7FEFF 		bl	concatenate
 1892 014c 0346     		mov	r3, r0
 1893 014e 1A46     		mov	r2, r3
 1894 0150 474B     		ldr	r3, .L101+4
 1895 0152 9A81     		strh	r2, [r3, #12]	@ movhi
 539:.\main.c      ****         break;
 1896              		.loc 1 539 0
 1897 0154 87E0     		b	.L79
 1898              	.L90:
 540:.\main.c      ****         case 8 :
 541:.\main.c      ****             RFdata.g0_direction = concatenate(RFdata.g0_direction, c-48);
 1899              		.loc 1 541 0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 44


 1900 0156 464B     		ldr	r3, .L101+4
 1901 0158 DA89     		ldrh	r2, [r3, #14]
 1902 015a FB79     		ldrb	r3, [r7, #7]
 1903 015c 303B     		subs	r3, r3, #48
 1904 015e DBB2     		uxtb	r3, r3
 1905 0160 12B2     		sxth	r2, r2
 1906 0162 1046     		mov	r0, r2
 1907 0164 1946     		mov	r1, r3
 1908 0166 FFF7FEFF 		bl	concatenate
 1909 016a 0346     		mov	r3, r0
 1910 016c 1A46     		mov	r2, r3
 1911 016e 404B     		ldr	r3, .L101+4
 1912 0170 DA81     		strh	r2, [r3, #14]	@ movhi
 542:.\main.c      ****         break;
 1913              		.loc 1 542 0
 1914 0172 78E0     		b	.L79
 1915              	.L91:
 543:.\main.c      ****         case 9 :
 544:.\main.c      ****             RFdata.g1_xpos = concatenate(RFdata.g1_xpos, c-48);
 1916              		.loc 1 544 0
 1917 0174 3E4B     		ldr	r3, .L101+4
 1918 0176 1A8A     		ldrh	r2, [r3, #16]
 1919 0178 FB79     		ldrb	r3, [r7, #7]
 1920 017a 303B     		subs	r3, r3, #48
 1921 017c DBB2     		uxtb	r3, r3
 1922 017e 12B2     		sxth	r2, r2
 1923 0180 1046     		mov	r0, r2
 1924 0182 1946     		mov	r1, r3
 1925 0184 FFF7FEFF 		bl	concatenate
 1926 0188 0346     		mov	r3, r0
 1927 018a 1A46     		mov	r2, r3
 1928 018c 384B     		ldr	r3, .L101+4
 1929 018e 1A82     		strh	r2, [r3, #16]	@ movhi
 545:.\main.c      ****         break;
 1930              		.loc 1 545 0
 1931 0190 69E0     		b	.L79
 1932              	.L92:
 546:.\main.c      ****         case 10 :
 547:.\main.c      ****             RFdata.g1_ypos = concatenate(RFdata.g1_ypos, c-48);
 1933              		.loc 1 547 0
 1934 0192 374B     		ldr	r3, .L101+4
 1935 0194 5A8A     		ldrh	r2, [r3, #18]
 1936 0196 FB79     		ldrb	r3, [r7, #7]
 1937 0198 303B     		subs	r3, r3, #48
 1938 019a DBB2     		uxtb	r3, r3
 1939 019c 12B2     		sxth	r2, r2
 1940 019e 1046     		mov	r0, r2
 1941 01a0 1946     		mov	r1, r3
 1942 01a2 FFF7FEFF 		bl	concatenate
 1943 01a6 0346     		mov	r3, r0
 1944 01a8 1A46     		mov	r2, r3
 1945 01aa 314B     		ldr	r3, .L101+4
 1946 01ac 5A82     		strh	r2, [r3, #18]	@ movhi
 548:.\main.c      ****         break;
 1947              		.loc 1 548 0
 1948 01ae 5AE0     		b	.L79
 1949              	.L93:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 45


 549:.\main.c      ****         case 11 :
 550:.\main.c      ****             RFdata.g1_speed = concatenate(RFdata.g1_speed, c-48);
 1950              		.loc 1 550 0
 1951 01b0 2F4B     		ldr	r3, .L101+4
 1952 01b2 9A8A     		ldrh	r2, [r3, #20]
 1953 01b4 FB79     		ldrb	r3, [r7, #7]
 1954 01b6 303B     		subs	r3, r3, #48
 1955 01b8 DBB2     		uxtb	r3, r3
 1956 01ba 12B2     		sxth	r2, r2
 1957 01bc 1046     		mov	r0, r2
 1958 01be 1946     		mov	r1, r3
 1959 01c0 FFF7FEFF 		bl	concatenate
 1960 01c4 0346     		mov	r3, r0
 1961 01c6 1A46     		mov	r2, r3
 1962 01c8 294B     		ldr	r3, .L101+4
 1963 01ca 9A82     		strh	r2, [r3, #20]	@ movhi
 551:.\main.c      ****         break;
 1964              		.loc 1 551 0
 1965 01cc 4BE0     		b	.L79
 1966              	.L94:
 552:.\main.c      ****         case 12 :
 553:.\main.c      ****             RFdata.g1_direction = concatenate(RFdata.g1_direction, c-48);
 1967              		.loc 1 553 0
 1968 01ce 284B     		ldr	r3, .L101+4
 1969 01d0 DA8A     		ldrh	r2, [r3, #22]
 1970 01d2 FB79     		ldrb	r3, [r7, #7]
 1971 01d4 303B     		subs	r3, r3, #48
 1972 01d6 DBB2     		uxtb	r3, r3
 1973 01d8 12B2     		sxth	r2, r2
 1974 01da 1046     		mov	r0, r2
 1975 01dc 1946     		mov	r1, r3
 1976 01de FFF7FEFF 		bl	concatenate
 1977 01e2 0346     		mov	r3, r0
 1978 01e4 1A46     		mov	r2, r3
 1979 01e6 224B     		ldr	r3, .L101+4
 1980 01e8 DA82     		strh	r2, [r3, #22]	@ movhi
 554:.\main.c      ****         break;
 1981              		.loc 1 554 0
 1982 01ea 3CE0     		b	.L79
 1983              	.L95:
 555:.\main.c      ****         case 13 :
 556:.\main.c      ****             RFdata.g2_xpos = concatenate(RFdata.g2_xpos, c-48);
 1984              		.loc 1 556 0
 1985 01ec 204B     		ldr	r3, .L101+4
 1986 01ee 1A8B     		ldrh	r2, [r3, #24]
 1987 01f0 FB79     		ldrb	r3, [r7, #7]
 1988 01f2 303B     		subs	r3, r3, #48
 1989 01f4 DBB2     		uxtb	r3, r3
 1990 01f6 12B2     		sxth	r2, r2
 1991 01f8 1046     		mov	r0, r2
 1992 01fa 1946     		mov	r1, r3
 1993 01fc FFF7FEFF 		bl	concatenate
 1994 0200 0346     		mov	r3, r0
 1995 0202 1A46     		mov	r2, r3
 1996 0204 1A4B     		ldr	r3, .L101+4
 1997 0206 1A83     		strh	r2, [r3, #24]	@ movhi
 557:.\main.c      ****         break;
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 46


 1998              		.loc 1 557 0
 1999 0208 2DE0     		b	.L79
 2000              	.L96:
 558:.\main.c      ****         case 14 :
 559:.\main.c      ****             RFdata.g2_ypos = concatenate(RFdata.g2_ypos, c-48);
 2001              		.loc 1 559 0
 2002 020a 194B     		ldr	r3, .L101+4
 2003 020c 5A8B     		ldrh	r2, [r3, #26]
 2004 020e FB79     		ldrb	r3, [r7, #7]
 2005 0210 303B     		subs	r3, r3, #48
 2006 0212 DBB2     		uxtb	r3, r3
 2007 0214 12B2     		sxth	r2, r2
 2008 0216 1046     		mov	r0, r2
 2009 0218 1946     		mov	r1, r3
 2010 021a FFF7FEFF 		bl	concatenate
 2011 021e 0346     		mov	r3, r0
 2012 0220 1A46     		mov	r2, r3
 2013 0222 134B     		ldr	r3, .L101+4
 2014 0224 5A83     		strh	r2, [r3, #26]	@ movhi
 560:.\main.c      ****         break;
 2015              		.loc 1 560 0
 2016 0226 1EE0     		b	.L79
 2017              	.L97:
 561:.\main.c      ****         case 15 :
 562:.\main.c      ****             RFdata.g2_speed = concatenate(RFdata.g2_speed, c-48);
 2018              		.loc 1 562 0
 2019 0228 114B     		ldr	r3, .L101+4
 2020 022a 9A8B     		ldrh	r2, [r3, #28]
 2021 022c FB79     		ldrb	r3, [r7, #7]
 2022 022e 303B     		subs	r3, r3, #48
 2023 0230 DBB2     		uxtb	r3, r3
 2024 0232 12B2     		sxth	r2, r2
 2025 0234 1046     		mov	r0, r2
 2026 0236 1946     		mov	r1, r3
 2027 0238 FFF7FEFF 		bl	concatenate
 2028 023c 0346     		mov	r3, r0
 2029 023e 1A46     		mov	r2, r3
 2030 0240 0B4B     		ldr	r3, .L101+4
 2031 0242 9A83     		strh	r2, [r3, #28]	@ movhi
 563:.\main.c      ****         break;
 2032              		.loc 1 563 0
 2033 0244 0FE0     		b	.L79
 2034              	.L98:
 564:.\main.c      ****         case 16 :
 565:.\main.c      ****             RFdata.g2_direction = concatenate(RFdata.g2_direction, c-48);
 2035              		.loc 1 565 0
 2036 0246 0A4B     		ldr	r3, .L101+4
 2037 0248 DA8B     		ldrh	r2, [r3, #30]
 2038 024a FB79     		ldrb	r3, [r7, #7]
 2039 024c 303B     		subs	r3, r3, #48
 2040 024e DBB2     		uxtb	r3, r3
 2041 0250 12B2     		sxth	r2, r2
 2042 0252 1046     		mov	r0, r2
 2043 0254 1946     		mov	r1, r3
 2044 0256 FFF7FEFF 		bl	concatenate
 2045 025a 0346     		mov	r3, r0
 2046 025c 1A46     		mov	r2, r3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 47


 2047 025e 044B     		ldr	r3, .L101+4
 2048 0260 DA83     		strh	r2, [r3, #30]	@ movhi
 566:.\main.c      ****         break;
 2049              		.loc 1 566 0
 2050 0262 00E0     		b	.L79
 2051              	.L100:
 567:.\main.c      ****         default:
 568:.\main.c      ****         return;
 2052              		.loc 1 568 0
 2053 0264 00BF     		nop
 2054              	.L79:
 569:.\main.c      **** 
 570:.\main.c      ****     }
 571:.\main.c      **** }
 2055              		.loc 1 571 0
 2056 0266 0837     		adds	r7, r7, #8
 2057              		.cfi_def_cfa_offset 8
 2058 0268 BD46     		mov	sp, r7
 2059              		.cfi_def_cfa_register 13
 2060              		@ sp needed
 2061 026a 80BD     		pop	{r7, pc}
 2062              	.L102:
 2063              		.align	2
 2064              	.L101:
 2065 026c 00000000 		.word	commaCount
 2066 0270 00000000 		.word	RFdata
 2067              		.cfi_endproc
 2068              	.LFE66:
 2069              		.size	Receive_Data, .-Receive_Data
 2070              		.section	.text.concatenate,"ax",%progbits
 2071              		.align	2
 2072              		.global	concatenate
 2073              		.thumb
 2074              		.thumb_func
 2075              		.type	concatenate, %function
 2076              	concatenate:
 2077              	.LFB67:
 572:.\main.c      **** 
 573:.\main.c      **** int16 concatenate(int16 a,uint8 b){
 2078              		.loc 1 573 0
 2079              		.cfi_startproc
 2080              		@ args = 0, pretend = 0, frame = 8
 2081              		@ frame_needed = 1, uses_anonymous_args = 0
 2082              		@ link register save eliminated.
 2083 0000 80B4     		push	{r7}
 2084              		.cfi_def_cfa_offset 4
 2085              		.cfi_offset 7, -4
 2086 0002 83B0     		sub	sp, sp, #12
 2087              		.cfi_def_cfa_offset 16
 2088 0004 00AF     		add	r7, sp, #0
 2089              		.cfi_def_cfa_register 7
 2090 0006 0346     		mov	r3, r0
 2091 0008 0A46     		mov	r2, r1
 2092 000a FB80     		strh	r3, [r7, #6]	@ movhi
 2093 000c 1346     		mov	r3, r2
 2094 000e 7B71     		strb	r3, [r7, #5]
 574:.\main.c      ****     if(negative){
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 48


 2095              		.loc 1 574 0
 2096 0010 174B     		ldr	r3, .L108
 2097 0012 1B68     		ldr	r3, [r3]
 2098 0014 002B     		cmp	r3, #0
 2099 0016 08D0     		beq	.L104
 575:.\main.c      ****         negative = FALSE;  
 2100              		.loc 1 575 0
 2101 0018 154B     		ldr	r3, .L108
 2102 001a 0022     		movs	r2, #0
 2103 001c 1A60     		str	r2, [r3]
 576:.\main.c      ****         a = -b;
 2104              		.loc 1 576 0
 2105 001e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2106 0020 9BB2     		uxth	r3, r3
 2107 0022 5B42     		negs	r3, r3
 2108 0024 9BB2     		uxth	r3, r3
 2109 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 2110 0028 1AE0     		b	.L105
 2111              	.L104:
 577:.\main.c      ****     }
 578:.\main.c      ****     else if(a<0){
 2112              		.loc 1 578 0
 2113 002a B7F90630 		ldrsh	r3, [r7, #6]
 2114 002e 002B     		cmp	r3, #0
 2115 0030 0BDA     		bge	.L106
 579:.\main.c      ****         a = a*10-b;   
 2116              		.loc 1 579 0
 2117 0032 FB88     		ldrh	r3, [r7, #6]
 2118 0034 1A46     		mov	r2, r3	@ movhi
 2119 0036 9200     		lsls	r2, r2, #2
 2120 0038 1344     		add	r3, r3, r2
 2121 003a 5B00     		lsls	r3, r3, #1
 2122 003c 9AB2     		uxth	r2, r3
 2123 003e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2124 0040 9BB2     		uxth	r3, r3
 2125 0042 D31A     		subs	r3, r2, r3
 2126 0044 9BB2     		uxth	r3, r3
 2127 0046 FB80     		strh	r3, [r7, #6]	@ movhi
 2128 0048 0AE0     		b	.L105
 2129              	.L106:
 580:.\main.c      ****     }
 581:.\main.c      ****     else{
 582:.\main.c      ****         a = a*10+b;
 2130              		.loc 1 582 0
 2131 004a FB88     		ldrh	r3, [r7, #6]
 2132 004c 1A46     		mov	r2, r3	@ movhi
 2133 004e 9200     		lsls	r2, r2, #2
 2134 0050 1344     		add	r3, r3, r2
 2135 0052 5B00     		lsls	r3, r3, #1
 2136 0054 9AB2     		uxth	r2, r3
 2137 0056 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2138 0058 9BB2     		uxth	r3, r3
 2139 005a 1344     		add	r3, r3, r2
 2140 005c 9BB2     		uxth	r3, r3
 2141 005e FB80     		strh	r3, [r7, #6]	@ movhi
 2142              	.L105:
 583:.\main.c      ****     }
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 49


 584:.\main.c      ****     return a;
 2143              		.loc 1 584 0
 2144 0060 FB88     		ldrh	r3, [r7, #6]
 2145 0062 1BB2     		sxth	r3, r3
 585:.\main.c      **** }
 2146              		.loc 1 585 0
 2147 0064 1846     		mov	r0, r3
 2148 0066 0C37     		adds	r7, r7, #12
 2149              		.cfi_def_cfa_offset 4
 2150 0068 BD46     		mov	sp, r7
 2151              		.cfi_def_cfa_register 13
 2152              		@ sp needed
 2153 006a 5DF8047B 		ldr	r7, [sp], #4
 2154              		.cfi_restore 7
 2155              		.cfi_def_cfa_offset 0
 2156 006e 7047     		bx	lr
 2157              	.L109:
 2158              		.align	2
 2159              	.L108:
 2160 0070 00000000 		.word	negative
 2161              		.cfi_endproc
 2162              	.LFE67:
 2163              		.size	concatenate, .-concatenate
 2164              		.global	__aeabi_f2d
 2165              		.section	.text.calculateADC,"ax",%progbits
 2166              		.align	2
 2167              		.global	calculateADC
 2168              		.thumb
 2169              		.thumb_func
 2170              		.type	calculateADC, %function
 2171              	calculateADC:
 2172              	.LFB68:
 586:.\main.c      **** 
 587:.\main.c      **** 
 588:.\main.c      **** 
 589:.\main.c      **** 
 590:.\main.c      **** 
 591:.\main.c      **** /*
 592:.\main.c      ****   .oooooo.       .   oooo                                    
 593:.\main.c      ****  d8P'  `Y8b    .o8   `888                                    
 594:.\main.c      **** 888      888 .o888oo  888 .oo.    .ooooo.  oooo d8b  .oooo.o 
 595:.\main.c      **** 888      888   888    888P"Y88b  d88' `88b `888""8P d88(  "8 
 596:.\main.c      **** 888      888   888    888   888  888ooo888  888     `"Y88b.  
 597:.\main.c      **** `88b    d88'   888 .  888   888  888    .o  888     o.  )88b 
 598:.\main.c      ****  `Y8bood8P'    "888" o888o o888o `Y8bod8P' d888b    8""888P'
 599:.\main.c      **** */
 600:.\main.c      **** 
 601:.\main.c      **** double calculateADC(int ADC) {
 2173              		.loc 1 601 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 16
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177 0000 80B5     		push	{r7, lr}
 2178              		.cfi_def_cfa_offset 8
 2179              		.cfi_offset 7, -8
 2180              		.cfi_offset 14, -4
 2181 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 50


 2182              		.cfi_def_cfa_offset 24
 2183 0004 00AF     		add	r7, sp, #0
 2184              		.cfi_def_cfa_register 7
 2185 0006 7860     		str	r0, [r7, #4]
 602:.\main.c      ****     
 603:.\main.c      ****     // Variable Initialisations
 604:.\main.c      ****     double TL = ADC_CountsTo_Volts(ADC_GetResult16(ADC));   // Any ADC value
 2186              		.loc 1 604 0
 2187 0008 7B68     		ldr	r3, [r7, #4]
 2188 000a 9BB2     		uxth	r3, r3
 2189 000c 1846     		mov	r0, r3
 2190 000e FFF7FEFF 		bl	ADC_GetResult16
 2191 0012 0346     		mov	r3, r0
 2192 0014 1846     		mov	r0, r3
 2193 0016 FFF7FEFF 		bl	ADC_CountsTo_Volts
 2194 001a 0346     		mov	r3, r0
 2195 001c 1846     		mov	r0, r3
 2196 001e FFF7FEFF 		bl	__aeabi_f2d
 2197 0022 0246     		mov	r2, r0
 2198 0024 0B46     		mov	r3, r1
 2199 0026 C7E90223 		strd	r2, [r7, #8]
 605:.\main.c      ****     
 606:.\main.c      ****     return TL;
 2200              		.loc 1 606 0
 2201 002a D7E90223 		ldrd	r2, [r7, #8]
 607:.\main.c      **** }
 2202              		.loc 1 607 0
 2203 002e 1046     		mov	r0, r2
 2204 0030 1946     		mov	r1, r3
 2205 0032 1037     		adds	r7, r7, #16
 2206              		.cfi_def_cfa_offset 8
 2207 0034 BD46     		mov	sp, r7
 2208              		.cfi_def_cfa_register 13
 2209              		@ sp needed
 2210 0036 80BD     		pop	{r7, pc}
 2211              		.cfi_endproc
 2212              	.LFE68:
 2213              		.size	calculateADC, .-calculateADC
 2214              		.section	.text.astar,"ax",%progbits
 2215              		.align	2
 2216              		.global	astar
 2217              		.thumb
 2218              		.thumb_func
 2219              		.type	astar, %function
 2220              	astar:
 2221              	.LFB69:
 608:.\main.c      **** 
 609:.\main.c      **** 
 610:.\main.c      **** 
 611:.\main.c      **** 
 612:.\main.c      **** 
 613:.\main.c      **** /*
 614:.\main.c      ****       .o.        .oooooo..o ooooooooooooo       .o.       ooooooooo.   
 615:.\main.c      ****      .888.      d8P'    `Y8 8'   888   `8      .888.      `888   `Y88. 
 616:.\main.c      ****     .8"888.     Y88bo.           888          .8"888.      888   .d88' 
 617:.\main.c      ****    .8' `888.     `"Y8888o.       888         .8' `888.     888ooo88P'  
 618:.\main.c      ****   .88ooo8888.        `"Y88b      888        .88ooo8888.    888`88b.    
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 51


 619:.\main.c      ****  .8'     `888.  oo     .d8P      888       .8'     `888.   888  `88b.  
 620:.\main.c      **** o88o     o8888o 8""88888P'      o888o     o88o     o8888o o888o  o888o 
 621:.\main.c      **** */
 622:.\main.c      **** 
 623:.\main.c      **** void astar() {
 2222              		.loc 1 623 0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 40
 2225              		@ frame_needed = 1, uses_anonymous_args = 0
 2226 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2227              		.cfi_def_cfa_offset 20
 2228              		.cfi_offset 4, -20
 2229              		.cfi_offset 5, -16
 2230              		.cfi_offset 6, -12
 2231              		.cfi_offset 7, -8
 2232              		.cfi_offset 14, -4
 2233 0002 ADF2944D 		subw	sp, sp, #1172
 2234              		.cfi_def_cfa_offset 1192
 2235 0006 4FF48D67 		mov	r7, #1128
 2236 000a 6F44     		add	r7, sp, r7
 2237              		.cfi_def_cfa 7, 64
 624:.\main.c      **** 
 625:.\main.c      **** 	Node TailNode;
 626:.\main.c      **** 	TailNode.row = TAIL;
 2238              		.loc 1 626 0
 2239 000c 6523     		movs	r3, #101
 2240 000e 3B73     		strb	r3, [r7, #12]
 627:.\main.c      **** 	TailNode.col = TAIL;
 2241              		.loc 1 627 0
 2242 0010 6523     		movs	r3, #101
 2243 0012 7B73     		strb	r3, [r7, #13]
 628:.\main.c      **** 
 629:.\main.c      **** 	push(TailNode, PathArray);
 2244              		.loc 1 629 0
 2245 0014 F868     		ldr	r0, [r7, #12]
 2246 0016 7849     		ldr	r1, .L128
 2247 0018 FFF7FEFF 		bl	push
 630:.\main.c      **** 	push(TailNode, NewNodes);
 2248              		.loc 1 630 0
 2249 001c F868     		ldr	r0, [r7, #12]
 2250 001e 7749     		ldr	r1, .L128+4
 2251 0020 FFF7FEFF 		bl	push
 631:.\main.c      **** 	push(TailNode, OldNodes);
 2252              		.loc 1 631 0
 2253 0024 F868     		ldr	r0, [r7, #12]
 2254 0026 7649     		ldr	r1, .L128+8
 2255 0028 FFF7FEFF 		bl	push
 632:.\main.c      ****     
 633:.\main.c      ****     Node Start;
 634:.\main.c      **** 	Start.row = START_ROW;
 2256              		.loc 1 634 0
 2257 002c 754B     		ldr	r3, .L128+12
 2258 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2259 0030 3B72     		strb	r3, [r7, #8]
 635:.\main.c      **** 	Start.col = START_COL;
 2260              		.loc 1 635 0
 2261 0032 754B     		ldr	r3, .L128+16
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 52


 2262 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2263 0036 7B72     		strb	r3, [r7, #9]
 636:.\main.c      ****     push(Start,NewNodes);
 2264              		.loc 1 636 0
 2265 0038 B868     		ldr	r0, [r7, #8]
 2266 003a 7049     		ldr	r1, .L128+4
 2267 003c FFF7FEFF 		bl	push
 637:.\main.c      ****     Node Pizza;
 638:.\main.c      **** 	Pizza.row = PIZZA_ROW;
 2268              		.loc 1 638 0
 2269 0040 724B     		ldr	r3, .L128+20
 2270 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2271 0044 3B71     		strb	r3, [r7, #4]
 639:.\main.c      **** 	Pizza.col = PIZZA_COL;
 2272              		.loc 1 639 0
 2273 0046 724B     		ldr	r3, .L128+24
 2274 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2275 004a 7B71     		strb	r3, [r7, #5]
 640:.\main.c      **** 
 641:.\main.c      **** 	int row = sizeof(map) / sizeof(map[0]);
 2276              		.loc 1 641 0
 2277 004c 0F23     		movs	r3, #15
 2278 004e BB61     		str	r3, [r7, #24]
 642:.\main.c      **** 	int col = sizeof(map[0]) / sizeof(map[0][0]);
 2279              		.loc 1 642 0
 2280 0050 1323     		movs	r3, #19
 2281 0052 7B61     		str	r3, [r7, #20]
 2282              	.LBB3:
 643:.\main.c      **** 
 644:.\main.c      **** 	//initialize the DistBefore array
 645:.\main.c      **** 	for (int i = 0; i < row; i++) {
 2283              		.loc 1 645 0
 2284 0054 0023     		movs	r3, #0
 2285 0056 7B62     		str	r3, [r7, #36]
 2286 0058 19E0     		b	.L113
 2287              	.L116:
 2288              	.LBB4:
 646:.\main.c      **** 		for (int j = 0; j < col; j++) {
 2289              		.loc 1 646 0
 2290 005a 0023     		movs	r3, #0
 2291 005c 3B62     		str	r3, [r7, #32]
 2292 005e 0FE0     		b	.L114
 2293              	.L115:
 647:.\main.c      **** 			DistBefore.map[i][j] = The_INFINITY;
 2294              		.loc 1 647 0 discriminator 3
 2295 0060 6C49     		ldr	r1, .L128+28
 2296 0062 7A6A     		ldr	r2, [r7, #36]
 2297 0064 1346     		mov	r3, r2
 2298 0066 DB00     		lsls	r3, r3, #3
 2299 0068 1344     		add	r3, r3, r2
 2300 006a 5B00     		lsls	r3, r3, #1
 2301 006c 1344     		add	r3, r3, r2
 2302 006e 3A6A     		ldr	r2, [r7, #32]
 2303 0070 1344     		add	r3, r3, r2
 2304 0072 42F20F72 		movw	r2, #9999
 2305 0076 41F82320 		str	r2, [r1, r3, lsl #2]
 646:.\main.c      **** 		for (int j = 0; j < col; j++) {
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 53


 2306              		.loc 1 646 0 discriminator 3
 2307 007a 3B6A     		ldr	r3, [r7, #32]
 2308 007c 0133     		adds	r3, r3, #1
 2309 007e 3B62     		str	r3, [r7, #32]
 2310              	.L114:
 646:.\main.c      **** 		for (int j = 0; j < col; j++) {
 2311              		.loc 1 646 0 is_stmt 0 discriminator 1
 2312 0080 3A6A     		ldr	r2, [r7, #32]
 2313 0082 7B69     		ldr	r3, [r7, #20]
 2314 0084 9A42     		cmp	r2, r3
 2315 0086 EBDB     		blt	.L115
 2316              	.LBE4:
 645:.\main.c      **** 		for (int j = 0; j < col; j++) {
 2317              		.loc 1 645 0 is_stmt 1 discriminator 2
 2318 0088 7B6A     		ldr	r3, [r7, #36]
 2319 008a 0133     		adds	r3, r3, #1
 2320 008c 7B62     		str	r3, [r7, #36]
 2321              	.L113:
 645:.\main.c      **** 		for (int j = 0; j < col; j++) {
 2322              		.loc 1 645 0 is_stmt 0 discriminator 1
 2323 008e 7A6A     		ldr	r2, [r7, #36]
 2324 0090 BB69     		ldr	r3, [r7, #24]
 2325 0092 9A42     		cmp	r2, r3
 2326 0094 E1DB     		blt	.L116
 2327              	.LBE3:
 648:.\main.c      **** 		}
 649:.\main.c      **** 	}
 650:.\main.c      **** 	DistBefore.map[Start.row][Start.col] = 0;
 2328              		.loc 1 650 0 is_stmt 1
 2329 0096 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 2330 0098 1A46     		mov	r2, r3
 2331 009a 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2332 009c 1846     		mov	r0, r3
 2333 009e 5D49     		ldr	r1, .L128+28
 2334 00a0 1346     		mov	r3, r2
 2335 00a2 DB00     		lsls	r3, r3, #3
 2336 00a4 1344     		add	r3, r3, r2
 2337 00a6 5B00     		lsls	r3, r3, #1
 2338 00a8 1344     		add	r3, r3, r2
 2339 00aa 0344     		add	r3, r3, r0
 2340 00ac 0022     		movs	r2, #0
 2341 00ae 41F82320 		str	r2, [r1, r3, lsl #2]
 651:.\main.c      **** 
 652:.\main.c      **** 	TotalDist = DistBefore;
 2342              		.loc 1 652 0
 2343 00b2 594A     		ldr	r2, .L128+32
 2344 00b4 574B     		ldr	r3, .L128+28
 2345 00b6 1146     		mov	r1, r2
 2346 00b8 1A46     		mov	r2, r3
 2347 00ba 40F27443 		movw	r3, #1140
 2348 00be 0846     		mov	r0, r1
 2349 00c0 1146     		mov	r1, r2
 2350 00c2 1A46     		mov	r2, r3
 2351 00c4 FFF7FEFF 		bl	memcpy
 653:.\main.c      **** 	TotalDist.map[Start.row][Start.col] = hCost(Start, Pizza);
 2352              		.loc 1 653 0
 2353 00c8 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 54


 2354 00ca 1C46     		mov	r4, r3
 2355 00cc 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 2356 00ce 1D46     		mov	r5, r3
 2357 00d0 B868     		ldr	r0, [r7, #8]
 2358 00d2 7968     		ldr	r1, [r7, #4]
 2359 00d4 FFF7FEFF 		bl	hCost
 2360 00d8 0146     		mov	r1, r0
 2361 00da 4F4A     		ldr	r2, .L128+32
 2362 00dc 2346     		mov	r3, r4
 2363 00de DB00     		lsls	r3, r3, #3
 2364 00e0 2344     		add	r3, r3, r4
 2365 00e2 5B00     		lsls	r3, r3, #1
 2366 00e4 2344     		add	r3, r3, r4
 2367 00e6 2B44     		add	r3, r3, r5
 2368 00e8 42F82310 		str	r1, [r2, r3, lsl #2]
 654:.\main.c      **** 
 655:.\main.c      **** 	// Executes
 656:.\main.c      **** 	Node Current;
 657:.\main.c      **** 	int indexN = 0;
 2369              		.loc 1 657 0
 2370 00ec 0023     		movs	r3, #0
 2371 00ee 3B61     		str	r3, [r7, #16]
 658:.\main.c      ****     
 659:.\main.c      **** 	while (NewNodes[0].row != TAIL) {
 2372              		.loc 1 659 0
 2373 00f0 17E1     		b	.L117
 2374              	.L126:
 660:.\main.c      **** 		Current = findCurrentNode(NewNodes, TotalDist);
 2375              		.loc 1 660 0
 2376 00f2 494C     		ldr	r4, .L128+32
 2377 00f4 6946     		mov	r1, sp
 2378 00f6 04F10C03 		add	r3, r4, #12
 2379 00fa 4FF48D62 		mov	r2, #1128
 2380 00fe 0846     		mov	r0, r1
 2381 0100 1946     		mov	r1, r3
 2382 0102 FFF7FEFF 		bl	memcpy
 2383 0106 94E80E00 		ldmia	r4, {r1, r2, r3}
 2384 010a 3C48     		ldr	r0, .L128+4
 2385 010c FFF7FEFF 		bl	findCurrentNode
 2386 0110 0346     		mov	r3, r0	@ movhi
 2387 0112 3B80     		strh	r3, [r7]	@ movhi
 661:.\main.c      **** 		if (Current.row == Pizza.row && Current.col == Pizza.col) {
 2388              		.loc 1 661 0
 2389 0114 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 2390 0116 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2391 0118 9A42     		cmp	r2, r3
 2392 011a 08D1     		bne	.L118
 2393              		.loc 1 661 0 is_stmt 0 discriminator 1
 2394 011c 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 2395 011e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2396 0120 9A42     		cmp	r2, r3
 2397 0122 04D1     		bne	.L118
 662:.\main.c      **** 			TidyUpThePath(Start, Pizza);
 2398              		.loc 1 662 0 is_stmt 1
 2399 0124 B868     		ldr	r0, [r7, #8]
 2400 0126 7968     		ldr	r1, [r7, #4]
 2401 0128 FFF7FEFF 		bl	TidyUpThePath
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 55


 663:.\main.c      **** 			return;
 2402              		.loc 1 663 0
 2403 012c FFE0     		b	.L112
 2404              	.L118:
 664:.\main.c      **** 		}
 665:.\main.c      **** 		else {
 666:.\main.c      **** 			deleteNode(Current, NewNodes);
 2405              		.loc 1 666 0
 2406 012e 3868     		ldr	r0, [r7]
 2407 0130 3249     		ldr	r1, .L128+4
 2408 0132 FFF7FEFF 		bl	deleteNode
 667:.\main.c      **** 			push(Current, OldNodes);
 2409              		.loc 1 667 0
 2410 0136 3868     		ldr	r0, [r7]
 2411 0138 3149     		ldr	r1, .L128+8
 2412 013a FFF7FEFF 		bl	push
 668:.\main.c      **** 			listNeighbours(Current);
 2413              		.loc 1 668 0
 2414 013e 3868     		ldr	r0, [r7]
 2415 0140 FFF7FEFF 		bl	listNeighbours
 2416              	.LBB5:
 669:.\main.c      **** 			for (int i = 0; i < 4; i++) {
 2417              		.loc 1 669 0
 2418 0144 0023     		movs	r3, #0
 2419 0146 FB61     		str	r3, [r7, #28]
 2420 0148 E7E0     		b	.L120
 2421              	.L125:
 670:.\main.c      **** 				if (neighbours[i].row == TAIL) {
 2422              		.loc 1 670 0
 2423 014a 344A     		ldr	r2, .L128+36
 2424 014c FB69     		ldr	r3, [r7, #28]
 2425 014e 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 2426 0152 652B     		cmp	r3, #101
 2427 0154 00D1     		bne	.L121
 671:.\main.c      **** 					break;
 2428              		.loc 1 671 0
 2429 0156 E4E0     		b	.L117
 2430              	.L121:
 672:.\main.c      **** 				}
 673:.\main.c      **** 				if (existInList(neighbours[i], OldNodes)) {
 2431              		.loc 1 673 0
 2432 0158 304A     		ldr	r2, .L128+36
 2433 015a FB69     		ldr	r3, [r7, #28]
 2434 015c 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 2435 0160 0023     		movs	r3, #0
 2436 0162 62F30F03 		bfi	r3, r2, #0, #16
 2437 0166 1846     		mov	r0, r3
 2438 0168 2549     		ldr	r1, .L128+8
 2439 016a FFF7FEFF 		bl	existInList
 2440 016e 0346     		mov	r3, r0
 2441 0170 002B     		cmp	r3, #0
 2442 0172 00D0     		beq	.L122
 674:.\main.c      **** 					continue;
 2443              		.loc 1 674 0
 2444 0174 CEE0     		b	.L123
 2445              	.L122:
 675:.\main.c      **** 				}
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 56


 676:.\main.c      **** 				else {
 677:.\main.c      **** 					push(neighbours[i], NewNodes);
 2446              		.loc 1 677 0
 2447 0176 294A     		ldr	r2, .L128+36
 2448 0178 FB69     		ldr	r3, [r7, #28]
 2449 017a 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 2450 017e 0023     		movs	r3, #0
 2451 0180 62F30F03 		bfi	r3, r2, #0, #16
 2452 0184 1846     		mov	r0, r3
 2453 0186 1D49     		ldr	r1, .L128+4
 2454 0188 FFF7FEFF 		bl	push
 678:.\main.c      **** 				}
 679:.\main.c      **** 				tentativeDist = DistBefore.map[Current.row][Current.col] + hCost(Current, neighbours[i]);
 2455              		.loc 1 679 0
 2456 018c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2457 018e 1A46     		mov	r2, r3
 2458 0190 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2459 0192 1846     		mov	r0, r3
 2460 0194 1F49     		ldr	r1, .L128+28
 2461 0196 1346     		mov	r3, r2
 2462 0198 DB00     		lsls	r3, r3, #3
 2463 019a 1344     		add	r3, r3, r2
 2464 019c 5B00     		lsls	r3, r3, #1
 2465 019e 1344     		add	r3, r3, r2
 2466 01a0 0344     		add	r3, r3, r0
 2467 01a2 51F82340 		ldr	r4, [r1, r3, lsl #2]
 2468 01a6 1D4A     		ldr	r2, .L128+36
 2469 01a8 FB69     		ldr	r3, [r7, #28]
 2470 01aa 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 2471 01ae 0023     		movs	r3, #0
 2472 01b0 62F30F03 		bfi	r3, r2, #0, #16
 2473 01b4 3868     		ldr	r0, [r7]
 2474 01b6 1946     		mov	r1, r3
 2475 01b8 FFF7FEFF 		bl	hCost
 2476 01bc 0346     		mov	r3, r0
 2477 01be 2344     		add	r3, r3, r4
 2478 01c0 174A     		ldr	r2, .L128+40
 2479 01c2 1360     		str	r3, [r2]
 680:.\main.c      **** 				if (tentativeDist >= DistBefore.map[neighbours[i].row][neighbours[i].col]) {
 2480              		.loc 1 680 0
 2481 01c4 154A     		ldr	r2, .L128+36
 2482 01c6 FB69     		ldr	r3, [r7, #28]
 2483 01c8 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 2484 01cc 1A46     		mov	r2, r3
 2485 01ce 1349     		ldr	r1, .L128+36
 2486 01d0 FB69     		ldr	r3, [r7, #28]
 2487 01d2 5B00     		lsls	r3, r3, #1
 2488 01d4 0B44     		add	r3, r3, r1
 2489 01d6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2490 01d8 1846     		mov	r0, r3
 2491 01da 0E49     		ldr	r1, .L128+28
 2492 01dc 1346     		mov	r3, r2
 2493 01de DB00     		lsls	r3, r3, #3
 2494 01e0 1344     		add	r3, r3, r2
 2495 01e2 5B00     		lsls	r3, r3, #1
 2496 01e4 1344     		add	r3, r3, r2
 2497 01e6 0344     		add	r3, r3, r0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 57


 2498 01e8 51F82320 		ldr	r2, [r1, r3, lsl #2]
 2499 01ec 0C4B     		ldr	r3, .L128+40
 2500 01ee 1B68     		ldr	r3, [r3]
 2501 01f0 9A42     		cmp	r2, r3
 2502 01f2 17DC     		bgt	.L124
 681:.\main.c      **** 					continue;
 2503              		.loc 1 681 0
 2504 01f4 8EE0     		b	.L123
 2505              	.L129:
 2506 01f6 00BF     		.align	2
 2507              	.L128:
 2508 01f8 00000000 		.word	PathArray
 2509 01fc 00000000 		.word	NewNodes
 2510 0200 00000000 		.word	OldNodes
 2511 0204 00000000 		.word	START_ROW
 2512 0208 00000000 		.word	START_COL
 2513 020c 00000000 		.word	PIZZA_ROW
 2514 0210 00000000 		.word	PIZZA_COL
 2515 0214 00000000 		.word	DistBefore
 2516 0218 00000000 		.word	TotalDist
 2517 021c 00000000 		.word	neighbours
 2518 0220 00000000 		.word	tentativeDist
 2519              	.L124:
 682:.\main.c      **** 				}
 683:.\main.c      **** 				CameFrom.map[neighbours[i].row][neighbours[i].col].row = Current.row;
 2520              		.loc 1 683 0
 2521 0224 434A     		ldr	r2, .L130
 2522 0226 FB69     		ldr	r3, [r7, #28]
 2523 0228 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 2524 022c 1A46     		mov	r2, r3
 2525 022e 4149     		ldr	r1, .L130
 2526 0230 FB69     		ldr	r3, [r7, #28]
 2527 0232 5B00     		lsls	r3, r3, #1
 2528 0234 0B44     		add	r3, r3, r1
 2529 0236 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2530 0238 1C46     		mov	r4, r3
 2531 023a 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 2532 023c 3E49     		ldr	r1, .L130+4
 2533 023e 1346     		mov	r3, r2
 2534 0240 DB00     		lsls	r3, r3, #3
 2535 0242 1344     		add	r3, r3, r2
 2536 0244 5B00     		lsls	r3, r3, #1
 2537 0246 1344     		add	r3, r3, r2
 2538 0248 2344     		add	r3, r3, r4
 2539 024a 0246     		mov	r2, r0
 2540 024c 01F81320 		strb	r2, [r1, r3, lsl #1]
 684:.\main.c      **** 				CameFrom.map[neighbours[i].row][neighbours[i].col].col = Current.col;
 2541              		.loc 1 684 0
 2542 0250 384A     		ldr	r2, .L130
 2543 0252 FB69     		ldr	r3, [r7, #28]
 2544 0254 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 2545 0258 1A46     		mov	r2, r3
 2546 025a 3649     		ldr	r1, .L130
 2547 025c FB69     		ldr	r3, [r7, #28]
 2548 025e 5B00     		lsls	r3, r3, #1
 2549 0260 0B44     		add	r3, r3, r1
 2550 0262 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 58


 2551 0264 1C46     		mov	r4, r3
 2552 0266 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 2553 0268 3349     		ldr	r1, .L130+4
 2554 026a 1346     		mov	r3, r2
 2555 026c DB00     		lsls	r3, r3, #3
 2556 026e 1344     		add	r3, r3, r2
 2557 0270 5B00     		lsls	r3, r3, #1
 2558 0272 1344     		add	r3, r3, r2
 2559 0274 2344     		add	r3, r3, r4
 2560 0276 5B00     		lsls	r3, r3, #1
 2561 0278 0B44     		add	r3, r3, r1
 2562 027a 0246     		mov	r2, r0
 2563 027c 5A70     		strb	r2, [r3, #1]
 685:.\main.c      **** 				DistBefore.map[neighbours[i].row][neighbours[i].col] = tentativeDist;
 2564              		.loc 1 685 0
 2565 027e 2D4A     		ldr	r2, .L130
 2566 0280 FB69     		ldr	r3, [r7, #28]
 2567 0282 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 2568 0286 1A46     		mov	r2, r3
 2569 0288 2A49     		ldr	r1, .L130
 2570 028a FB69     		ldr	r3, [r7, #28]
 2571 028c 5B00     		lsls	r3, r3, #1
 2572 028e 0B44     		add	r3, r3, r1
 2573 0290 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2574 0292 1C46     		mov	r4, r3
 2575 0294 294B     		ldr	r3, .L130+8
 2576 0296 1968     		ldr	r1, [r3]
 2577 0298 2948     		ldr	r0, .L130+12
 2578 029a 1346     		mov	r3, r2
 2579 029c DB00     		lsls	r3, r3, #3
 2580 029e 1344     		add	r3, r3, r2
 2581 02a0 5B00     		lsls	r3, r3, #1
 2582 02a2 1344     		add	r3, r3, r2
 2583 02a4 2344     		add	r3, r3, r4
 2584 02a6 40F82310 		str	r1, [r0, r3, lsl #2]
 686:.\main.c      **** 				TotalDist.map[neighbours[i].row][neighbours[i].col] = DistBefore.map[neighbours[i].row][neighbo
 2585              		.loc 1 686 0
 2586 02aa 224A     		ldr	r2, .L130
 2587 02ac FB69     		ldr	r3, [r7, #28]
 2588 02ae 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 2589 02b2 1C46     		mov	r4, r3
 2590 02b4 1F4A     		ldr	r2, .L130
 2591 02b6 FB69     		ldr	r3, [r7, #28]
 2592 02b8 5B00     		lsls	r3, r3, #1
 2593 02ba 1344     		add	r3, r3, r2
 2594 02bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2595 02be 1E46     		mov	r6, r3
 2596 02c0 1C4A     		ldr	r2, .L130
 2597 02c2 FB69     		ldr	r3, [r7, #28]
 2598 02c4 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 2599 02c8 1A46     		mov	r2, r3
 2600 02ca 1A49     		ldr	r1, .L130
 2601 02cc FB69     		ldr	r3, [r7, #28]
 2602 02ce 5B00     		lsls	r3, r3, #1
 2603 02d0 0B44     		add	r3, r3, r1
 2604 02d2 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2605 02d4 1846     		mov	r0, r3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 59


 2606 02d6 1A49     		ldr	r1, .L130+12
 2607 02d8 1346     		mov	r3, r2
 2608 02da DB00     		lsls	r3, r3, #3
 2609 02dc 1344     		add	r3, r3, r2
 2610 02de 5B00     		lsls	r3, r3, #1
 2611 02e0 1344     		add	r3, r3, r2
 2612 02e2 0344     		add	r3, r3, r0
 2613 02e4 51F82350 		ldr	r5, [r1, r3, lsl #2]
 687:.\main.c      **** 					+ hCost(neighbours[i], Pizza);
 2614              		.loc 1 687 0
 2615 02e8 124A     		ldr	r2, .L130
 2616 02ea FB69     		ldr	r3, [r7, #28]
 2617 02ec 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 2618 02f0 0023     		movs	r3, #0
 2619 02f2 62F30F03 		bfi	r3, r2, #0, #16
 2620 02f6 1846     		mov	r0, r3
 2621 02f8 7968     		ldr	r1, [r7, #4]
 2622 02fa FFF7FEFF 		bl	hCost
 2623 02fe 0346     		mov	r3, r0
 2624 0300 EA18     		adds	r2, r5, r3
 686:.\main.c      **** 				TotalDist.map[neighbours[i].row][neighbours[i].col] = DistBefore.map[neighbours[i].row][neighbo
 2625              		.loc 1 686 0
 2626 0302 1049     		ldr	r1, .L130+16
 2627 0304 2346     		mov	r3, r4
 2628 0306 DB00     		lsls	r3, r3, #3
 2629 0308 2344     		add	r3, r3, r4
 2630 030a 5B00     		lsls	r3, r3, #1
 2631 030c 2344     		add	r3, r3, r4
 2632 030e 3344     		add	r3, r3, r6
 2633 0310 41F82320 		str	r2, [r1, r3, lsl #2]
 2634              	.L123:
 669:.\main.c      **** 				if (neighbours[i].row == TAIL) {
 2635              		.loc 1 669 0 discriminator 2
 2636 0314 FB69     		ldr	r3, [r7, #28]
 2637 0316 0133     		adds	r3, r3, #1
 2638 0318 FB61     		str	r3, [r7, #28]
 2639              	.L120:
 669:.\main.c      **** 				if (neighbours[i].row == TAIL) {
 2640              		.loc 1 669 0 is_stmt 0 discriminator 1
 2641 031a FB69     		ldr	r3, [r7, #28]
 2642 031c 032B     		cmp	r3, #3
 2643 031e 7FF714AF 		ble	.L125
 2644              	.L117:
 2645              	.LBE5:
 659:.\main.c      **** 		Current = findCurrentNode(NewNodes, TotalDist);
 2646              		.loc 1 659 0 is_stmt 1
 2647 0322 094B     		ldr	r3, .L130+20
 2648 0324 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2649 0326 652B     		cmp	r3, #101
 2650 0328 7FF4E3AE 		bne	.L126
 688:.\main.c      **** 			}
 689:.\main.c      **** 		}
 690:.\main.c      **** 	}
 691:.\main.c      **** 	return;
 2651              		.loc 1 691 0
 2652 032c 00BF     		nop
 2653              	.L112:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 60


 692:.\main.c      **** }
 2654              		.loc 1 692 0
 2655 032e 2C37     		adds	r7, r7, #44
 2656              		.cfi_def_cfa_offset 20
 2657 0330 BD46     		mov	sp, r7
 2658              		.cfi_def_cfa_register 13
 2659              		@ sp needed
 2660 0332 F0BD     		pop	{r4, r5, r6, r7, pc}
 2661              	.L131:
 2662              		.align	2
 2663              	.L130:
 2664 0334 00000000 		.word	neighbours
 2665 0338 00000000 		.word	CameFrom
 2666 033c 00000000 		.word	tentativeDist
 2667 0340 00000000 		.word	DistBefore
 2668 0344 00000000 		.word	TotalDist
 2669 0348 00000000 		.word	NewNodes
 2670              		.cfi_endproc
 2671              	.LFE69:
 2672              		.size	astar, .-astar
 2673              		.section	.text.TidyUpThePath,"ax",%progbits
 2674              		.align	2
 2675              		.global	TidyUpThePath
 2676              		.thumb
 2677              		.thumb_func
 2678              		.type	TidyUpThePath, %function
 2679              	TidyUpThePath:
 2680              	.LFB70:
 693:.\main.c      **** 
 694:.\main.c      **** void TidyUpThePath(Node Start, Node Pizza) {
 2681              		.loc 1 694 0
 2682              		.cfi_startproc
 2683              		@ args = 0, pretend = 0, frame = 24
 2684              		@ frame_needed = 1, uses_anonymous_args = 0
 2685 0000 80B5     		push	{r7, lr}
 2686              		.cfi_def_cfa_offset 8
 2687              		.cfi_offset 7, -8
 2688              		.cfi_offset 14, -4
 2689 0002 86B0     		sub	sp, sp, #24
 2690              		.cfi_def_cfa_offset 32
 2691 0004 00AF     		add	r7, sp, #0
 2692              		.cfi_def_cfa_register 7
 2693 0006 B880     		strh	r0, [r7, #4]	@ movhi
 2694 0008 3980     		strh	r1, [r7]	@ movhi
 695:.\main.c      **** 	int NextRow = CameFrom.map[Pizza.row][Pizza.col].row;
 2695              		.loc 1 695 0
 2696 000a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2697 000c 1A46     		mov	r2, r3
 2698 000e 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2699 0010 1846     		mov	r0, r3
 2700 0012 3349     		ldr	r1, .L135
 2701 0014 1346     		mov	r3, r2
 2702 0016 DB00     		lsls	r3, r3, #3
 2703 0018 1344     		add	r3, r3, r2
 2704 001a 5B00     		lsls	r3, r3, #1
 2705 001c 1344     		add	r3, r3, r2
 2706 001e 0344     		add	r3, r3, r0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 61


 2707 0020 11F81330 		ldrb	r3, [r1, r3, lsl #1]	@ zero_extendqisi2
 2708 0024 7B61     		str	r3, [r7, #20]
 696:.\main.c      **** 	int NextCol = CameFrom.map[Pizza.row][Pizza.col].col;
 2709              		.loc 1 696 0
 2710 0026 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2711 0028 1A46     		mov	r2, r3
 2712 002a 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2713 002c 1846     		mov	r0, r3
 2714 002e 2C49     		ldr	r1, .L135
 2715 0030 1346     		mov	r3, r2
 2716 0032 DB00     		lsls	r3, r3, #3
 2717 0034 1344     		add	r3, r3, r2
 2718 0036 5B00     		lsls	r3, r3, #1
 2719 0038 1344     		add	r3, r3, r2
 2720 003a 0344     		add	r3, r3, r0
 2721 003c 5B00     		lsls	r3, r3, #1
 2722 003e 0B44     		add	r3, r3, r1
 2723 0040 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2724 0042 3B61     		str	r3, [r7, #16]
 697:.\main.c      **** 	Node temp;
 698:.\main.c      **** 	temp.row = Pizza.row;
 2725              		.loc 1 698 0
 2726 0044 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 2727 0046 3B73     		strb	r3, [r7, #12]
 699:.\main.c      **** 	temp.col = Pizza.col;
 2728              		.loc 1 699 0
 2729 0048 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2730 004a 7B73     		strb	r3, [r7, #13]
 700:.\main.c      **** 	push(temp, PathArray);
 2731              		.loc 1 700 0
 2732 004c F868     		ldr	r0, [r7, #12]
 2733 004e 2549     		ldr	r1, .L135+4
 2734 0050 FFF7FEFF 		bl	push
 701:.\main.c      **** 	temp.row = NextRow;
 2735              		.loc 1 701 0
 2736 0054 7B69     		ldr	r3, [r7, #20]
 2737 0056 DBB2     		uxtb	r3, r3
 2738 0058 3B73     		strb	r3, [r7, #12]
 702:.\main.c      **** 	temp.col = NextCol;
 2739              		.loc 1 702 0
 2740 005a 3B69     		ldr	r3, [r7, #16]
 2741 005c DBB2     		uxtb	r3, r3
 2742 005e 7B73     		strb	r3, [r7, #13]
 703:.\main.c      **** 	while (NextRow != Start.row || NextCol != Start.col) {
 2743              		.loc 1 703 0
 2744 0060 26E0     		b	.L133
 2745              	.L134:
 704:.\main.c      **** 		temp.row = NextRow;
 2746              		.loc 1 704 0
 2747 0062 7B69     		ldr	r3, [r7, #20]
 2748 0064 DBB2     		uxtb	r3, r3
 2749 0066 3B73     		strb	r3, [r7, #12]
 705:.\main.c      **** 		temp.col = NextCol;
 2750              		.loc 1 705 0
 2751 0068 3B69     		ldr	r3, [r7, #16]
 2752 006a DBB2     		uxtb	r3, r3
 2753 006c 7B73     		strb	r3, [r7, #13]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 62


 706:.\main.c      **** 		push(temp, PathArray);
 2754              		.loc 1 706 0
 2755 006e F868     		ldr	r0, [r7, #12]
 2756 0070 1C49     		ldr	r1, .L135+4
 2757 0072 FFF7FEFF 		bl	push
 707:.\main.c      **** 		NextRow = CameFrom.map[temp.row][temp.col].row;
 2758              		.loc 1 707 0
 2759 0076 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 2760 0078 1A46     		mov	r2, r3
 2761 007a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2762 007c 1846     		mov	r0, r3
 2763 007e 1849     		ldr	r1, .L135
 2764 0080 1346     		mov	r3, r2
 2765 0082 DB00     		lsls	r3, r3, #3
 2766 0084 1344     		add	r3, r3, r2
 2767 0086 5B00     		lsls	r3, r3, #1
 2768 0088 1344     		add	r3, r3, r2
 2769 008a 0344     		add	r3, r3, r0
 2770 008c 11F81330 		ldrb	r3, [r1, r3, lsl #1]	@ zero_extendqisi2
 2771 0090 7B61     		str	r3, [r7, #20]
 708:.\main.c      **** 		NextCol = CameFrom.map[temp.row][temp.col].col;
 2772              		.loc 1 708 0
 2773 0092 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 2774 0094 1A46     		mov	r2, r3
 2775 0096 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2776 0098 1846     		mov	r0, r3
 2777 009a 1149     		ldr	r1, .L135
 2778 009c 1346     		mov	r3, r2
 2779 009e DB00     		lsls	r3, r3, #3
 2780 00a0 1344     		add	r3, r3, r2
 2781 00a2 5B00     		lsls	r3, r3, #1
 2782 00a4 1344     		add	r3, r3, r2
 2783 00a6 0344     		add	r3, r3, r0
 2784 00a8 5B00     		lsls	r3, r3, #1
 2785 00aa 0B44     		add	r3, r3, r1
 2786 00ac 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2787 00ae 3B61     		str	r3, [r7, #16]
 2788              	.L133:
 703:.\main.c      **** 		temp.row = NextRow;
 2789              		.loc 1 703 0
 2790 00b0 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 2791 00b2 1A46     		mov	r2, r3
 2792 00b4 7B69     		ldr	r3, [r7, #20]
 2793 00b6 9A42     		cmp	r2, r3
 2794 00b8 D3D1     		bne	.L134
 703:.\main.c      **** 		temp.row = NextRow;
 2795              		.loc 1 703 0 is_stmt 0 discriminator 1
 2796 00ba 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 2797 00bc 1A46     		mov	r2, r3
 2798 00be 3B69     		ldr	r3, [r7, #16]
 2799 00c0 9A42     		cmp	r2, r3
 2800 00c2 CED1     		bne	.L134
 709:.\main.c      **** 	}
 710:.\main.c      **** 	temp.row = NextRow;
 2801              		.loc 1 710 0 is_stmt 1
 2802 00c4 7B69     		ldr	r3, [r7, #20]
 2803 00c6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 63


 2804 00c8 3B73     		strb	r3, [r7, #12]
 711:.\main.c      **** 	temp.col = NextCol;
 2805              		.loc 1 711 0
 2806 00ca 3B69     		ldr	r3, [r7, #16]
 2807 00cc DBB2     		uxtb	r3, r3
 2808 00ce 7B73     		strb	r3, [r7, #13]
 712:.\main.c      **** 	push(temp, PathArray);
 2809              		.loc 1 712 0
 2810 00d0 F868     		ldr	r0, [r7, #12]
 2811 00d2 0449     		ldr	r1, .L135+4
 2812 00d4 FFF7FEFF 		bl	push
 713:.\main.c      **** }
 2813              		.loc 1 713 0
 2814 00d8 1837     		adds	r7, r7, #24
 2815              		.cfi_def_cfa_offset 8
 2816 00da BD46     		mov	sp, r7
 2817              		.cfi_def_cfa_register 13
 2818              		@ sp needed
 2819 00dc 80BD     		pop	{r7, pc}
 2820              	.L136:
 2821 00de 00BF     		.align	2
 2822              	.L135:
 2823 00e0 00000000 		.word	CameFrom
 2824 00e4 00000000 		.word	PathArray
 2825              		.cfi_endproc
 2826              	.LFE70:
 2827              		.size	TidyUpThePath, .-TidyUpThePath
 2828              		.section	.text.findCurrentNode,"ax",%progbits
 2829              		.align	2
 2830              		.global	findCurrentNode
 2831              		.thumb
 2832              		.thumb_func
 2833              		.type	findCurrentNode, %function
 2834              	findCurrentNode:
 2835              	.LFB71:
 714:.\main.c      **** 
 715:.\main.c      **** Node findCurrentNode(Node Array[], MAP Map) {
 2836              		.loc 1 715 0
 2837              		.cfi_startproc
 2838              		@ args = 1144, pretend = 16, frame = 32
 2839              		@ frame_needed = 1, uses_anonymous_args = 0
 2840              		@ link register save eliminated.
 2841 0000 84B0     		sub	sp, sp, #16
 2842              		.cfi_def_cfa_offset 16
 2843 0002 80B4     		push	{r7}
 2844              		.cfi_def_cfa_offset 20
 2845              		.cfi_offset 7, -20
 2846 0004 89B0     		sub	sp, sp, #36
 2847              		.cfi_def_cfa_offset 56
 2848 0006 00AF     		add	r7, sp, #0
 2849              		.cfi_def_cfa_register 7
 2850 0008 7860     		str	r0, [r7, #4]
 2851 000a 07F12C00 		add	r0, r7, #44
 2852 000e 80E80E00 		stmia	r0, {r1, r2, r3}
 716:.\main.c      **** 	int i = 0;
 2853              		.loc 1 716 0
 2854 0012 0023     		movs	r3, #0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 64


 2855 0014 7B61     		str	r3, [r7, #20]
 717:.\main.c      **** 	int shortest = The_INFINITY;
 2856              		.loc 1 717 0
 2857 0016 42F20F73 		movw	r3, #9999
 2858 001a FB61     		str	r3, [r7, #28]
 2859              	.LBB6:
 718:.\main.c      **** 	Node N;
 719:.\main.c      **** 	for (int i = 0; i < ARRAY_SIZE; ++i) {
 2860              		.loc 1 719 0
 2861 001c 0023     		movs	r3, #0
 2862 001e BB61     		str	r3, [r7, #24]
 2863 0020 49E0     		b	.L138
 2864              	.L142:
 720:.\main.c      **** 		if (Map.map[Array[i].row][Array[i].col] < shortest) {
 2865              		.loc 1 720 0
 2866 0022 BB69     		ldr	r3, [r7, #24]
 2867 0024 5B00     		lsls	r3, r3, #1
 2868 0026 7A68     		ldr	r2, [r7, #4]
 2869 0028 1344     		add	r3, r3, r2
 2870 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2871 002c 1A46     		mov	r2, r3
 2872 002e BB69     		ldr	r3, [r7, #24]
 2873 0030 5B00     		lsls	r3, r3, #1
 2874 0032 7968     		ldr	r1, [r7, #4]
 2875 0034 0B44     		add	r3, r3, r1
 2876 0036 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2877 0038 1946     		mov	r1, r3
 2878 003a 1346     		mov	r3, r2
 2879 003c DB00     		lsls	r3, r3, #3
 2880 003e 1344     		add	r3, r3, r2
 2881 0040 5B00     		lsls	r3, r3, #1
 2882 0042 1344     		add	r3, r3, r2
 2883 0044 0B44     		add	r3, r3, r1
 2884 0046 9B00     		lsls	r3, r3, #2
 2885 0048 07F12802 		add	r2, r7, #40
 2886 004c 1344     		add	r3, r3, r2
 2887 004e 5A68     		ldr	r2, [r3, #4]
 2888 0050 FB69     		ldr	r3, [r7, #28]
 2889 0052 9A42     		cmp	r2, r3
 2890 0054 23DA     		bge	.L139
 721:.\main.c      **** 			shortest = Map.map[Array[i].row][Array[i].col];
 2891              		.loc 1 721 0
 2892 0056 BB69     		ldr	r3, [r7, #24]
 2893 0058 5B00     		lsls	r3, r3, #1
 2894 005a 7A68     		ldr	r2, [r7, #4]
 2895 005c 1344     		add	r3, r3, r2
 2896 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2897 0060 1A46     		mov	r2, r3
 2898 0062 BB69     		ldr	r3, [r7, #24]
 2899 0064 5B00     		lsls	r3, r3, #1
 2900 0066 7968     		ldr	r1, [r7, #4]
 2901 0068 0B44     		add	r3, r3, r1
 2902 006a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2903 006c 1946     		mov	r1, r3
 2904 006e 1346     		mov	r3, r2
 2905 0070 DB00     		lsls	r3, r3, #3
 2906 0072 1344     		add	r3, r3, r2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 65


 2907 0074 5B00     		lsls	r3, r3, #1
 2908 0076 1344     		add	r3, r3, r2
 2909 0078 0B44     		add	r3, r3, r1
 2910 007a 9B00     		lsls	r3, r3, #2
 2911 007c 07F12802 		add	r2, r7, #40
 2912 0080 1344     		add	r3, r3, r2
 2913 0082 5B68     		ldr	r3, [r3, #4]
 2914 0084 FB61     		str	r3, [r7, #28]
 722:.\main.c      **** 			N.row = Array[i].row;
 2915              		.loc 1 722 0
 2916 0086 BB69     		ldr	r3, [r7, #24]
 2917 0088 5B00     		lsls	r3, r3, #1
 2918 008a 7A68     		ldr	r2, [r7, #4]
 2919 008c 1344     		add	r3, r3, r2
 2920 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2921 0090 3B73     		strb	r3, [r7, #12]
 723:.\main.c      **** 			N.col = Array[i].col;
 2922              		.loc 1 723 0
 2923 0092 BB69     		ldr	r3, [r7, #24]
 2924 0094 5B00     		lsls	r3, r3, #1
 2925 0096 7A68     		ldr	r2, [r7, #4]
 2926 0098 1344     		add	r3, r3, r2
 2927 009a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2928 009c 7B73     		strb	r3, [r7, #13]
 2929              	.L139:
 724:.\main.c      **** 		}
 725:.\main.c      **** 		if (Array[i + 1].row == TAIL) {
 2930              		.loc 1 725 0
 2931 009e BB69     		ldr	r3, [r7, #24]
 2932 00a0 0133     		adds	r3, r3, #1
 2933 00a2 5B00     		lsls	r3, r3, #1
 2934 00a4 7A68     		ldr	r2, [r7, #4]
 2935 00a6 1344     		add	r3, r3, r2
 2936 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2937 00aa 652B     		cmp	r3, #101
 2938 00ac 00D1     		bne	.L140
 726:.\main.c      **** 			break;
 2939              		.loc 1 726 0
 2940 00ae 06E0     		b	.L141
 2941              	.L140:
 719:.\main.c      **** 		if (Map.map[Array[i].row][Array[i].col] < shortest) {
 2942              		.loc 1 719 0 discriminator 2
 2943 00b0 BB69     		ldr	r3, [r7, #24]
 2944 00b2 0133     		adds	r3, r3, #1
 2945 00b4 BB61     		str	r3, [r7, #24]
 2946              	.L138:
 719:.\main.c      **** 		if (Map.map[Array[i].row][Array[i].col] < shortest) {
 2947              		.loc 1 719 0 is_stmt 0 discriminator 1
 2948 00b6 BB69     		ldr	r3, [r7, #24]
 2949 00b8 B3F5967F 		cmp	r3, #300
 2950 00bc B1DB     		blt	.L142
 2951              	.L141:
 2952              	.LBE6:
 727:.\main.c      **** 		}
 728:.\main.c      **** 	}
 729:.\main.c      **** 	return N;
 2953              		.loc 1 729 0 is_stmt 1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 66


 2954 00be BB89     		ldrh	r3, [r7, #12]	@ movhi
 2955 00c0 3B82     		strh	r3, [r7, #16]	@ movhi
 2956 00c2 0023     		movs	r3, #0
 2957 00c4 3A7C     		ldrb	r2, [r7, #16]	@ zero_extendqisi2
 2958 00c6 62F30703 		bfi	r3, r2, #0, #8
 2959 00ca 7A7C     		ldrb	r2, [r7, #17]	@ zero_extendqisi2
 2960 00cc 62F30F23 		bfi	r3, r2, #8, #8
 730:.\main.c      **** }
 2961              		.loc 1 730 0
 2962 00d0 1846     		mov	r0, r3	@ movhi
 2963 00d2 2437     		adds	r7, r7, #36
 2964              		.cfi_def_cfa_offset 20
 2965 00d4 BD46     		mov	sp, r7
 2966              		.cfi_def_cfa_register 13
 2967              		@ sp needed
 2968 00d6 5DF8047B 		ldr	r7, [sp], #4
 2969              		.cfi_restore 7
 2970              		.cfi_def_cfa_offset 16
 2971 00da 04B0     		add	sp, sp, #16
 2972              		.cfi_def_cfa_offset 0
 2973 00dc 7047     		bx	lr
 2974              		.cfi_endproc
 2975              	.LFE71:
 2976              		.size	findCurrentNode, .-findCurrentNode
 2977 00de 00BF     		.section	.rodata
 2978              		.align	2
 2979              	.LC0:
 2980 0000 01000000 		.word	1
 2981 0004 00000000 		.word	0
 2982 0008 00000000 		.word	0
 2983 000c 01000000 		.word	1
 2984 0010 FFFFFFFF 		.word	-1
 2985 0014 00000000 		.word	0
 2986 0018 00000000 		.word	0
 2987 001c FFFFFFFF 		.word	-1
 2988              		.section	.text.listNeighbours,"ax",%progbits
 2989              		.align	2
 2990              		.global	listNeighbours
 2991              		.thumb
 2992              		.thumb_func
 2993              		.type	listNeighbours, %function
 2994              	listNeighbours:
 2995              	.LFB72:
 731:.\main.c      **** 
 732:.\main.c      **** void listNeighbours(Node val) {
 2996              		.loc 1 732 0
 2997              		.cfi_startproc
 2998              		@ args = 0, pretend = 0, frame = 72
 2999              		@ frame_needed = 1, uses_anonymous_args = 0
 3000              		@ link register save eliminated.
 3001 0000 B0B4     		push	{r4, r5, r7}
 3002              		.cfi_def_cfa_offset 12
 3003              		.cfi_offset 4, -12
 3004              		.cfi_offset 5, -8
 3005              		.cfi_offset 7, -4
 3006 0002 93B0     		sub	sp, sp, #76
 3007              		.cfi_def_cfa_offset 88
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 67


 3008 0004 00AF     		add	r7, sp, #0
 3009              		.cfi_def_cfa_register 7
 3010 0006 B880     		strh	r0, [r7, #4]	@ movhi
 733:.\main.c      **** 	NodeList  listNeighbours = { {{0}},0 };
 3011              		.loc 1 733 0
 3012 0008 07F13403 		add	r3, r7, #52
 3013 000c 0022     		movs	r2, #0
 3014 000e 1A60     		str	r2, [r3]
 3015 0010 0433     		adds	r3, r3, #4
 3016 0012 0022     		movs	r2, #0
 3017 0014 1A60     		str	r2, [r3]
 3018 0016 0433     		adds	r3, r3, #4
 3019 0018 0022     		movs	r2, #0
 3020 001a 1A70     		strb	r2, [r3]
 3021 001c 0133     		adds	r3, r3, #1
 734:.\main.c      **** 	int arrayindex = 0;
 3022              		.loc 1 734 0
 3023 001e 0023     		movs	r3, #0
 3024 0020 7B64     		str	r3, [r7, #68]
 735:.\main.c      **** 
 736:.\main.c      **** 	int direction[4][2] = { {1,0},
 3025              		.loc 1 736 0
 3026 0022 504B     		ldr	r3, .L151
 3027 0024 07F11404 		add	r4, r7, #20
 3028 0028 1D46     		mov	r5, r3
 3029 002a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 3030 002c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 3031 002e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 3032 0032 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 3033              	.LBB7:
 737:.\main.c      **** 						   {0,1},
 738:.\main.c      **** 						   {-1,0},
 739:.\main.c      **** 						   {0,-1} };
 740:.\main.c      **** 	for (int r = 0; r < 4; r++) {
 3034              		.loc 1 740 0
 3035 0036 0023     		movs	r3, #0
 3036 0038 3B64     		str	r3, [r7, #64]
 3037 003a 8AE0     		b	.L145
 3038              	.L150:
 741:.\main.c      **** 		//test if direction is out of the map range 
 742:.\main.c      **** 		if (direction[r][0] != 0) {
 3039              		.loc 1 742 0
 3040 003c 3B6C     		ldr	r3, [r7, #64]
 3041 003e DB00     		lsls	r3, r3, #3
 3042 0040 07F14802 		add	r2, r7, #72
 3043 0044 1344     		add	r3, r3, r2
 3044 0046 53F8343C 		ldr	r3, [r3, #-52]
 3045 004a 002B     		cmp	r3, #0
 3046 004c 3AD0     		beq	.L146
 743:.\main.c      **** 			if ((direction[r][0] + val.row <= MAXMAP_ROWS) && (direction[r][0] + val.row) >= 0) {
 3047              		.loc 1 743 0
 3048 004e 3B6C     		ldr	r3, [r7, #64]
 3049 0050 DB00     		lsls	r3, r3, #3
 3050 0052 07F14802 		add	r2, r7, #72
 3051 0056 1344     		add	r3, r3, r2
 3052 0058 53F8343C 		ldr	r3, [r3, #-52]
 3053 005c 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 68


 3054 005e 1344     		add	r3, r3, r2
 3055 0060 0F2B     		cmp	r3, #15
 3056 0062 2FDC     		bgt	.L146
 3057              		.loc 1 743 0 is_stmt 0 discriminator 1
 3058 0064 3B6C     		ldr	r3, [r7, #64]
 3059 0066 DB00     		lsls	r3, r3, #3
 3060 0068 07F14802 		add	r2, r7, #72
 3061 006c 1344     		add	r3, r3, r2
 3062 006e 53F8343C 		ldr	r3, [r3, #-52]
 3063 0072 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 3064 0074 1344     		add	r3, r3, r2
 3065 0076 002B     		cmp	r3, #0
 3066 0078 24DB     		blt	.L146
 3067              	.LBB8:
 744:.\main.c      **** 				Node storeval = { (char)(direction[r][0] + val.row),(char)val.col };
 3068              		.loc 1 744 0 is_stmt 1
 3069 007a 3B6C     		ldr	r3, [r7, #64]
 3070 007c DB00     		lsls	r3, r3, #3
 3071 007e 07F14802 		add	r2, r7, #72
 3072 0082 1344     		add	r3, r3, r2
 3073 0084 53F8343C 		ldr	r3, [r3, #-52]
 3074 0088 DAB2     		uxtb	r2, r3
 3075 008a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3076 008c 1344     		add	r3, r3, r2
 3077 008e DBB2     		uxtb	r3, r3
 3078 0090 3B74     		strb	r3, [r7, #16]
 3079 0092 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3080 0094 7B74     		strb	r3, [r7, #17]
 745:.\main.c      **** 				if (map[storeval.row][storeval.col] == WALKABLE) {
 3081              		.loc 1 745 0
 3082 0096 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 3083 0098 1A46     		mov	r2, r3
 3084 009a 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 3085 009c 1846     		mov	r0, r3
 3086 009e 3249     		ldr	r1, .L151+4
 3087 00a0 1346     		mov	r3, r2
 3088 00a2 DB00     		lsls	r3, r3, #3
 3089 00a4 1344     		add	r3, r3, r2
 3090 00a6 5B00     		lsls	r3, r3, #1
 3091 00a8 1344     		add	r3, r3, r2
 3092 00aa 0344     		add	r3, r3, r0
 3093 00ac 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3094 00b0 002B     		cmp	r3, #0
 3095 00b2 07D1     		bne	.L146
 746:.\main.c      **** 					neighbours[arrayindex] = storeval;
 3096              		.loc 1 746 0
 3097 00b4 2D49     		ldr	r1, .L151+8
 3098 00b6 7B6C     		ldr	r3, [r7, #68]
 3099 00b8 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 3100 00ba 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 747:.\main.c      **** 					arrayindex++;
 3101              		.loc 1 747 0
 3102 00be 7B6C     		ldr	r3, [r7, #68]
 3103 00c0 0133     		adds	r3, r3, #1
 3104 00c2 7B64     		str	r3, [r7, #68]
 3105              	.L146:
 3106              	.LBE8:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 69


 748:.\main.c      **** 				}
 749:.\main.c      **** 			}
 750:.\main.c      **** 		}
 751:.\main.c      **** 
 752:.\main.c      **** 		if (direction[r][1] != 0) {
 3107              		.loc 1 752 0
 3108 00c4 3B6C     		ldr	r3, [r7, #64]
 3109 00c6 DB00     		lsls	r3, r3, #3
 3110 00c8 07F14802 		add	r2, r7, #72
 3111 00cc 1344     		add	r3, r3, r2
 3112 00ce 53F8303C 		ldr	r3, [r3, #-48]
 3113 00d2 002B     		cmp	r3, #0
 3114 00d4 3AD0     		beq	.L148
 753:.\main.c      **** 			if ((direction[r][1] + val.col <= MAXMAP_COLS) && (direction[r][1] + val.col) >= 0) {
 3115              		.loc 1 753 0
 3116 00d6 3B6C     		ldr	r3, [r7, #64]
 3117 00d8 DB00     		lsls	r3, r3, #3
 3118 00da 07F14802 		add	r2, r7, #72
 3119 00de 1344     		add	r3, r3, r2
 3120 00e0 53F8303C 		ldr	r3, [r3, #-48]
 3121 00e4 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 3122 00e6 1344     		add	r3, r3, r2
 3123 00e8 132B     		cmp	r3, #19
 3124 00ea 2FDC     		bgt	.L148
 3125              		.loc 1 753 0 is_stmt 0 discriminator 1
 3126 00ec 3B6C     		ldr	r3, [r7, #64]
 3127 00ee DB00     		lsls	r3, r3, #3
 3128 00f0 07F14802 		add	r2, r7, #72
 3129 00f4 1344     		add	r3, r3, r2
 3130 00f6 53F8303C 		ldr	r3, [r3, #-48]
 3131 00fa 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 3132 00fc 1344     		add	r3, r3, r2
 3133 00fe 002B     		cmp	r3, #0
 3134 0100 24DB     		blt	.L148
 3135              	.LBB9:
 754:.\main.c      **** 				Node storeval = { (char)val.row,(char)(direction[r][1] + val.col) };
 3136              		.loc 1 754 0 is_stmt 1
 3137 0102 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3138 0104 3B73     		strb	r3, [r7, #12]
 3139 0106 3B6C     		ldr	r3, [r7, #64]
 3140 0108 DB00     		lsls	r3, r3, #3
 3141 010a 07F14802 		add	r2, r7, #72
 3142 010e 1344     		add	r3, r3, r2
 3143 0110 53F8303C 		ldr	r3, [r3, #-48]
 3144 0114 DAB2     		uxtb	r2, r3
 3145 0116 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3146 0118 1344     		add	r3, r3, r2
 3147 011a DBB2     		uxtb	r3, r3
 3148 011c 7B73     		strb	r3, [r7, #13]
 755:.\main.c      **** 				if (map[storeval.row][storeval.col] == WALKABLE) {
 3149              		.loc 1 755 0
 3150 011e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 3151 0120 1A46     		mov	r2, r3
 3152 0122 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 3153 0124 1846     		mov	r0, r3
 3154 0126 1049     		ldr	r1, .L151+4
 3155 0128 1346     		mov	r3, r2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 70


 3156 012a DB00     		lsls	r3, r3, #3
 3157 012c 1344     		add	r3, r3, r2
 3158 012e 5B00     		lsls	r3, r3, #1
 3159 0130 1344     		add	r3, r3, r2
 3160 0132 0344     		add	r3, r3, r0
 3161 0134 51F82330 		ldr	r3, [r1, r3, lsl #2]
 3162 0138 002B     		cmp	r3, #0
 3163 013a 07D1     		bne	.L148
 756:.\main.c      **** 					neighbours[arrayindex] = storeval;
 3164              		.loc 1 756 0
 3165 013c 0B49     		ldr	r1, .L151+8
 3166 013e 7B6C     		ldr	r3, [r7, #68]
 3167 0140 BA89     		ldrh	r2, [r7, #12]	@ movhi
 3168 0142 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 757:.\main.c      **** 					arrayindex++;
 3169              		.loc 1 757 0
 3170 0146 7B6C     		ldr	r3, [r7, #68]
 3171 0148 0133     		adds	r3, r3, #1
 3172 014a 7B64     		str	r3, [r7, #68]
 3173              	.L148:
 3174              	.LBE9:
 740:.\main.c      **** 		//test if direction is out of the map range 
 3175              		.loc 1 740 0 discriminator 2
 3176 014c 3B6C     		ldr	r3, [r7, #64]
 3177 014e 0133     		adds	r3, r3, #1
 3178 0150 3B64     		str	r3, [r7, #64]
 3179              	.L145:
 740:.\main.c      **** 		//test if direction is out of the map range 
 3180              		.loc 1 740 0 is_stmt 0 discriminator 1
 3181 0152 3B6C     		ldr	r3, [r7, #64]
 3182 0154 032B     		cmp	r3, #3
 3183 0156 7FF771AF 		ble	.L150
 3184              	.LBE7:
 758:.\main.c      **** 				}
 759:.\main.c      **** 			}
 760:.\main.c      **** 		}
 761:.\main.c      **** 	}
 762:.\main.c      **** }
 3185              		.loc 1 762 0 is_stmt 1
 3186 015a 4C37     		adds	r7, r7, #76
 3187              		.cfi_def_cfa_offset 12
 3188 015c BD46     		mov	sp, r7
 3189              		.cfi_def_cfa_register 13
 3190              		@ sp needed
 3191 015e B0BC     		pop	{r4, r5, r7}
 3192              		.cfi_restore 7
 3193              		.cfi_restore 5
 3194              		.cfi_restore 4
 3195              		.cfi_def_cfa_offset 0
 3196 0160 7047     		bx	lr
 3197              	.L152:
 3198 0162 00BF     		.align	2
 3199              	.L151:
 3200 0164 00000000 		.word	.LC0
 3201 0168 00000000 		.word	map
 3202 016c 00000000 		.word	neighbours
 3203              		.cfi_endproc
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 71


 3204              	.LFE72:
 3205              		.size	listNeighbours, .-listNeighbours
 3206              		.global	__aeabi_i2d
 3207              		.global	__aeabi_d2iz
 3208              		.section	.text.hCost,"ax",%progbits
 3209              		.align	2
 3210              		.global	hCost
 3211              		.thumb
 3212              		.thumb_func
 3213              		.type	hCost, %function
 3214              	hCost:
 3215              	.LFB73:
 763:.\main.c      **** 
 764:.\main.c      **** int hCost(Node current, Node target) {
 3216              		.loc 1 764 0
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 8
 3219              		@ frame_needed = 1, uses_anonymous_args = 0
 3220 0000 80B5     		push	{r7, lr}
 3221              		.cfi_def_cfa_offset 8
 3222              		.cfi_offset 7, -8
 3223              		.cfi_offset 14, -4
 3224 0002 82B0     		sub	sp, sp, #8
 3225              		.cfi_def_cfa_offset 16
 3226 0004 00AF     		add	r7, sp, #0
 3227              		.cfi_def_cfa_register 7
 3228 0006 B880     		strh	r0, [r7, #4]	@ movhi
 3229 0008 3980     		strh	r1, [r7]	@ movhi
 765:.\main.c      **** 	return sqrt((current.row - target.row)*(current.row - target.row) + (current.col - target.col)*(cu
 3230              		.loc 1 765 0
 3231 000a 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 3232 000c 1A46     		mov	r2, r3
 3233 000e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 3234 0010 D31A     		subs	r3, r2, r3
 3235 0012 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 3236 0014 1146     		mov	r1, r2
 3237 0016 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 3238 0018 8A1A     		subs	r2, r1, r2
 3239 001a 02FB03F2 		mul	r2, r2, r3
 3240 001e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 3241 0020 1946     		mov	r1, r3
 3242 0022 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 3243 0024 CB1A     		subs	r3, r1, r3
 3244 0026 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 3245 0028 0846     		mov	r0, r1
 3246 002a 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 3247 002c 411A     		subs	r1, r0, r1
 3248 002e 01FB03F3 		mul	r3, r1, r3
 3249 0032 1344     		add	r3, r3, r2
 3250 0034 1846     		mov	r0, r3
 3251 0036 FFF7FEFF 		bl	__aeabi_i2d
 3252 003a 0246     		mov	r2, r0
 3253 003c 0B46     		mov	r3, r1
 3254 003e 1046     		mov	r0, r2
 3255 0040 1946     		mov	r1, r3
 3256 0042 FFF7FEFF 		bl	sqrt
 3257 0046 0246     		mov	r2, r0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 72


 3258 0048 0B46     		mov	r3, r1
 3259 004a 1046     		mov	r0, r2
 3260 004c 1946     		mov	r1, r3
 3261 004e FFF7FEFF 		bl	__aeabi_d2iz
 3262 0052 0346     		mov	r3, r0
 766:.\main.c      **** }
 3263              		.loc 1 766 0
 3264 0054 1846     		mov	r0, r3
 3265 0056 0837     		adds	r7, r7, #8
 3266              		.cfi_def_cfa_offset 8
 3267 0058 BD46     		mov	sp, r7
 3268              		.cfi_def_cfa_register 13
 3269              		@ sp needed
 3270 005a 80BD     		pop	{r7, pc}
 3271              		.cfi_endproc
 3272              	.LFE73:
 3273              		.size	hCost, .-hCost
 3274              		.section	.text.push,"ax",%progbits
 3275              		.align	2
 3276              		.global	push
 3277              		.thumb
 3278              		.thumb_func
 3279              		.type	push, %function
 3280              	push:
 3281              	.LFB74:
 767:.\main.c      **** 
 768:.\main.c      **** void push(Node p, Node Array[]) {
 3282              		.loc 1 768 0
 3283              		.cfi_startproc
 3284              		@ args = 0, pretend = 0, frame = 16
 3285              		@ frame_needed = 1, uses_anonymous_args = 0
 3286              		@ link register save eliminated.
 3287 0000 80B4     		push	{r7}
 3288              		.cfi_def_cfa_offset 4
 3289              		.cfi_offset 7, -4
 3290 0002 85B0     		sub	sp, sp, #20
 3291              		.cfi_def_cfa_offset 24
 3292 0004 00AF     		add	r7, sp, #0
 3293              		.cfi_def_cfa_register 7
 3294 0006 B880     		strh	r0, [r7, #4]	@ movhi
 3295 0008 3960     		str	r1, [r7]
 3296              	.LBB10:
 769:.\main.c      **** 
 770:.\main.c      **** 	for (int i = ARRAY_SIZE - 1; i > 0; --i) {
 3297              		.loc 1 770 0
 3298 000a 40F22B13 		movw	r3, #299
 3299 000e FB60     		str	r3, [r7, #12]
 3300 0010 10E0     		b	.L156
 3301              	.L157:
 771:.\main.c      **** 
 772:.\main.c      **** 		Array[i] = Array[i - 1];
 3302              		.loc 1 772 0 discriminator 3
 3303 0012 FB68     		ldr	r3, [r7, #12]
 3304 0014 5B00     		lsls	r3, r3, #1
 3305 0016 3A68     		ldr	r2, [r7]
 3306 0018 D118     		adds	r1, r2, r3
 3307 001a FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 73


 3308 001c 03F10043 		add	r3, r3, #-2147483648
 3309 0020 013B     		subs	r3, r3, #1
 3310 0022 5B00     		lsls	r3, r3, #1
 3311 0024 3A68     		ldr	r2, [r7]
 3312 0026 1344     		add	r3, r3, r2
 3313 0028 0A46     		mov	r2, r1
 3314 002a 1B88     		ldrh	r3, [r3]	@ unaligned
 3315 002c 1380     		strh	r3, [r2]	@ unaligned
 770:.\main.c      **** 
 3316              		.loc 1 770 0 discriminator 3
 3317 002e FB68     		ldr	r3, [r7, #12]
 3318 0030 013B     		subs	r3, r3, #1
 3319 0032 FB60     		str	r3, [r7, #12]
 3320              	.L156:
 770:.\main.c      **** 
 3321              		.loc 1 770 0 is_stmt 0 discriminator 1
 3322 0034 FB68     		ldr	r3, [r7, #12]
 3323 0036 002B     		cmp	r3, #0
 3324 0038 EBDC     		bgt	.L157
 3325              	.LBE10:
 773:.\main.c      **** 	}
 774:.\main.c      **** 
 775:.\main.c      **** 	Array[0] = p;
 3326              		.loc 1 775 0 is_stmt 1
 3327 003a 3B68     		ldr	r3, [r7]
 3328 003c 1A46     		mov	r2, r3
 3329 003e 3B1D     		adds	r3, r7, #4
 3330 0040 1B88     		ldrh	r3, [r3]	@ unaligned
 3331 0042 1380     		strh	r3, [r2]	@ unaligned
 776:.\main.c      **** }
 3332              		.loc 1 776 0
 3333 0044 1437     		adds	r7, r7, #20
 3334              		.cfi_def_cfa_offset 4
 3335 0046 BD46     		mov	sp, r7
 3336              		.cfi_def_cfa_register 13
 3337              		@ sp needed
 3338 0048 5DF8047B 		ldr	r7, [sp], #4
 3339              		.cfi_restore 7
 3340              		.cfi_def_cfa_offset 0
 3341 004c 7047     		bx	lr
 3342              		.cfi_endproc
 3343              	.LFE74:
 3344              		.size	push, .-push
 3345 004e 00BF     		.section	.rodata
 3346              		.align	2
 3347              	.LC1:
 3348 0020 65       		.byte	101
 3349 0021 65       		.byte	101
 3350 0022 0000     		.section	.text.deleteNode,"ax",%progbits
 3351              		.align	2
 3352              		.global	deleteNode
 3353              		.thumb
 3354              		.thumb_func
 3355              		.type	deleteNode, %function
 3356              	deleteNode:
 3357              	.LFB75:
 777:.\main.c      **** 
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 74


 778:.\main.c      **** void deleteNode(Node p, Node Array[]) {
 3358              		.loc 1 778 0
 3359              		.cfi_startproc
 3360              		@ args = 0, pretend = 0, frame = 16
 3361              		@ frame_needed = 1, uses_anonymous_args = 0
 3362              		@ link register save eliminated.
 3363 0000 80B4     		push	{r7}
 3364              		.cfi_def_cfa_offset 4
 3365              		.cfi_offset 7, -4
 3366 0002 85B0     		sub	sp, sp, #20
 3367              		.cfi_def_cfa_offset 24
 3368 0004 00AF     		add	r7, sp, #0
 3369              		.cfi_def_cfa_register 7
 3370 0006 B880     		strh	r0, [r7, #4]	@ movhi
 3371 0008 3960     		str	r1, [r7]
 779:.\main.c      **** 	int f = 0;
 3372              		.loc 1 779 0
 3373 000a 0023     		movs	r3, #0
 3374 000c FB60     		str	r3, [r7, #12]
 3375              	.LBB11:
 780:.\main.c      **** 	for (int i = 0; i < ARRAY_SIZE - 1; ++i) {
 3376              		.loc 1 780 0
 3377 000e 0023     		movs	r3, #0
 3378 0010 BB60     		str	r3, [r7, #8]
 3379 0012 23E0     		b	.L159
 3380              	.L162:
 781:.\main.c      **** 		if (p.row == Array[i].row && p.col == Array[i].col) {
 3381              		.loc 1 781 0
 3382 0014 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 3383 0016 BB68     		ldr	r3, [r7, #8]
 3384 0018 5B00     		lsls	r3, r3, #1
 3385 001a 3968     		ldr	r1, [r7]
 3386 001c 0B44     		add	r3, r3, r1
 3387 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3388 0020 9A42     		cmp	r2, r3
 3389 0022 09D1     		bne	.L160
 3390              		.loc 1 781 0 is_stmt 0 discriminator 1
 3391 0024 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 3392 0026 BB68     		ldr	r3, [r7, #8]
 3393 0028 5B00     		lsls	r3, r3, #1
 3394 002a 3968     		ldr	r1, [r7]
 3395 002c 0B44     		add	r3, r3, r1
 3396 002e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3397 0030 9A42     		cmp	r2, r3
 3398 0032 01D1     		bne	.L160
 782:.\main.c      **** 			f = 1;
 3399              		.loc 1 782 0 is_stmt 1
 3400 0034 0123     		movs	r3, #1
 3401 0036 FB60     		str	r3, [r7, #12]
 3402              	.L160:
 783:.\main.c      **** 		}
 784:.\main.c      **** 		if (f == 1) {
 3403              		.loc 1 784 0
 3404 0038 FB68     		ldr	r3, [r7, #12]
 3405 003a 012B     		cmp	r3, #1
 3406 003c 0BD1     		bne	.L161
 785:.\main.c      **** 			Array[i] = Array[i + 1];
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 75


 3407              		.loc 1 785 0
 3408 003e BB68     		ldr	r3, [r7, #8]
 3409 0040 5B00     		lsls	r3, r3, #1
 3410 0042 3A68     		ldr	r2, [r7]
 3411 0044 D118     		adds	r1, r2, r3
 3412 0046 BB68     		ldr	r3, [r7, #8]
 3413 0048 0133     		adds	r3, r3, #1
 3414 004a 5B00     		lsls	r3, r3, #1
 3415 004c 3A68     		ldr	r2, [r7]
 3416 004e 1344     		add	r3, r3, r2
 3417 0050 0A46     		mov	r2, r1
 3418 0052 1B88     		ldrh	r3, [r3]	@ unaligned
 3419 0054 1380     		strh	r3, [r2]	@ unaligned
 3420              	.L161:
 780:.\main.c      **** 		if (p.row == Array[i].row && p.col == Array[i].col) {
 3421              		.loc 1 780 0 discriminator 2
 3422 0056 BB68     		ldr	r3, [r7, #8]
 3423 0058 0133     		adds	r3, r3, #1
 3424 005a BB60     		str	r3, [r7, #8]
 3425              	.L159:
 780:.\main.c      **** 		if (p.row == Array[i].row && p.col == Array[i].col) {
 3426              		.loc 1 780 0 is_stmt 0 discriminator 1
 3427 005c BB68     		ldr	r3, [r7, #8]
 3428 005e B3F5957F 		cmp	r3, #298
 3429 0062 D7DD     		ble	.L162
 3430              	.LBE11:
 786:.\main.c      **** 		}
 787:.\main.c      **** 
 788:.\main.c      **** 	}
 789:.\main.c      **** 	Array[ARRAY_SIZE - 1] = (Node) { TAIL, TAIL };
 3431              		.loc 1 789 0 is_stmt 1
 3432 0064 3B68     		ldr	r3, [r7]
 3433 0066 03F25623 		addw	r3, r3, #598
 3434 006a 0549     		ldr	r1, .L163
 3435 006c 1A46     		mov	r2, r3
 3436 006e 0B46     		mov	r3, r1
 3437 0070 1B88     		ldrh	r3, [r3]	@ unaligned
 3438 0072 1380     		strh	r3, [r2]	@ unaligned
 790:.\main.c      **** }
 3439              		.loc 1 790 0
 3440 0074 1437     		adds	r7, r7, #20
 3441              		.cfi_def_cfa_offset 4
 3442 0076 BD46     		mov	sp, r7
 3443              		.cfi_def_cfa_register 13
 3444              		@ sp needed
 3445 0078 5DF8047B 		ldr	r7, [sp], #4
 3446              		.cfi_restore 7
 3447              		.cfi_def_cfa_offset 0
 3448 007c 7047     		bx	lr
 3449              	.L164:
 3450 007e 00BF     		.align	2
 3451              	.L163:
 3452 0080 20000000 		.word	.LC1
 3453              		.cfi_endproc
 3454              	.LFE75:
 3455              		.size	deleteNode, .-deleteNode
 3456              		.section	.text.existInList,"ax",%progbits
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 76


 3457              		.align	2
 3458              		.global	existInList
 3459              		.thumb
 3460              		.thumb_func
 3461              		.type	existInList, %function
 3462              	existInList:
 3463              	.LFB76:
 791:.\main.c      **** 
 792:.\main.c      **** int existInList(Node p, Node Array[]) {
 3464              		.loc 1 792 0
 3465              		.cfi_startproc
 3466              		@ args = 0, pretend = 0, frame = 16
 3467              		@ frame_needed = 1, uses_anonymous_args = 0
 3468              		@ link register save eliminated.
 3469 0000 80B4     		push	{r7}
 3470              		.cfi_def_cfa_offset 4
 3471              		.cfi_offset 7, -4
 3472 0002 85B0     		sub	sp, sp, #20
 3473              		.cfi_def_cfa_offset 24
 3474 0004 00AF     		add	r7, sp, #0
 3475              		.cfi_def_cfa_register 7
 3476 0006 B880     		strh	r0, [r7, #4]	@ movhi
 3477 0008 3960     		str	r1, [r7]
 3478              	.LBB12:
 793:.\main.c      **** 	for (int i = 0; i < ARRAY_SIZE - 1; ++i) {
 3479              		.loc 1 793 0
 3480 000a 0023     		movs	r3, #0
 3481 000c FB60     		str	r3, [r7, #12]
 3482 000e 14E0     		b	.L166
 3483              	.L169:
 794:.\main.c      **** 		if (p.row == Array[i].row && p.col == Array[i].col) {
 3484              		.loc 1 794 0
 3485 0010 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2
 3486 0012 FB68     		ldr	r3, [r7, #12]
 3487 0014 5B00     		lsls	r3, r3, #1
 3488 0016 3968     		ldr	r1, [r7]
 3489 0018 0B44     		add	r3, r3, r1
 3490 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3491 001c 9A42     		cmp	r2, r3
 3492 001e 09D1     		bne	.L167
 3493              		.loc 1 794 0 is_stmt 0 discriminator 1
 3494 0020 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 3495 0022 FB68     		ldr	r3, [r7, #12]
 3496 0024 5B00     		lsls	r3, r3, #1
 3497 0026 3968     		ldr	r1, [r7]
 3498 0028 0B44     		add	r3, r3, r1
 3499 002a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3500 002c 9A42     		cmp	r2, r3
 3501 002e 01D1     		bne	.L167
 795:.\main.c      **** 			return 1;
 3502              		.loc 1 795 0 is_stmt 1
 3503 0030 0123     		movs	r3, #1
 3504 0032 07E0     		b	.L168
 3505              	.L167:
 793:.\main.c      **** 	for (int i = 0; i < ARRAY_SIZE - 1; ++i) {
 3506              		.loc 1 793 0 discriminator 2
 3507 0034 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 77


 3508 0036 0133     		adds	r3, r3, #1
 3509 0038 FB60     		str	r3, [r7, #12]
 3510              	.L166:
 793:.\main.c      **** 	for (int i = 0; i < ARRAY_SIZE - 1; ++i) {
 3511              		.loc 1 793 0 is_stmt 0 discriminator 1
 3512 003a FB68     		ldr	r3, [r7, #12]
 3513 003c B3F5957F 		cmp	r3, #298
 3514 0040 E6DD     		ble	.L169
 3515              	.LBE12:
 796:.\main.c      **** 		}
 797:.\main.c      **** 	}
 798:.\main.c      **** 	return 0;
 3516              		.loc 1 798 0 is_stmt 1
 3517 0042 0023     		movs	r3, #0
 3518              	.L168:
 799:.\main.c      **** }
 3519              		.loc 1 799 0
 3520 0044 1846     		mov	r0, r3
 3521 0046 1437     		adds	r7, r7, #20
 3522              		.cfi_def_cfa_offset 4
 3523 0048 BD46     		mov	sp, r7
 3524              		.cfi_def_cfa_register 13
 3525              		@ sp needed
 3526 004a 5DF8047B 		ldr	r7, [sp], #4
 3527              		.cfi_restore 7
 3528              		.cfi_def_cfa_offset 0
 3529 004e 7047     		bx	lr
 3530              		.cfi_endproc
 3531              	.LFE76:
 3532              		.size	existInList, .-existInList
 3533              		.section	.text.astar_and_append,"ax",%progbits
 3534              		.align	2
 3535              		.global	astar_and_append
 3536              		.thumb
 3537              		.thumb_func
 3538              		.type	astar_and_append, %function
 3539              	astar_and_append:
 3540              	.LFB77:
 800:.\main.c      **** 
 801:.\main.c      **** void astar_and_append() {
 3541              		.loc 1 801 0
 3542              		.cfi_startproc
 3543              		@ args = 0, pretend = 0, frame = 32
 3544              		@ frame_needed = 1, uses_anonymous_args = 0
 3545 0000 80B5     		push	{r7, lr}
 3546              		.cfi_def_cfa_offset 8
 3547              		.cfi_offset 7, -8
 3548              		.cfi_offset 14, -4
 3549 0002 88B0     		sub	sp, sp, #32
 3550              		.cfi_def_cfa_offset 40
 3551 0004 00AF     		add	r7, sp, #0
 3552              		.cfi_def_cfa_register 7
 802:.\main.c      ****     
 803:.\main.c      ****     // Executes ASTAR.
 804:.\main.c      **** 	astar();
 3553              		.loc 1 804 0
 3554 0006 FFF7FEFF 		bl	astar
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 78


 3555              	.LBB13:
 805:.\main.c      ****     
 806:.\main.c      ****     // Finds the next free index in the final path array.
 807:.\main.c      ****     for (int i = 0; i < 500; ++i) {
 3556              		.loc 1 807 0
 3557 000a 0023     		movs	r3, #0
 3558 000c FB61     		str	r3, [r7, #28]
 3559 000e 0CE0     		b	.L171
 3560              	.L174:
 808:.\main.c      ****         if (FinalArray[i].row == TAIL) {
 3561              		.loc 1 808 0
 3562 0010 604A     		ldr	r2, .L187
 3563 0012 FB69     		ldr	r3, [r7, #28]
 3564 0014 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 3565 0018 652B     		cmp	r3, #101
 3566 001a 03D1     		bne	.L172
 809:.\main.c      ****             next_free_index = i;
 3567              		.loc 1 809 0
 3568 001c 5E4A     		ldr	r2, .L187+4
 3569 001e FB69     		ldr	r3, [r7, #28]
 3570 0020 1360     		str	r3, [r2]
 810:.\main.c      ****             break;
 3571              		.loc 1 810 0
 3572 0022 06E0     		b	.L173
 3573              	.L172:
 807:.\main.c      ****         if (FinalArray[i].row == TAIL) {
 3574              		.loc 1 807 0 discriminator 2
 3575 0024 FB69     		ldr	r3, [r7, #28]
 3576 0026 0133     		adds	r3, r3, #1
 3577 0028 FB61     		str	r3, [r7, #28]
 3578              	.L171:
 807:.\main.c      ****         if (FinalArray[i].row == TAIL) {
 3579              		.loc 1 807 0 is_stmt 0 discriminator 1
 3580 002a FB69     		ldr	r3, [r7, #28]
 3581 002c B3F5FA7F 		cmp	r3, #500
 3582 0030 EEDB     		blt	.L174
 3583              	.L173:
 3584              	.LBE13:
 3585              	.LBB14:
 811:.\main.c      ****         }
 812:.\main.c      ****     }
 813:.\main.c      ****     
 814:.\main.c      ****     // Chucks the generated path into the final path array.
 815:.\main.c      ****     for (int i = 0; PathArray[i].row != TAIL; ++i) {
 3586              		.loc 1 815 0 is_stmt 1
 3587 0032 0023     		movs	r3, #0
 3588 0034 BB61     		str	r3, [r7, #24]
 3589 0036 13E0     		b	.L175
 3590              	.L176:
 816:.\main.c      ****         FinalArray[next_free_index] = PathArray[i+1];
 3591              		.loc 1 816 0 discriminator 3
 3592 0038 574B     		ldr	r3, .L187+4
 3593 003a 1B68     		ldr	r3, [r3]
 3594 003c BA69     		ldr	r2, [r7, #24]
 3595 003e 0132     		adds	r2, r2, #1
 3596 0040 5448     		ldr	r0, .L187
 3597 0042 5649     		ldr	r1, .L187+8
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 79


 3598 0044 5B00     		lsls	r3, r3, #1
 3599 0046 0344     		add	r3, r3, r0
 3600 0048 5200     		lsls	r2, r2, #1
 3601 004a 0A44     		add	r2, r2, r1
 3602 004c 1288     		ldrh	r2, [r2]	@ unaligned
 3603 004e 1A80     		strh	r2, [r3]	@ unaligned
 817:.\main.c      ****         ++next_free_index;
 3604              		.loc 1 817 0 discriminator 3
 3605 0050 514B     		ldr	r3, .L187+4
 3606 0052 1B68     		ldr	r3, [r3]
 3607 0054 0133     		adds	r3, r3, #1
 3608 0056 504A     		ldr	r2, .L187+4
 3609 0058 1360     		str	r3, [r2]
 815:.\main.c      ****         FinalArray[next_free_index] = PathArray[i+1];
 3610              		.loc 1 815 0 discriminator 3
 3611 005a BB69     		ldr	r3, [r7, #24]
 3612 005c 0133     		adds	r3, r3, #1
 3613 005e BB61     		str	r3, [r7, #24]
 3614              	.L175:
 815:.\main.c      ****         FinalArray[next_free_index] = PathArray[i+1];
 3615              		.loc 1 815 0 is_stmt 0 discriminator 1
 3616 0060 4E4A     		ldr	r2, .L187+8
 3617 0062 BB69     		ldr	r3, [r7, #24]
 3618 0064 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 3619 0068 652B     		cmp	r3, #101
 3620 006a E5D1     		bne	.L176
 3621              	.LBE14:
 3622              	.LBB15:
 818:.\main.c      ****     }
 819:.\main.c      ****     
 820:.\main.c      ****     // Any food along this generated path has been eaten.
 821:.\main.c      ****     for (int i = 0; PathArray[i].row != TAIL; ++i) {
 3623              		.loc 1 821 0 is_stmt 1
 3624 006c 0023     		movs	r3, #0
 3625 006e 7B61     		str	r3, [r7, #20]
 3626 0070 17E0     		b	.L177
 3627              	.L178:
 822:.\main.c      ****         food_states[PathArray[i].row][PathArray[i].col] = 1;
 3628              		.loc 1 822 0 discriminator 3
 3629 0072 4A4A     		ldr	r2, .L187+8
 3630 0074 7B69     		ldr	r3, [r7, #20]
 3631 0076 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 3632 007a 1A46     		mov	r2, r3
 3633 007c 4749     		ldr	r1, .L187+8
 3634 007e 7B69     		ldr	r3, [r7, #20]
 3635 0080 5B00     		lsls	r3, r3, #1
 3636 0082 0B44     		add	r3, r3, r1
 3637 0084 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3638 0086 1846     		mov	r0, r3
 3639 0088 4549     		ldr	r1, .L187+12
 3640 008a 1346     		mov	r3, r2
 3641 008c DB00     		lsls	r3, r3, #3
 3642 008e 1344     		add	r3, r3, r2
 3643 0090 5B00     		lsls	r3, r3, #1
 3644 0092 1344     		add	r3, r3, r2
 3645 0094 0344     		add	r3, r3, r0
 3646 0096 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 80


 3647 0098 0122     		movs	r2, #1
 3648 009a 1A70     		strb	r2, [r3]
 821:.\main.c      ****         food_states[PathArray[i].row][PathArray[i].col] = 1;
 3649              		.loc 1 821 0 discriminator 3
 3650 009c 7B69     		ldr	r3, [r7, #20]
 3651 009e 0133     		adds	r3, r3, #1
 3652 00a0 7B61     		str	r3, [r7, #20]
 3653              	.L177:
 821:.\main.c      ****         food_states[PathArray[i].row][PathArray[i].col] = 1;
 3654              		.loc 1 821 0 is_stmt 0 discriminator 1
 3655 00a2 3E4A     		ldr	r2, .L187+8
 3656 00a4 7B69     		ldr	r3, [r7, #20]
 3657 00a6 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 3658 00aa 652B     		cmp	r3, #101
 3659 00ac E1D1     		bne	.L178
 3660              	.LBE15:
 3661              	.LBB16:
 823:.\main.c      ****     }
 824:.\main.c      ****     
 825:.\main.c      ****     // Flushes all the arrays.
 826:.\main.c      ****     for (int i = 0; i < ARRAY_SIZE; ++i) {
 3662              		.loc 1 826 0 is_stmt 1
 3663 00ae 0023     		movs	r3, #0
 3664 00b0 3B61     		str	r3, [r7, #16]
 3665 00b2 23E0     		b	.L179
 3666              	.L180:
 827:.\main.c      ****         PathArray[i].row = TAIL;
 3667              		.loc 1 827 0 discriminator 3
 3668 00b4 394A     		ldr	r2, .L187+8
 3669 00b6 3B69     		ldr	r3, [r7, #16]
 3670 00b8 6521     		movs	r1, #101
 3671 00ba 02F81310 		strb	r1, [r2, r3, lsl #1]
 828:.\main.c      ****         PathArray[i].col = TAIL;
 3672              		.loc 1 828 0 discriminator 3
 3673 00be 374A     		ldr	r2, .L187+8
 3674 00c0 3B69     		ldr	r3, [r7, #16]
 3675 00c2 5B00     		lsls	r3, r3, #1
 3676 00c4 1344     		add	r3, r3, r2
 3677 00c6 6522     		movs	r2, #101
 3678 00c8 5A70     		strb	r2, [r3, #1]
 829:.\main.c      ****         NewNodes[i].row = TAIL;
 3679              		.loc 1 829 0 discriminator 3
 3680 00ca 364A     		ldr	r2, .L187+16
 3681 00cc 3B69     		ldr	r3, [r7, #16]
 3682 00ce 6521     		movs	r1, #101
 3683 00d0 02F81310 		strb	r1, [r2, r3, lsl #1]
 830:.\main.c      ****         NewNodes[i].col = TAIL;
 3684              		.loc 1 830 0 discriminator 3
 3685 00d4 334A     		ldr	r2, .L187+16
 3686 00d6 3B69     		ldr	r3, [r7, #16]
 3687 00d8 5B00     		lsls	r3, r3, #1
 3688 00da 1344     		add	r3, r3, r2
 3689 00dc 6522     		movs	r2, #101
 3690 00de 5A70     		strb	r2, [r3, #1]
 831:.\main.c      ****         OldNodes[i].row = TAIL;
 3691              		.loc 1 831 0 discriminator 3
 3692 00e0 314A     		ldr	r2, .L187+20
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 81


 3693 00e2 3B69     		ldr	r3, [r7, #16]
 3694 00e4 6521     		movs	r1, #101
 3695 00e6 02F81310 		strb	r1, [r2, r3, lsl #1]
 832:.\main.c      ****         OldNodes[i].col = TAIL;
 3696              		.loc 1 832 0 discriminator 3
 3697 00ea 2F4A     		ldr	r2, .L187+20
 3698 00ec 3B69     		ldr	r3, [r7, #16]
 3699 00ee 5B00     		lsls	r3, r3, #1
 3700 00f0 1344     		add	r3, r3, r2
 3701 00f2 6522     		movs	r2, #101
 3702 00f4 5A70     		strb	r2, [r3, #1]
 826:.\main.c      ****         PathArray[i].row = TAIL;
 3703              		.loc 1 826 0 discriminator 3
 3704 00f6 3B69     		ldr	r3, [r7, #16]
 3705 00f8 0133     		adds	r3, r3, #1
 3706 00fa 3B61     		str	r3, [r7, #16]
 3707              	.L179:
 826:.\main.c      ****         PathArray[i].row = TAIL;
 3708              		.loc 1 826 0 is_stmt 0 discriminator 1
 3709 00fc 3B69     		ldr	r3, [r7, #16]
 3710 00fe B3F5967F 		cmp	r3, #300
 3711 0102 D7DB     		blt	.L180
 3712              	.LBE16:
 3713              	.LBB17:
 833:.\main.c      ****     }
 834:.\main.c      ****     
 835:.\main.c      ****     for (int i = 0; i < MAXMAP_ROWS; ++i) {
 3714              		.loc 1 835 0 is_stmt 1
 3715 0104 0023     		movs	r3, #0
 3716 0106 FB60     		str	r3, [r7, #12]
 3717 0108 23E0     		b	.L181
 3718              	.L184:
 3719              	.LBB18:
 836:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 3720              		.loc 1 836 0
 3721 010a 0023     		movs	r3, #0
 3722 010c BB60     		str	r3, [r7, #8]
 3723 010e 1AE0     		b	.L182
 3724              	.L183:
 837:.\main.c      ****             visited[i][j] = 0;
 3725              		.loc 1 837 0 discriminator 3
 3726 0110 2649     		ldr	r1, .L187+24
 3727 0112 FA68     		ldr	r2, [r7, #12]
 3728 0114 1346     		mov	r3, r2
 3729 0116 DB00     		lsls	r3, r3, #3
 3730 0118 1344     		add	r3, r3, r2
 3731 011a 5B00     		lsls	r3, r3, #1
 3732 011c 1344     		add	r3, r3, r2
 3733 011e BA68     		ldr	r2, [r7, #8]
 3734 0120 1344     		add	r3, r3, r2
 3735 0122 0B44     		add	r3, r3, r1
 3736 0124 0022     		movs	r2, #0
 3737 0126 1A70     		strb	r2, [r3]
 838:.\main.c      ****             newNodes[i][j] = 0;
 3738              		.loc 1 838 0 discriminator 3
 3739 0128 2149     		ldr	r1, .L187+28
 3740 012a FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 82


 3741 012c 1346     		mov	r3, r2
 3742 012e DB00     		lsls	r3, r3, #3
 3743 0130 1344     		add	r3, r3, r2
 3744 0132 5B00     		lsls	r3, r3, #1
 3745 0134 1344     		add	r3, r3, r2
 3746 0136 BA68     		ldr	r2, [r7, #8]
 3747 0138 1344     		add	r3, r3, r2
 3748 013a 0B44     		add	r3, r3, r1
 3749 013c 0022     		movs	r2, #0
 3750 013e 1A70     		strb	r2, [r3]
 836:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 3751              		.loc 1 836 0 discriminator 3
 3752 0140 BB68     		ldr	r3, [r7, #8]
 3753 0142 0133     		adds	r3, r3, #1
 3754 0144 BB60     		str	r3, [r7, #8]
 3755              	.L182:
 836:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 3756              		.loc 1 836 0 is_stmt 0 discriminator 1
 3757 0146 BB68     		ldr	r3, [r7, #8]
 3758 0148 122B     		cmp	r3, #18
 3759 014a E1DD     		ble	.L183
 3760              	.LBE18:
 835:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 3761              		.loc 1 835 0 is_stmt 1 discriminator 2
 3762 014c FB68     		ldr	r3, [r7, #12]
 3763 014e 0133     		adds	r3, r3, #1
 3764 0150 FB60     		str	r3, [r7, #12]
 3765              	.L181:
 835:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 3766              		.loc 1 835 0 is_stmt 0 discriminator 1
 3767 0152 FB68     		ldr	r3, [r7, #12]
 3768 0154 0E2B     		cmp	r3, #14
 3769 0156 D8DD     		ble	.L184
 3770              	.LBE17:
 839:.\main.c      ****         }
 840:.\main.c      ****     }
 841:.\main.c      ****     
 842:.\main.c      ****     Node TailNode;
 843:.\main.c      ****     TailNode.row = TAIL;
 3771              		.loc 1 843 0 is_stmt 1
 3772 0158 6523     		movs	r3, #101
 3773 015a 3B70     		strb	r3, [r7]
 844:.\main.c      ****     TailNode.col = TAIL;
 3774              		.loc 1 844 0
 3775 015c 6523     		movs	r3, #101
 3776 015e 7B70     		strb	r3, [r7, #1]
 3777              	.LBB19:
 845:.\main.c      ****     
 846:.\main.c      ****     for (int i = 0; i < 4; ++i) {
 3778              		.loc 1 846 0
 3779 0160 0023     		movs	r3, #0
 3780 0162 7B60     		str	r3, [r7, #4]
 3781 0164 07E0     		b	.L185
 3782              	.L186:
 847:.\main.c      ****         neighbours[i] = TailNode;
 3783              		.loc 1 847 0 discriminator 3
 3784 0166 1349     		ldr	r1, .L187+32
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 83


 3785 0168 7B68     		ldr	r3, [r7, #4]
 3786 016a 3A88     		ldrh	r2, [r7]	@ movhi
 3787 016c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 846:.\main.c      ****         neighbours[i] = TailNode;
 3788              		.loc 1 846 0 discriminator 3
 3789 0170 7B68     		ldr	r3, [r7, #4]
 3790 0172 0133     		adds	r3, r3, #1
 3791 0174 7B60     		str	r3, [r7, #4]
 3792              	.L185:
 846:.\main.c      ****         neighbours[i] = TailNode;
 3793              		.loc 1 846 0 is_stmt 0 discriminator 1
 3794 0176 7B68     		ldr	r3, [r7, #4]
 3795 0178 032B     		cmp	r3, #3
 3796 017a F4DD     		ble	.L186
 3797              	.LBE19:
 848:.\main.c      ****     }
 849:.\main.c      ****     
 850:.\main.c      ****     // We are now at pizza.
 851:.\main.c      ****     START_ROW = PIZZA_ROW;
 3798              		.loc 1 851 0 is_stmt 1
 3799 017c 0E4B     		ldr	r3, .L187+36
 3800 017e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3801 0180 0E4B     		ldr	r3, .L187+40
 3802 0182 1A70     		strb	r2, [r3]
 852:.\main.c      ****     START_COL = PIZZA_COL;
 3803              		.loc 1 852 0
 3804 0184 0E4B     		ldr	r3, .L187+44
 3805 0186 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3806 0188 0E4B     		ldr	r3, .L187+48
 3807 018a 1A70     		strb	r2, [r3]
 853:.\main.c      **** }
 3808              		.loc 1 853 0
 3809 018c 2037     		adds	r7, r7, #32
 3810              		.cfi_def_cfa_offset 8
 3811 018e BD46     		mov	sp, r7
 3812              		.cfi_def_cfa_register 13
 3813              		@ sp needed
 3814 0190 80BD     		pop	{r7, pc}
 3815              	.L188:
 3816 0192 00BF     		.align	2
 3817              	.L187:
 3818 0194 00000000 		.word	FinalArray
 3819 0198 00000000 		.word	next_free_index
 3820 019c 00000000 		.word	PathArray
 3821 01a0 00000000 		.word	food_states
 3822 01a4 00000000 		.word	NewNodes
 3823 01a8 00000000 		.word	OldNodes
 3824 01ac 00000000 		.word	visited
 3825 01b0 00000000 		.word	newNodes
 3826 01b4 00000000 		.word	neighbours
 3827 01b8 00000000 		.word	PIZZA_ROW
 3828 01bc 00000000 		.word	START_ROW
 3829 01c0 00000000 		.word	PIZZA_COL
 3830 01c4 00000000 		.word	START_COL
 3831              		.cfi_endproc
 3832              	.LFE77:
 3833              		.size	astar_and_append, .-astar_and_append
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 84


 3834              		.global	__aeabi_dadd
 3835              		.global	__aeabi_dcmplt
 3836              		.section	.text.findNearestFood,"ax",%progbits
 3837              		.align	2
 3838              		.global	findNearestFood
 3839              		.thumb
 3840              		.thumb_func
 3841              		.type	findNearestFood, %function
 3842              	findNearestFood:
 3843              	.LFB78:
 854:.\main.c      **** 
 855:.\main.c      **** void findNearestFood() {
 3844              		.loc 1 855 0
 3845              		.cfi_startproc
 3846              		@ args = 0, pretend = 0, frame = 24
 3847              		@ frame_needed = 1, uses_anonymous_args = 0
 3848 0000 B0B5     		push	{r4, r5, r7, lr}
 3849              		.cfi_def_cfa_offset 16
 3850              		.cfi_offset 4, -16
 3851              		.cfi_offset 5, -12
 3852              		.cfi_offset 7, -8
 3853              		.cfi_offset 14, -4
 3854 0002 86B0     		sub	sp, sp, #24
 3855              		.cfi_def_cfa_offset 40
 3856 0004 00AF     		add	r7, sp, #0
 3857              		.cfi_def_cfa_register 7
 856:.\main.c      **** 
 857:.\main.c      ****     double closest_dist = 999.0;
 3858              		.loc 1 857 0
 3859 0006 40A3     		adr	r3, .L197
 3860 0008 D3E90023 		ldrd	r2, [r3]
 3861 000c C7E90423 		strd	r2, [r7, #16]
 858:.\main.c      ****     
 859:.\main.c      ****     // Our current location's food is eaten.
 860:.\main.c      ****     food_states[START_ROW][START_COL] = 1;
 3862              		.loc 1 860 0
 3863 0010 3F4B     		ldr	r3, .L197+8
 3864 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3865 0014 1A46     		mov	r2, r3
 3866 0016 3F4B     		ldr	r3, .L197+12
 3867 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3868 001a 1846     		mov	r0, r3
 3869 001c 3E49     		ldr	r1, .L197+16
 3870 001e 1346     		mov	r3, r2
 3871 0020 DB00     		lsls	r3, r3, #3
 3872 0022 1344     		add	r3, r3, r2
 3873 0024 5B00     		lsls	r3, r3, #1
 3874 0026 1344     		add	r3, r3, r2
 3875 0028 0344     		add	r3, r3, r0
 3876 002a 0B44     		add	r3, r3, r1
 3877 002c 0122     		movs	r2, #1
 3878 002e 1A70     		strb	r2, [r3]
 3879              	.LBB20:
 861:.\main.c      ****     
 862:.\main.c      ****     for (int i = 0; i < MAXMAP_ROWS; ++i) {
 3880              		.loc 1 862 0
 3881 0030 0023     		movs	r3, #0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 85


 3882 0032 FB60     		str	r3, [r7, #12]
 3883 0034 61E0     		b	.L190
 3884              	.L195:
 3885              	.LBB21:
 863:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 3886              		.loc 1 863 0
 3887 0036 0023     		movs	r3, #0
 3888 0038 BB60     		str	r3, [r7, #8]
 3889 003a 58E0     		b	.L191
 3890              	.L194:
 864:.\main.c      ****             if (food_states[i][j] == 0) {
 3891              		.loc 1 864 0
 3892 003c 3649     		ldr	r1, .L197+16
 3893 003e FA68     		ldr	r2, [r7, #12]
 3894 0040 1346     		mov	r3, r2
 3895 0042 DB00     		lsls	r3, r3, #3
 3896 0044 1344     		add	r3, r3, r2
 3897 0046 5B00     		lsls	r3, r3, #1
 3898 0048 1344     		add	r3, r3, r2
 3899 004a BA68     		ldr	r2, [r7, #8]
 3900 004c 1344     		add	r3, r3, r2
 3901 004e 0B44     		add	r3, r3, r1
 3902 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3903 0052 002B     		cmp	r3, #0
 3904 0054 48D1     		bne	.L192
 3905              	.LBB22:
 865:.\main.c      ****                 
 866:.\main.c      ****                 // Gets the distance to this new food.
 867:.\main.c      ****                 double distance = sqrt(pow((START_ROW - i),2) + pow((START_COL - j),2));
 3906              		.loc 1 867 0
 3907 0056 2E4B     		ldr	r3, .L197+8
 3908 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3909 005a 1A46     		mov	r2, r3
 3910 005c FB68     		ldr	r3, [r7, #12]
 3911 005e D31A     		subs	r3, r2, r3
 3912 0060 1846     		mov	r0, r3
 3913 0062 FFF7FEFF 		bl	__aeabi_i2d
 3914 0066 0246     		mov	r2, r0
 3915 0068 0B46     		mov	r3, r1
 3916 006a 1046     		mov	r0, r2
 3917 006c 1946     		mov	r1, r3
 3918 006e 4FF00002 		mov	r2, #0
 3919 0072 4FF08043 		mov	r3, #1073741824
 3920 0076 FFF7FEFF 		bl	pow
 3921 007a 0446     		mov	r4, r0
 3922 007c 0D46     		mov	r5, r1
 3923 007e 254B     		ldr	r3, .L197+12
 3924 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3925 0082 1A46     		mov	r2, r3
 3926 0084 BB68     		ldr	r3, [r7, #8]
 3927 0086 D31A     		subs	r3, r2, r3
 3928 0088 1846     		mov	r0, r3
 3929 008a FFF7FEFF 		bl	__aeabi_i2d
 3930 008e 0246     		mov	r2, r0
 3931 0090 0B46     		mov	r3, r1
 3932 0092 1046     		mov	r0, r2
 3933 0094 1946     		mov	r1, r3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 86


 3934 0096 4FF00002 		mov	r2, #0
 3935 009a 4FF08043 		mov	r3, #1073741824
 3936 009e FFF7FEFF 		bl	pow
 3937 00a2 0246     		mov	r2, r0
 3938 00a4 0B46     		mov	r3, r1
 3939 00a6 2046     		mov	r0, r4
 3940 00a8 2946     		mov	r1, r5
 3941 00aa FFF7FEFF 		bl	__aeabi_dadd
 3942 00ae 0246     		mov	r2, r0
 3943 00b0 0B46     		mov	r3, r1
 3944 00b2 1046     		mov	r0, r2
 3945 00b4 1946     		mov	r1, r3
 3946 00b6 FFF7FEFF 		bl	sqrt
 3947 00ba C7E90001 		strd	r0, [r7]
 868:.\main.c      ****                 
 869:.\main.c      ****                 // Always gets the closest food.
 870:.\main.c      ****                 if (distance < closest_dist) {
 3948              		.loc 1 870 0
 3949 00be D7E90001 		ldrd	r0, [r7]
 3950 00c2 D7E90423 		ldrd	r2, [r7, #16]
 3951 00c6 FFF7FEFF 		bl	__aeabi_dcmplt
 3952 00ca 0346     		mov	r3, r0
 3953 00cc 002B     		cmp	r3, #0
 3954 00ce 0BD0     		beq	.L192
 871:.\main.c      ****                     closest_dist = distance;
 3955              		.loc 1 871 0
 3956 00d0 D7E90023 		ldrd	r2, [r7]
 3957 00d4 C7E90423 		strd	r2, [r7, #16]
 872:.\main.c      ****                     PIZZA_ROW = i;
 3958              		.loc 1 872 0
 3959 00d8 FB68     		ldr	r3, [r7, #12]
 3960 00da DAB2     		uxtb	r2, r3
 3961 00dc 0F4B     		ldr	r3, .L197+20
 3962 00de 1A70     		strb	r2, [r3]
 873:.\main.c      ****                     PIZZA_COL = j;
 3963              		.loc 1 873 0
 3964 00e0 BB68     		ldr	r3, [r7, #8]
 3965 00e2 DAB2     		uxtb	r2, r3
 3966 00e4 0E4B     		ldr	r3, .L197+24
 3967 00e6 1A70     		strb	r2, [r3]
 3968              	.L192:
 3969              	.LBE22:
 863:.\main.c      ****             if (food_states[i][j] == 0) {
 3970              		.loc 1 863 0 discriminator 2
 3971 00e8 BB68     		ldr	r3, [r7, #8]
 3972 00ea 0133     		adds	r3, r3, #1
 3973 00ec BB60     		str	r3, [r7, #8]
 3974              	.L191:
 863:.\main.c      ****             if (food_states[i][j] == 0) {
 3975              		.loc 1 863 0 is_stmt 0 discriminator 1
 3976 00ee BB68     		ldr	r3, [r7, #8]
 3977 00f0 122B     		cmp	r3, #18
 3978 00f2 A3DD     		ble	.L194
 3979              	.LBE21:
 862:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 3980              		.loc 1 862 0 is_stmt 1 discriminator 2
 3981 00f4 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 87


 3982 00f6 0133     		adds	r3, r3, #1
 3983 00f8 FB60     		str	r3, [r7, #12]
 3984              	.L190:
 862:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 3985              		.loc 1 862 0 is_stmt 0 discriminator 1
 3986 00fa FB68     		ldr	r3, [r7, #12]
 3987 00fc 0E2B     		cmp	r3, #14
 3988 00fe 9ADD     		ble	.L195
 3989              	.LBE20:
 874:.\main.c      ****                 }
 875:.\main.c      ****             }
 876:.\main.c      ****         }
 877:.\main.c      ****     }
 878:.\main.c      **** }
 3990              		.loc 1 878 0 is_stmt 1
 3991 0100 1837     		adds	r7, r7, #24
 3992              		.cfi_def_cfa_offset 16
 3993 0102 BD46     		mov	sp, r7
 3994              		.cfi_def_cfa_register 13
 3995              		@ sp needed
 3996 0104 B0BD     		pop	{r4, r5, r7, pc}
 3997              	.L198:
 3998 0106 00BF     		.align	3
 3999              	.L197:
 4000 0108 00000000 		.word	0
 4001 010c 00388F40 		.word	1083127808
 4002 0110 00000000 		.word	START_ROW
 4003 0114 00000000 		.word	START_COL
 4004 0118 00000000 		.word	food_states
 4005 011c 00000000 		.word	PIZZA_ROW
 4006 0120 00000000 		.word	PIZZA_COL
 4007              		.cfi_endproc
 4008              	.LFE78:
 4009              		.size	findNearestFood, .-findNearestFood
 4010 0124 AFF30080 		.section	.text.foodLeft,"ax",%progbits
 4011              		.align	2
 4012              		.global	foodLeft
 4013              		.thumb
 4014              		.thumb_func
 4015              		.type	foodLeft, %function
 4016              	foodLeft:
 4017              	.LFB79:
 879:.\main.c      **** 
 880:.\main.c      **** int foodLeft() {
 4018              		.loc 1 880 0
 4019              		.cfi_startproc
 4020              		@ args = 0, pretend = 0, frame = 16
 4021              		@ frame_needed = 1, uses_anonymous_args = 0
 4022              		@ link register save eliminated.
 4023 0000 80B4     		push	{r7}
 4024              		.cfi_def_cfa_offset 4
 4025              		.cfi_offset 7, -4
 4026 0002 85B0     		sub	sp, sp, #20
 4027              		.cfi_def_cfa_offset 24
 4028 0004 00AF     		add	r7, sp, #0
 4029              		.cfi_def_cfa_register 7
 881:.\main.c      ****     
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 88


 882:.\main.c      ****     int counter = 0;
 4030              		.loc 1 882 0
 4031 0006 0023     		movs	r3, #0
 4032 0008 FB60     		str	r3, [r7, #12]
 4033              	.LBB23:
 883:.\main.c      ****     
 884:.\main.c      ****     for (int i = 0; i < MAXMAP_ROWS; ++i) {
 4034              		.loc 1 884 0
 4035 000a 0023     		movs	r3, #0
 4036 000c BB60     		str	r3, [r7, #8]
 4037 000e 1BE0     		b	.L200
 4038              	.L204:
 4039              	.LBB24:
 885:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 4040              		.loc 1 885 0
 4041 0010 0023     		movs	r3, #0
 4042 0012 7B60     		str	r3, [r7, #4]
 4043 0014 12E0     		b	.L201
 4044              	.L203:
 886:.\main.c      ****             if (food_states[i][j] == 0) {
 4045              		.loc 1 886 0
 4046 0016 1149     		ldr	r1, .L206
 4047 0018 BA68     		ldr	r2, [r7, #8]
 4048 001a 1346     		mov	r3, r2
 4049 001c DB00     		lsls	r3, r3, #3
 4050 001e 1344     		add	r3, r3, r2
 4051 0020 5B00     		lsls	r3, r3, #1
 4052 0022 1344     		add	r3, r3, r2
 4053 0024 7A68     		ldr	r2, [r7, #4]
 4054 0026 1344     		add	r3, r3, r2
 4055 0028 0B44     		add	r3, r3, r1
 4056 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4057 002c 002B     		cmp	r3, #0
 4058 002e 02D1     		bne	.L202
 887:.\main.c      ****                 ++counter;
 4059              		.loc 1 887 0
 4060 0030 FB68     		ldr	r3, [r7, #12]
 4061 0032 0133     		adds	r3, r3, #1
 4062 0034 FB60     		str	r3, [r7, #12]
 4063              	.L202:
 885:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 4064              		.loc 1 885 0 discriminator 2
 4065 0036 7B68     		ldr	r3, [r7, #4]
 4066 0038 0133     		adds	r3, r3, #1
 4067 003a 7B60     		str	r3, [r7, #4]
 4068              	.L201:
 885:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 4069              		.loc 1 885 0 is_stmt 0 discriminator 1
 4070 003c 7B68     		ldr	r3, [r7, #4]
 4071 003e 122B     		cmp	r3, #18
 4072 0040 E9DD     		ble	.L203
 4073              	.LBE24:
 884:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 4074              		.loc 1 884 0 is_stmt 1 discriminator 2
 4075 0042 BB68     		ldr	r3, [r7, #8]
 4076 0044 0133     		adds	r3, r3, #1
 4077 0046 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 89


 4078              	.L200:
 884:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 4079              		.loc 1 884 0 is_stmt 0 discriminator 1
 4080 0048 BB68     		ldr	r3, [r7, #8]
 4081 004a 0E2B     		cmp	r3, #14
 4082 004c E0DD     		ble	.L204
 4083              	.LBE23:
 888:.\main.c      ****             }
 889:.\main.c      ****         }
 890:.\main.c      ****     }
 891:.\main.c      ****     
 892:.\main.c      ****     return counter;
 4084              		.loc 1 892 0 is_stmt 1
 4085 004e FB68     		ldr	r3, [r7, #12]
 893:.\main.c      **** }
 4086              		.loc 1 893 0
 4087 0050 1846     		mov	r0, r3
 4088 0052 1437     		adds	r7, r7, #20
 4089              		.cfi_def_cfa_offset 4
 4090 0054 BD46     		mov	sp, r7
 4091              		.cfi_def_cfa_register 13
 4092              		@ sp needed
 4093 0056 5DF8047B 		ldr	r7, [sp], #4
 4094              		.cfi_restore 7
 4095              		.cfi_def_cfa_offset 0
 4096 005a 7047     		bx	lr
 4097              	.L207:
 4098              		.align	2
 4099              	.L206:
 4100 005c 00000000 		.word	food_states
 4101              		.cfi_endproc
 4102              	.LFE79:
 4103              		.size	foodLeft, .-foodLeft
 4104              		.section	.text.nextNodeDirection,"ax",%progbits
 4105              		.align	2
 4106              		.global	nextNodeDirection
 4107              		.thumb
 4108              		.thumb_func
 4109              		.type	nextNodeDirection, %function
 4110              	nextNodeDirection:
 4111              	.LFB80:
 894:.\main.c      **** 
 895:.\main.c      **** /************************* Find the direction of the next node. *************************/
 896:.\main.c      **** int nextNodeDirection(int i) {
 4112              		.loc 1 896 0
 4113              		.cfi_startproc
 4114              		@ args = 0, pretend = 0, frame = 8
 4115              		@ frame_needed = 1, uses_anonymous_args = 0
 4116              		@ link register save eliminated.
 4117 0000 80B4     		push	{r7}
 4118              		.cfi_def_cfa_offset 4
 4119              		.cfi_offset 7, -4
 4120 0002 83B0     		sub	sp, sp, #12
 4121              		.cfi_def_cfa_offset 16
 4122 0004 00AF     		add	r7, sp, #0
 4123              		.cfi_def_cfa_register 7
 4124 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 90


 897:.\main.c      ****     if (FinalArray[i+1].col - FinalArray[i].col == 1) {
 4125              		.loc 1 897 0
 4126 0008 7B68     		ldr	r3, [r7, #4]
 4127 000a 0133     		adds	r3, r3, #1
 4128 000c 224A     		ldr	r2, .L214
 4129 000e 5B00     		lsls	r3, r3, #1
 4130 0010 1344     		add	r3, r3, r2
 4131 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4132 0014 1946     		mov	r1, r3
 4133 0016 204A     		ldr	r2, .L214
 4134 0018 7B68     		ldr	r3, [r7, #4]
 4135 001a 5B00     		lsls	r3, r3, #1
 4136 001c 1344     		add	r3, r3, r2
 4137 001e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4138 0020 CB1A     		subs	r3, r1, r3
 4139 0022 012B     		cmp	r3, #1
 4140 0024 01D1     		bne	.L209
 898:.\main.c      ****         return RIGHT;
 4141              		.loc 1 898 0
 4142 0026 0123     		movs	r3, #1
 4143 0028 2FE0     		b	.L210
 4144              	.L209:
 899:.\main.c      ****     }
 900:.\main.c      ****     else if (FinalArray[i].col - FinalArray[i+1].col == 1) {
 4145              		.loc 1 900 0
 4146 002a 1B4A     		ldr	r2, .L214
 4147 002c 7B68     		ldr	r3, [r7, #4]
 4148 002e 5B00     		lsls	r3, r3, #1
 4149 0030 1344     		add	r3, r3, r2
 4150 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4151 0034 1946     		mov	r1, r3
 4152 0036 7B68     		ldr	r3, [r7, #4]
 4153 0038 0133     		adds	r3, r3, #1
 4154 003a 174A     		ldr	r2, .L214
 4155 003c 5B00     		lsls	r3, r3, #1
 4156 003e 1344     		add	r3, r3, r2
 4157 0040 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4158 0042 CB1A     		subs	r3, r1, r3
 4159 0044 012B     		cmp	r3, #1
 4160 0046 01D1     		bne	.L211
 901:.\main.c      ****         return LEFT;
 4161              		.loc 1 901 0
 4162 0048 0223     		movs	r3, #2
 4163 004a 1EE0     		b	.L210
 4164              	.L211:
 902:.\main.c      ****     }
 903:.\main.c      ****     else if (FinalArray[i].row - FinalArray[i+1].row == 1) {
 4165              		.loc 1 903 0
 4166 004c 124A     		ldr	r2, .L214
 4167 004e 7B68     		ldr	r3, [r7, #4]
 4168 0050 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 4169 0054 1946     		mov	r1, r3
 4170 0056 7B68     		ldr	r3, [r7, #4]
 4171 0058 0133     		adds	r3, r3, #1
 4172 005a 0F4A     		ldr	r2, .L214
 4173 005c 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 4174 0060 CB1A     		subs	r3, r1, r3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 91


 4175 0062 012B     		cmp	r3, #1
 4176 0064 01D1     		bne	.L212
 904:.\main.c      ****         return UP;
 4177              		.loc 1 904 0
 4178 0066 0323     		movs	r3, #3
 4179 0068 0FE0     		b	.L210
 4180              	.L212:
 905:.\main.c      ****     }
 906:.\main.c      ****     else if (FinalArray[i+1].row - FinalArray[i].row == 1) {
 4181              		.loc 1 906 0
 4182 006a 7B68     		ldr	r3, [r7, #4]
 4183 006c 0133     		adds	r3, r3, #1
 4184 006e 0A4A     		ldr	r2, .L214
 4185 0070 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 4186 0074 1946     		mov	r1, r3
 4187 0076 084A     		ldr	r2, .L214
 4188 0078 7B68     		ldr	r3, [r7, #4]
 4189 007a 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 4190 007e CB1A     		subs	r3, r1, r3
 4191 0080 012B     		cmp	r3, #1
 4192 0082 01D1     		bne	.L213
 907:.\main.c      ****         return DOWN;
 4193              		.loc 1 907 0
 4194 0084 0423     		movs	r3, #4
 4195 0086 00E0     		b	.L210
 4196              	.L213:
 908:.\main.c      ****     }
 909:.\main.c      ****     return 0;
 4197              		.loc 1 909 0
 4198 0088 0023     		movs	r3, #0
 4199              	.L210:
 910:.\main.c      **** }
 4200              		.loc 1 910 0
 4201 008a 1846     		mov	r0, r3
 4202 008c 0C37     		adds	r7, r7, #12
 4203              		.cfi_def_cfa_offset 4
 4204 008e BD46     		mov	sp, r7
 4205              		.cfi_def_cfa_register 13
 4206              		@ sp needed
 4207 0090 5DF8047B 		ldr	r7, [sp], #4
 4208              		.cfi_restore 7
 4209              		.cfi_def_cfa_offset 0
 4210 0094 7047     		bx	lr
 4211              	.L215:
 4212 0096 00BF     		.align	2
 4213              	.L214:
 4214 0098 00000000 		.word	FinalArray
 4215              		.cfi_endproc
 4216              	.LFE80:
 4217              		.size	nextNodeDirection, .-nextNodeDirection
 4218              		.section	.text.turn,"ax",%progbits
 4219              		.align	2
 4220              		.global	turn
 4221              		.thumb
 4222              		.thumb_func
 4223              		.type	turn, %function
 4224              	turn:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 92


 4225              	.LFB81:
 911:.\main.c      **** 
 912:.\main.c      **** /************************* FINAL MAZE NAVIGATION FUNCTIONS *************************/
 913:.\main.c      **** void turn(int direction) {
 4226              		.loc 1 913 0
 4227              		.cfi_startproc
 4228              		@ args = 0, pretend = 0, frame = 16
 4229              		@ frame_needed = 1, uses_anonymous_args = 0
 4230 0000 80B5     		push	{r7, lr}
 4231              		.cfi_def_cfa_offset 8
 4232              		.cfi_offset 7, -8
 4233              		.cfi_offset 14, -4
 4234 0002 84B0     		sub	sp, sp, #16
 4235              		.cfi_def_cfa_offset 24
 4236 0004 00AF     		add	r7, sp, #0
 4237              		.cfi_def_cfa_register 7
 4238 0006 7860     		str	r0, [r7, #4]
 914:.\main.c      ****     
 915:.\main.c      ****     COAST_ON;
 4239              		.loc 1 915 0
 4240 0008 0320     		movs	r0, #3
 4241 000a FFF7FEFF 		bl	CONTROL_Write
 916:.\main.c      ****     CyDelay(250);
 4242              		.loc 1 916 0
 4243 000e FA20     		movs	r0, #250
 4244 0010 FFF7FEFF 		bl	CyDelay
 917:.\main.c      ****     COAST_OFF;
 4245              		.loc 1 917 0
 4246 0014 0020     		movs	r0, #0
 4247 0016 FFF7FEFF 		bl	CONTROL_Write
 918:.\main.c      ****     
 919:.\main.c      ****     // If there was a path in front of the robot, ignore it.
 920:.\main.c      ****     // The front sensor has to be in the light before it detect dark again
 921:.\main.c      ****     if (TOP_MIDDLE == 0 || TOP_LEFT == 0 || TOP_RIGHT == 0) {
 4248              		.loc 1 921 0
 4249 001a 554B     		ldr	r3, .L231
 4250 001c 1B68     		ldr	r3, [r3]
 4251 001e 002B     		cmp	r3, #0
 4252 0020 07D0     		beq	.L217
 4253              		.loc 1 921 0 is_stmt 0 discriminator 1
 4254 0022 544B     		ldr	r3, .L231+4
 4255 0024 1B68     		ldr	r3, [r3]
 4256 0026 002B     		cmp	r3, #0
 4257 0028 03D0     		beq	.L217
 4258              		.loc 1 921 0 discriminator 2
 4259 002a 534B     		ldr	r3, .L231+8
 4260 002c 1B68     		ldr	r3, [r3]
 4261 002e 002B     		cmp	r3, #0
 4262 0030 03D1     		bne	.L218
 4263              	.L217:
 922:.\main.c      ****         free_to_detect_front = 0;
 4264              		.loc 1 922 0 is_stmt 1
 4265 0032 524B     		ldr	r3, .L231+12
 4266 0034 0022     		movs	r2, #0
 4267 0036 1A60     		str	r2, [r3]
 4268 0038 02E0     		b	.L219
 4269              	.L218:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 93


 923:.\main.c      ****     }
 924:.\main.c      ****     else {
 925:.\main.c      ****         free_to_detect_front = 1;
 4270              		.loc 1 925 0
 4271 003a 504B     		ldr	r3, .L231+12
 4272 003c 0122     		movs	r2, #1
 4273 003e 1A60     		str	r2, [r3]
 4274              	.L219:
 926:.\main.c      ****     }
 927:.\main.c      ****     
 928:.\main.c      ****     // If we want to turn left or right...
 929:.\main.c      ****     if (direction == LEFT || direction == RIGHT) {
 4275              		.loc 1 929 0
 4276 0040 7B68     		ldr	r3, [r7, #4]
 4277 0042 022B     		cmp	r3, #2
 4278 0044 02D0     		beq	.L220
 4279              		.loc 1 929 0 is_stmt 0 discriminator 1
 4280 0046 7B68     		ldr	r3, [r7, #4]
 4281 0048 012B     		cmp	r3, #1
 4282 004a 3AD1     		bne	.L221
 4283              	.L220:
 930:.\main.c      ****         //turn and hold its position
 931:.\main.c      ****         PWM_1_WriteCompare(80);
 4284              		.loc 1 931 0 is_stmt 1
 4285 004c 5020     		movs	r0, #80
 4286 004e FFF7FEFF 		bl	PWM_1_WriteCompare
 932:.\main.c      ****         PWM_2_WriteCompare(80);
 4287              		.loc 1 932 0
 4288 0052 5020     		movs	r0, #80
 4289 0054 FFF7FEFF 		bl	PWM_2_WriteCompare
 933:.\main.c      ****         Direction_Control_1_Write(direction);
 4290              		.loc 1 933 0
 4291 0058 7B68     		ldr	r3, [r7, #4]
 4292 005a DBB2     		uxtb	r3, r3
 4293 005c 1846     		mov	r0, r3
 4294 005e FFF7FEFF 		bl	Direction_Control_1_Write
 934:.\main.c      ****         Direction_Control_2_Write(direction);
 4295              		.loc 1 934 0
 4296 0062 7B68     		ldr	r3, [r7, #4]
 4297 0064 DBB2     		uxtb	r3, r3
 4298 0066 1846     		mov	r0, r3
 4299 0068 FFF7FEFF 		bl	Direction_Control_2_Write
 935:.\main.c      ****         
 936:.\main.c      ****         while (front_detected != 1) {
 4300              		.loc 1 936 0
 4301 006c 1EE0     		b	.L222
 4302              	.L224:
 937:.\main.c      ****         
 938:.\main.c      ****             if (TOP_MIDDLE == 1 && TOP_LEFT == 1 && TOP_RIGHT == 1) {
 4303              		.loc 1 938 0
 4304 006e 404B     		ldr	r3, .L231
 4305 0070 1B68     		ldr	r3, [r3]
 4306 0072 012B     		cmp	r3, #1
 4307 0074 0AD1     		bne	.L223
 4308              		.loc 1 938 0 is_stmt 0 discriminator 1
 4309 0076 3F4B     		ldr	r3, .L231+4
 4310 0078 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 94


 4311 007a 012B     		cmp	r3, #1
 4312 007c 06D1     		bne	.L223
 4313              		.loc 1 938 0 discriminator 2
 4314 007e 3E4B     		ldr	r3, .L231+8
 4315 0080 1B68     		ldr	r3, [r3]
 4316 0082 012B     		cmp	r3, #1
 4317 0084 02D1     		bne	.L223
 939:.\main.c      ****                 free_to_detect_front = 1;
 4318              		.loc 1 939 0 is_stmt 1
 4319 0086 3D4B     		ldr	r3, .L231+12
 4320 0088 0122     		movs	r2, #1
 4321 008a 1A60     		str	r2, [r3]
 4322              	.L223:
 940:.\main.c      ****             }
 941:.\main.c      ****             
 942:.\main.c      ****             if (TOP_MIDDLE == 0 && free_to_detect_front == 1) {
 4323              		.loc 1 942 0
 4324 008c 384B     		ldr	r3, .L231
 4325 008e 1B68     		ldr	r3, [r3]
 4326 0090 002B     		cmp	r3, #0
 4327 0092 0BD1     		bne	.L222
 4328              		.loc 1 942 0 is_stmt 0 discriminator 1
 4329 0094 394B     		ldr	r3, .L231+12
 4330 0096 1B68     		ldr	r3, [r3]
 4331 0098 012B     		cmp	r3, #1
 4332 009a 07D1     		bne	.L222
 943:.\main.c      ****                 free_to_detect_front = 0;
 4333              		.loc 1 943 0 is_stmt 1
 4334 009c 374B     		ldr	r3, .L231+12
 4335 009e 0022     		movs	r2, #0
 4336 00a0 1A60     		str	r2, [r3]
 944:.\main.c      ****                 ++front_detected;
 4337              		.loc 1 944 0
 4338 00a2 374B     		ldr	r3, .L231+16
 4339 00a4 1B68     		ldr	r3, [r3]
 4340 00a6 0133     		adds	r3, r3, #1
 4341 00a8 354A     		ldr	r2, .L231+16
 4342 00aa 1360     		str	r3, [r2]
 4343              	.L222:
 936:.\main.c      ****         
 4344              		.loc 1 936 0
 4345 00ac 344B     		ldr	r3, .L231+16
 4346 00ae 1B68     		ldr	r3, [r3]
 4347 00b0 012B     		cmp	r3, #1
 4348 00b2 DCD1     		bne	.L224
 945:.\main.c      ****             }
 946:.\main.c      ****         }
 947:.\main.c      ****         front_detected = 0;
 4349              		.loc 1 947 0
 4350 00b4 324B     		ldr	r3, .L231+16
 4351 00b6 0022     		movs	r2, #0
 4352 00b8 1A60     		str	r2, [r3]
 948:.\main.c      ****         free_to_detect_front = 1;
 4353              		.loc 1 948 0
 4354 00ba 304B     		ldr	r3, .L231+12
 4355 00bc 0122     		movs	r2, #1
 4356 00be 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 95


 4357 00c0 3EE0     		b	.L225
 4358              	.L221:
 949:.\main.c      ****     }
 950:.\main.c      ****     
 951:.\main.c      ****     // If we want to reverse...
 952:.\main.c      ****     else if (direction == 180) {
 4359              		.loc 1 952 0
 4360 00c2 7B68     		ldr	r3, [r7, #4]
 4361 00c4 B42B     		cmp	r3, #180
 4362 00c6 3BD1     		bne	.L225
 4363              	.LBB25:
 953:.\main.c      ****         PWM_1_WriteCompare(80);
 4364              		.loc 1 953 0
 4365 00c8 5020     		movs	r0, #80
 4366 00ca FFF7FEFF 		bl	PWM_1_WriteCompare
 954:.\main.c      ****         PWM_2_WriteCompare(80);
 4367              		.loc 1 954 0
 4368 00ce 5020     		movs	r0, #80
 4369 00d0 FFF7FEFF 		bl	PWM_2_WriteCompare
 955:.\main.c      ****         Direction_Control_1_Write(1);
 4370              		.loc 1 955 0
 4371 00d4 0120     		movs	r0, #1
 4372 00d6 FFF7FEFF 		bl	Direction_Control_1_Write
 956:.\main.c      ****         Direction_Control_2_Write(1);
 4373              		.loc 1 956 0
 4374 00da 0120     		movs	r0, #1
 4375 00dc FFF7FEFF 		bl	Direction_Control_2_Write
 957:.\main.c      ****         
 958:.\main.c      ****         // Find how many neighbours we have.
 959:.\main.c      ****        // PathNodeList reversing = listNeighbours(currentRFpos);
 960:.\main.c      ****         int angle = 180+(currentRForient);
 4376              		.loc 1 960 0
 4377 00e0 284B     		ldr	r3, .L231+20
 4378 00e2 1B68     		ldr	r3, [r3]
 4379 00e4 B433     		adds	r3, r3, #180
 4380 00e6 FB60     		str	r3, [r7, #12]
 961:.\main.c      ****         angle += 40;
 4381              		.loc 1 961 0
 4382 00e8 FB68     		ldr	r3, [r7, #12]
 4383 00ea 2833     		adds	r3, r3, #40
 4384 00ec FB60     		str	r3, [r7, #12]
 962:.\main.c      ****         
 963:.\main.c      ****         if(angle>360) angle -=360; 
 4385              		.loc 1 963 0
 4386 00ee FB68     		ldr	r3, [r7, #12]
 4387 00f0 B3F5B47F 		cmp	r3, #360
 4388 00f4 03DD     		ble	.L226
 4389              		.loc 1 963 0 is_stmt 0 discriminator 1
 4390 00f6 FB68     		ldr	r3, [r7, #12]
 4391 00f8 A3F5B473 		sub	r3, r3, #360
 4392 00fc FB60     		str	r3, [r7, #12]
 4393              	.L226:
 964:.\main.c      ****         while((currentRForient) > angle){
 4394              		.loc 1 964 0 is_stmt 1
 4395 00fe 02E0     		b	.L227
 4396              	.L228:
 965:.\main.c      ****             LED_ON;
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 96


 4397              		.loc 1 965 0
 4398 0100 0120     		movs	r0, #1
 4399 0102 FFF7FEFF 		bl	LED_Write
 4400              	.L227:
 964:.\main.c      ****         while((currentRForient) > angle){
 4401              		.loc 1 964 0
 4402 0106 1F4B     		ldr	r3, .L231+20
 4403 0108 1A68     		ldr	r2, [r3]
 4404 010a FB68     		ldr	r3, [r7, #12]
 4405 010c 9A42     		cmp	r2, r3
 4406 010e F7DC     		bgt	.L228
 966:.\main.c      ****         }
 967:.\main.c      ****         LED_OFF;
 4407              		.loc 1 967 0
 4408 0110 0020     		movs	r0, #0
 4409 0112 FFF7FEFF 		bl	LED_Write
 968:.\main.c      ****         while (!almost_180) {
 4410              		.loc 1 968 0
 4411 0116 06E0     		b	.L229
 4412              	.L230:
 969:.\main.c      ****             if (TOP_MIDDLE == 0) {
 4413              		.loc 1 969 0
 4414 0118 154B     		ldr	r3, .L231
 4415 011a 1B68     		ldr	r3, [r3]
 4416 011c 002B     		cmp	r3, #0
 4417 011e 02D1     		bne	.L229
 970:.\main.c      ****                 almost_180=1;
 4418              		.loc 1 970 0
 4419 0120 194B     		ldr	r3, .L231+24
 4420 0122 0122     		movs	r2, #1
 4421 0124 1A60     		str	r2, [r3]
 4422              	.L229:
 968:.\main.c      ****         while (!almost_180) {
 4423              		.loc 1 968 0
 4424 0126 184B     		ldr	r3, .L231+24
 4425 0128 1B68     		ldr	r3, [r3]
 4426 012a 002B     		cmp	r3, #0
 4427 012c F4D0     		beq	.L230
 971:.\main.c      ****             }
 972:.\main.c      ****         }
 973:.\main.c      ****         almost_180 = 0;
 4428              		.loc 1 973 0
 4429 012e 164B     		ldr	r3, .L231+24
 4430 0130 0022     		movs	r2, #0
 4431 0132 1A60     		str	r2, [r3]
 974:.\main.c      ****         front_detected = 0;
 4432              		.loc 1 974 0
 4433 0134 124B     		ldr	r3, .L231+16
 4434 0136 0022     		movs	r2, #0
 4435 0138 1A60     		str	r2, [r3]
 975:.\main.c      ****         free_to_detect_front = 1;
 4436              		.loc 1 975 0
 4437 013a 104B     		ldr	r3, .L231+12
 4438 013c 0122     		movs	r2, #1
 4439 013e 1A60     		str	r2, [r3]
 4440              	.L225:
 4441              	.LBE25:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 97


 976:.\main.c      ****     }
 977:.\main.c      ****   
 978:.\main.c      ****     //Go straight
 979:.\main.c      ****     Straight();
 4442              		.loc 1 979 0
 4443 0140 FFF7FEFF 		bl	Straight
 980:.\main.c      ****     Direction_Control_1_Write(1);
 4444              		.loc 1 980 0
 4445 0144 0120     		movs	r0, #1
 4446 0146 FFF7FEFF 		bl	Direction_Control_1_Write
 981:.\main.c      ****     Direction_Control_2_Write(2);
 4447              		.loc 1 981 0
 4448 014a 0220     		movs	r0, #2
 4449 014c FFF7FEFF 		bl	Direction_Control_2_Write
 982:.\main.c      ****     turnDone = 1;
 4450              		.loc 1 982 0
 4451 0150 0E4B     		ldr	r3, .L231+28
 4452 0152 0122     		movs	r2, #1
 4453 0154 1A60     		str	r2, [r3]
 983:.\main.c      ****     turnDone_180 = 1;
 4454              		.loc 1 983 0
 4455 0156 0E4B     		ldr	r3, .L231+32
 4456 0158 0122     		movs	r2, #1
 4457 015a 1A60     		str	r2, [r3]
 984:.\main.c      ****     LED_1_OFF;
 4458              		.loc 1 984 0
 4459 015c 0020     		movs	r0, #0
 4460 015e FFF7FEFF 		bl	LED_1_Write
 985:.\main.c      ****     LED_2_OFF;
 4461              		.loc 1 985 0
 4462 0162 0020     		movs	r0, #0
 4463 0164 FFF7FEFF 		bl	LED_2_Write
 986:.\main.c      **** }
 4464              		.loc 1 986 0
 4465 0168 1037     		adds	r7, r7, #16
 4466              		.cfi_def_cfa_offset 8
 4467 016a BD46     		mov	sp, r7
 4468              		.cfi_def_cfa_register 13
 4469              		@ sp needed
 4470 016c 80BD     		pop	{r7, pc}
 4471              	.L232:
 4472 016e 00BF     		.align	2
 4473              	.L231:
 4474 0170 00000000 		.word	ADC_2
 4475 0174 00000000 		.word	ADC_0
 4476 0178 00000000 		.word	ADC_4
 4477 017c 00000000 		.word	free_to_detect_front
 4478 0180 00000000 		.word	front_detected
 4479 0184 00000000 		.word	currentRForient
 4480 0188 00000000 		.word	almost_180
 4481 018c 00000000 		.word	turnDone
 4482 0190 00000000 		.word	turnDone_180
 4483              		.cfi_endproc
 4484              	.LFE81:
 4485              		.size	turn, .-turn
 4486              		.global	__aeabi_ddiv
 4487              		.global	__aeabi_dmul
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 98


 4488              		.section	.text.RFround,"ax",%progbits
 4489              		.align	2
 4490              		.global	RFround
 4491              		.thumb
 4492              		.thumb_func
 4493              		.type	RFround, %function
 4494              	RFround:
 4495              	.LFB82:
 987:.\main.c      **** 
 988:.\main.c      **** /************************* BUILT-IN ROUNDING BECAUSE C'S DOESN'T WORK! WE ALSO CONVERT IT TO APPROP
 989:.\main.c      **** int RFround(int16 RFvalue) {
 4496              		.loc 1 989 0
 4497              		.cfi_startproc
 4498              		@ args = 0, pretend = 0, frame = 32
 4499              		@ frame_needed = 1, uses_anonymous_args = 0
 4500 0000 80B5     		push	{r7, lr}
 4501              		.cfi_def_cfa_offset 8
 4502              		.cfi_offset 7, -8
 4503              		.cfi_offset 14, -4
 4504 0002 88B0     		sub	sp, sp, #32
 4505              		.cfi_def_cfa_offset 40
 4506 0004 00AF     		add	r7, sp, #0
 4507              		.cfi_def_cfa_register 7
 4508 0006 0346     		mov	r3, r0
 4509 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 990:.\main.c      ****     
 991:.\main.c      ****     // Take the coordinate, divide it by the divider.
 992:.\main.c      ****     double rf_d = (double)(RFvalue) / 55.0;             // It's 55, because distance between cells 
 4510              		.loc 1 992 0
 4511 000a B7F90630 		ldrsh	r3, [r7, #6]
 4512 000e 1846     		mov	r0, r3
 4513 0010 FFF7FEFF 		bl	__aeabi_i2d
 4514 0014 0246     		mov	r2, r0
 4515 0016 0B46     		mov	r3, r1
 4516 0018 1046     		mov	r0, r2
 4517 001a 1946     		mov	r1, r3
 4518 001c 4FF00002 		mov	r2, #0
 4519 0020 1E4B     		ldr	r3, .L237
 4520 0022 FFF7FEFF 		bl	__aeabi_ddiv
 4521 0026 0246     		mov	r2, r0
 4522 0028 0B46     		mov	r3, r1
 4523 002a C7E90423 		strd	r2, [r7, #16]
 993:.\main.c      ****     
 994:.\main.c      ****     // Multiply the double by 10 to get an integer.
 995:.\main.c      ****     int rf_i = (int)(rf_d * 10);
 4524              		.loc 1 995 0
 4525 002e D7E90401 		ldrd	r0, [r7, #16]
 4526 0032 4FF00002 		mov	r2, #0
 4527 0036 1A4B     		ldr	r3, .L237+4
 4528 0038 FFF7FEFF 		bl	__aeabi_dmul
 4529 003c 0246     		mov	r2, r0
 4530 003e 0B46     		mov	r3, r1
 4531 0040 1046     		mov	r0, r2
 4532 0042 1946     		mov	r1, r3
 4533 0044 FFF7FEFF 		bl	__aeabi_d2iz
 4534 0048 0346     		mov	r3, r0
 4535 004a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 99


 996:.\main.c      ****     
 997:.\main.c      ****     // Find the remainder.
 998:.\main.c      ****     int mod = rf_i % 10;
 4536              		.loc 1 998 0
 4537 004c FA68     		ldr	r2, [r7, #12]
 4538 004e 154B     		ldr	r3, .L237+8
 4539 0050 83FB0213 		smull	r1, r3, r3, r2
 4540 0054 9910     		asrs	r1, r3, #2
 4541 0056 D317     		asrs	r3, r2, #31
 4542 0058 C91A     		subs	r1, r1, r3
 4543 005a 0B46     		mov	r3, r1
 4544 005c 9B00     		lsls	r3, r3, #2
 4545 005e 0B44     		add	r3, r3, r1
 4546 0060 5B00     		lsls	r3, r3, #1
 4547 0062 D31A     		subs	r3, r2, r3
 4548 0064 BB60     		str	r3, [r7, #8]
 999:.\main.c      ****     
1000:.\main.c      ****     // If remainder <= 4, truncate, else round up.
1001:.\main.c      ****     int rf;
1002:.\main.c      ****     if (mod <= 4) {
 4549              		.loc 1 1002 0
 4550 0066 BB68     		ldr	r3, [r7, #8]
 4551 0068 042B     		cmp	r3, #4
 4552 006a 08DC     		bgt	.L234
1003:.\main.c      ****         rf = rf_i / 10;
 4553              		.loc 1 1003 0
 4554 006c FB68     		ldr	r3, [r7, #12]
 4555 006e 0D4A     		ldr	r2, .L237+8
 4556 0070 82FB0312 		smull	r1, r2, r2, r3
 4557 0074 9210     		asrs	r2, r2, #2
 4558 0076 DB17     		asrs	r3, r3, #31
 4559 0078 D31A     		subs	r3, r2, r3
 4560 007a FB61     		str	r3, [r7, #28]
 4561 007c 08E0     		b	.L235
 4562              	.L234:
1004:.\main.c      ****     }
1005:.\main.c      ****     else {
1006:.\main.c      ****         rf = (rf_i / 10) + 1;
 4563              		.loc 1 1006 0
 4564 007e FB68     		ldr	r3, [r7, #12]
 4565 0080 084A     		ldr	r2, .L237+8
 4566 0082 82FB0312 		smull	r1, r2, r2, r3
 4567 0086 9210     		asrs	r2, r2, #2
 4568 0088 DB17     		asrs	r3, r3, #31
 4569 008a D31A     		subs	r3, r2, r3
 4570 008c 0133     		adds	r3, r3, #1
 4571 008e FB61     		str	r3, [r7, #28]
 4572              	.L235:
1007:.\main.c      ****     }
1008:.\main.c      ****     
1009:.\main.c      ****     return rf;
 4573              		.loc 1 1009 0
 4574 0090 FB69     		ldr	r3, [r7, #28]
1010:.\main.c      **** }
 4575              		.loc 1 1010 0
 4576 0092 1846     		mov	r0, r3
 4577 0094 2037     		adds	r7, r7, #32
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 100


 4578              		.cfi_def_cfa_offset 8
 4579 0096 BD46     		mov	sp, r7
 4580              		.cfi_def_cfa_register 13
 4581              		@ sp needed
 4582 0098 80BD     		pop	{r7, pc}
 4583              	.L238:
 4584 009a 00BF     		.align	2
 4585              	.L237:
 4586 009c 00804B40 		.word	1078689792
 4587 00a0 00002440 		.word	1076101120
 4588 00a4 67666666 		.word	1717986919
 4589              		.cfi_endproc
 4590              	.LFE82:
 4591              		.size	RFround, .-RFround
 4592              		.section	.text.Straight,"ax",%progbits
 4593              		.align	2
 4594              		.global	Straight
 4595              		.thumb
 4596              		.thumb_func
 4597              		.type	Straight, %function
 4598              	Straight:
 4599              	.LFB83:
1011:.\main.c      **** 
1012:.\main.c      **** void Straight() {
 4600              		.loc 1 1012 0
 4601              		.cfi_startproc
 4602              		@ args = 0, pretend = 0, frame = 0
 4603              		@ frame_needed = 1, uses_anonymous_args = 0
 4604 0000 80B5     		push	{r7, lr}
 4605              		.cfi_def_cfa_offset 8
 4606              		.cfi_offset 7, -8
 4607              		.cfi_offset 14, -4
 4608 0002 00AF     		add	r7, sp, #0
 4609              		.cfi_def_cfa_register 7
1013:.\main.c      ****     if (TOP_RIGHT == 0) {
 4610              		.loc 1 1013 0
 4611 0004 0E4B     		ldr	r3, .L243
 4612 0006 1B68     		ldr	r3, [r3]
 4613 0008 002B     		cmp	r3, #0
 4614 000a 06D1     		bne	.L240
1014:.\main.c      ****         PWM_1_WriteCompare(80);
 4615              		.loc 1 1014 0
 4616 000c 5020     		movs	r0, #80
 4617 000e FFF7FEFF 		bl	PWM_1_WriteCompare
1015:.\main.c      ****         PWM_2_WriteCompare(55);
 4618              		.loc 1 1015 0
 4619 0012 3720     		movs	r0, #55
 4620 0014 FFF7FEFF 		bl	PWM_2_WriteCompare
 4621 0018 10E0     		b	.L239
 4622              	.L240:
1016:.\main.c      ****     }
1017:.\main.c      ****     
1018:.\main.c      ****     // Towards left correction
1019:.\main.c      ****     else if (TOP_LEFT == 0) {
 4623              		.loc 1 1019 0
 4624 001a 0A4B     		ldr	r3, .L243+4
 4625 001c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 101


 4626 001e 002B     		cmp	r3, #0
 4627 0020 06D1     		bne	.L242
1020:.\main.c      ****         PWM_1_WriteCompare(55);
 4628              		.loc 1 1020 0
 4629 0022 3720     		movs	r0, #55
 4630 0024 FFF7FEFF 		bl	PWM_1_WriteCompare
1021:.\main.c      ****         PWM_2_WriteCompare(80);
 4631              		.loc 1 1021 0
 4632 0028 5020     		movs	r0, #80
 4633 002a FFF7FEFF 		bl	PWM_2_WriteCompare
 4634 002e 05E0     		b	.L239
 4635              	.L242:
1022:.\main.c      ****     }
1023:.\main.c      ****     
1024:.\main.c      ****     else {
1025:.\main.c      ****         PWM_1_WriteCompare(90);
 4636              		.loc 1 1025 0
 4637 0030 5A20     		movs	r0, #90
 4638 0032 FFF7FEFF 		bl	PWM_1_WriteCompare
1026:.\main.c      ****         PWM_2_WriteCompare(90);
 4639              		.loc 1 1026 0
 4640 0036 5A20     		movs	r0, #90
 4641 0038 FFF7FEFF 		bl	PWM_2_WriteCompare
 4642              	.L239:
1027:.\main.c      ****     }
1028:.\main.c      **** }
 4643              		.loc 1 1028 0
 4644 003c 80BD     		pop	{r7, pc}
 4645              	.L244:
 4646 003e 00BF     		.align	2
 4647              	.L243:
 4648 0040 00000000 		.word	ADC_4
 4649 0044 00000000 		.word	ADC_0
 4650              		.cfi_endproc
 4651              	.LFE83:
 4652              		.size	Straight, .-Straight
 4653              		.section	.text.useRF,"ax",%progbits
 4654              		.align	2
 4655              		.global	useRF
 4656              		.thumb
 4657              		.thumb_func
 4658              		.type	useRF, %function
 4659              	useRF:
 4660              	.LFB84:
1029:.\main.c      **** 
1030:.\main.c      **** /************************* Chooses a path to take based on RF. *************************/
1031:.\main.c      **** void useRF() {
 4661              		.loc 1 1031 0
 4662              		.cfi_startproc
 4663              		@ args = 0, pretend = 0, frame = 0
 4664              		@ frame_needed = 1, uses_anonymous_args = 0
 4665 0000 80B5     		push	{r7, lr}
 4666              		.cfi_def_cfa_offset 8
 4667              		.cfi_offset 7, -8
 4668              		.cfi_offset 14, -4
 4669 0002 00AF     		add	r7, sp, #0
 4670              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 102


1032:.\main.c      **** 
1033:.\main.c      ****     // If our next PathNode is to the right...
1034:.\main.c      ****     if (nextNodeDirection(path_index) == RIGHT) {
 4671              		.loc 1 1034 0
 4672 0004 814B     		ldr	r3, .L265
 4673 0006 1B68     		ldr	r3, [r3]
 4674 0008 1846     		mov	r0, r3
 4675 000a FFF7FEFF 		bl	nextNodeDirection
 4676 000e 0346     		mov	r3, r0
 4677 0010 012B     		cmp	r3, #1
 4678 0012 38D1     		bne	.L246
1035:.\main.c      ****         if (orientation == LEFT && turnDone_180 == 0) {
 4679              		.loc 1 1035 0
 4680 0014 7E4B     		ldr	r3, .L265+4
 4681 0016 1B68     		ldr	r3, [r3]
 4682 0018 022B     		cmp	r3, #2
 4683 001a 0AD1     		bne	.L247
 4684              		.loc 1 1035 0 is_stmt 0 discriminator 1
 4685 001c 7D4B     		ldr	r3, .L265+8
 4686 001e 1B68     		ldr	r3, [r3]
 4687 0020 002B     		cmp	r3, #0
 4688 0022 06D1     		bne	.L247
1036:.\main.c      ****             LED_1_ON;
 4689              		.loc 1 1036 0 is_stmt 1
 4690 0024 0120     		movs	r0, #1
 4691 0026 FFF7FEFF 		bl	LED_1_Write
1037:.\main.c      ****             turn(180);
 4692              		.loc 1 1037 0
 4693 002a B420     		movs	r0, #180
 4694 002c FFF7FEFF 		bl	turn
 4695 0030 28E0     		b	.L248
 4696              	.L247:
1038:.\main.c      ****         }
1039:.\main.c      ****         else if (orientation == UP && (BOTTOM_RIGHT == 0) && turnDone == 0) {
 4697              		.loc 1 1039 0
 4698 0032 774B     		ldr	r3, .L265+4
 4699 0034 1B68     		ldr	r3, [r3]
 4700 0036 032B     		cmp	r3, #3
 4701 0038 0ED1     		bne	.L249
 4702              		.loc 1 1039 0 is_stmt 0 discriminator 1
 4703 003a 774B     		ldr	r3, .L265+12
 4704 003c 1B68     		ldr	r3, [r3]
 4705 003e 002B     		cmp	r3, #0
 4706 0040 0AD1     		bne	.L249
 4707              		.loc 1 1039 0 discriminator 2
 4708 0042 764B     		ldr	r3, .L265+16
 4709 0044 1B68     		ldr	r3, [r3]
 4710 0046 002B     		cmp	r3, #0
 4711 0048 06D1     		bne	.L249
1040:.\main.c      ****             LED_2_ON;
 4712              		.loc 1 1040 0 is_stmt 1
 4713 004a 0120     		movs	r0, #1
 4714 004c FFF7FEFF 		bl	LED_2_Write
1041:.\main.c      ****             turn(RIGHT);
 4715              		.loc 1 1041 0
 4716 0050 0120     		movs	r0, #1
 4717 0052 FFF7FEFF 		bl	turn
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 103


 4718 0056 15E0     		b	.L248
 4719              	.L249:
1042:.\main.c      ****         }
1043:.\main.c      ****         else if (orientation == DOWN && (BOTTOM_LEFT == 0) && turnDone == 0) {
 4720              		.loc 1 1043 0
 4721 0058 6D4B     		ldr	r3, .L265+4
 4722 005a 1B68     		ldr	r3, [r3]
 4723 005c 042B     		cmp	r3, #4
 4724 005e 0ED1     		bne	.L250
 4725              		.loc 1 1043 0 is_stmt 0 discriminator 1
 4726 0060 6F4B     		ldr	r3, .L265+20
 4727 0062 1B68     		ldr	r3, [r3]
 4728 0064 002B     		cmp	r3, #0
 4729 0066 0AD1     		bne	.L250
 4730              		.loc 1 1043 0 discriminator 2
 4731 0068 6C4B     		ldr	r3, .L265+16
 4732 006a 1B68     		ldr	r3, [r3]
 4733 006c 002B     		cmp	r3, #0
 4734 006e 06D1     		bne	.L250
1044:.\main.c      ****             LED_2_ON;
 4735              		.loc 1 1044 0 is_stmt 1
 4736 0070 0120     		movs	r0, #1
 4737 0072 FFF7FEFF 		bl	LED_2_Write
1045:.\main.c      ****             turn(LEFT);
 4738              		.loc 1 1045 0
 4739 0076 0220     		movs	r0, #2
 4740 0078 FFF7FEFF 		bl	turn
 4741 007c 02E0     		b	.L248
 4742              	.L250:
1046:.\main.c      ****         }
1047:.\main.c      ****         else {
1048:.\main.c      ****             Straight();
 4743              		.loc 1 1048 0
 4744 007e FFF7FEFF 		bl	Straight
 4745 0082 C1E0     		b	.L245
 4746              	.L248:
 4747 0084 C0E0     		b	.L245
 4748              	.L246:
1049:.\main.c      ****         }
1050:.\main.c      ****     }
1051:.\main.c      ****     
1052:.\main.c      ****     // If our next PathNode is to the left...
1053:.\main.c      ****     else if (nextNodeDirection(path_index) == LEFT) {
 4749              		.loc 1 1053 0
 4750 0086 614B     		ldr	r3, .L265
 4751 0088 1B68     		ldr	r3, [r3]
 4752 008a 1846     		mov	r0, r3
 4753 008c FFF7FEFF 		bl	nextNodeDirection
 4754 0090 0346     		mov	r3, r0
 4755 0092 022B     		cmp	r3, #2
 4756 0094 38D1     		bne	.L252
1054:.\main.c      ****         if (orientation == RIGHT && turnDone_180 == 0) {
 4757              		.loc 1 1054 0
 4758 0096 5E4B     		ldr	r3, .L265+4
 4759 0098 1B68     		ldr	r3, [r3]
 4760 009a 012B     		cmp	r3, #1
 4761 009c 0AD1     		bne	.L253
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 104


 4762              		.loc 1 1054 0 is_stmt 0 discriminator 1
 4763 009e 5D4B     		ldr	r3, .L265+8
 4764 00a0 1B68     		ldr	r3, [r3]
 4765 00a2 002B     		cmp	r3, #0
 4766 00a4 06D1     		bne	.L253
1055:.\main.c      ****             LED_1_ON;
 4767              		.loc 1 1055 0 is_stmt 1
 4768 00a6 0120     		movs	r0, #1
 4769 00a8 FFF7FEFF 		bl	LED_1_Write
1056:.\main.c      ****             turn(180);
 4770              		.loc 1 1056 0
 4771 00ac B420     		movs	r0, #180
 4772 00ae FFF7FEFF 		bl	turn
 4773 00b2 28E0     		b	.L254
 4774              	.L253:
1057:.\main.c      ****         }
1058:.\main.c      ****         else if (orientation == UP && (BOTTOM_LEFT == 0) && turnDone == 0) {
 4775              		.loc 1 1058 0
 4776 00b4 564B     		ldr	r3, .L265+4
 4777 00b6 1B68     		ldr	r3, [r3]
 4778 00b8 032B     		cmp	r3, #3
 4779 00ba 0ED1     		bne	.L255
 4780              		.loc 1 1058 0 is_stmt 0 discriminator 1
 4781 00bc 584B     		ldr	r3, .L265+20
 4782 00be 1B68     		ldr	r3, [r3]
 4783 00c0 002B     		cmp	r3, #0
 4784 00c2 0AD1     		bne	.L255
 4785              		.loc 1 1058 0 discriminator 2
 4786 00c4 554B     		ldr	r3, .L265+16
 4787 00c6 1B68     		ldr	r3, [r3]
 4788 00c8 002B     		cmp	r3, #0
 4789 00ca 06D1     		bne	.L255
1059:.\main.c      ****             LED_2_ON;
 4790              		.loc 1 1059 0 is_stmt 1
 4791 00cc 0120     		movs	r0, #1
 4792 00ce FFF7FEFF 		bl	LED_2_Write
1060:.\main.c      ****             turn(LEFT);
 4793              		.loc 1 1060 0
 4794 00d2 0220     		movs	r0, #2
 4795 00d4 FFF7FEFF 		bl	turn
 4796 00d8 15E0     		b	.L254
 4797              	.L255:
1061:.\main.c      ****         }
1062:.\main.c      ****         else if (orientation == DOWN && (BOTTOM_RIGHT == 0) && turnDone == 0) {
 4798              		.loc 1 1062 0
 4799 00da 4D4B     		ldr	r3, .L265+4
 4800 00dc 1B68     		ldr	r3, [r3]
 4801 00de 042B     		cmp	r3, #4
 4802 00e0 0ED1     		bne	.L256
 4803              		.loc 1 1062 0 is_stmt 0 discriminator 1
 4804 00e2 4D4B     		ldr	r3, .L265+12
 4805 00e4 1B68     		ldr	r3, [r3]
 4806 00e6 002B     		cmp	r3, #0
 4807 00e8 0AD1     		bne	.L256
 4808              		.loc 1 1062 0 discriminator 2
 4809 00ea 4C4B     		ldr	r3, .L265+16
 4810 00ec 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 105


 4811 00ee 002B     		cmp	r3, #0
 4812 00f0 06D1     		bne	.L256
1063:.\main.c      ****             LED_2_ON;
 4813              		.loc 1 1063 0 is_stmt 1
 4814 00f2 0120     		movs	r0, #1
 4815 00f4 FFF7FEFF 		bl	LED_2_Write
1064:.\main.c      ****             turn(RIGHT);
 4816              		.loc 1 1064 0
 4817 00f8 0120     		movs	r0, #1
 4818 00fa FFF7FEFF 		bl	turn
 4819 00fe 02E0     		b	.L254
 4820              	.L256:
1065:.\main.c      ****         }
1066:.\main.c      ****         else {
1067:.\main.c      ****             Straight();
 4821              		.loc 1 1067 0
 4822 0100 FFF7FEFF 		bl	Straight
 4823 0104 80E0     		b	.L245
 4824              	.L254:
 4825 0106 7FE0     		b	.L245
 4826              	.L252:
1068:.\main.c      ****         }
1069:.\main.c      ****     }
1070:.\main.c      ****     
1071:.\main.c      ****     // If our next PathNode is to the top...
1072:.\main.c      ****     else if (nextNodeDirection(path_index) == UP) {
 4827              		.loc 1 1072 0
 4828 0108 404B     		ldr	r3, .L265
 4829 010a 1B68     		ldr	r3, [r3]
 4830 010c 1846     		mov	r0, r3
 4831 010e FFF7FEFF 		bl	nextNodeDirection
 4832 0112 0346     		mov	r3, r0
 4833 0114 032B     		cmp	r3, #3
 4834 0116 38D1     		bne	.L257
1073:.\main.c      ****         if (orientation == LEFT && (BOTTOM_RIGHT == 0) && turnDone == 0) {
 4835              		.loc 1 1073 0
 4836 0118 3D4B     		ldr	r3, .L265+4
 4837 011a 1B68     		ldr	r3, [r3]
 4838 011c 022B     		cmp	r3, #2
 4839 011e 0ED1     		bne	.L258
 4840              		.loc 1 1073 0 is_stmt 0 discriminator 1
 4841 0120 3D4B     		ldr	r3, .L265+12
 4842 0122 1B68     		ldr	r3, [r3]
 4843 0124 002B     		cmp	r3, #0
 4844 0126 0AD1     		bne	.L258
 4845              		.loc 1 1073 0 discriminator 2
 4846 0128 3C4B     		ldr	r3, .L265+16
 4847 012a 1B68     		ldr	r3, [r3]
 4848 012c 002B     		cmp	r3, #0
 4849 012e 06D1     		bne	.L258
1074:.\main.c      ****             LED_2_ON;
 4850              		.loc 1 1074 0 is_stmt 1
 4851 0130 0120     		movs	r0, #1
 4852 0132 FFF7FEFF 		bl	LED_2_Write
1075:.\main.c      ****             turn(RIGHT);
 4853              		.loc 1 1075 0
 4854 0136 0120     		movs	r0, #1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 106


 4855 0138 FFF7FEFF 		bl	turn
 4856 013c 24E0     		b	.L259
 4857              	.L258:
1076:.\main.c      ****         }
1077:.\main.c      ****         else if (orientation == RIGHT && (BOTTOM_LEFT == 0) && turnDone == 0) {
 4858              		.loc 1 1077 0
 4859 013e 344B     		ldr	r3, .L265+4
 4860 0140 1B68     		ldr	r3, [r3]
 4861 0142 012B     		cmp	r3, #1
 4862 0144 0ED1     		bne	.L260
 4863              		.loc 1 1077 0 is_stmt 0 discriminator 1
 4864 0146 364B     		ldr	r3, .L265+20
 4865 0148 1B68     		ldr	r3, [r3]
 4866 014a 002B     		cmp	r3, #0
 4867 014c 0AD1     		bne	.L260
 4868              		.loc 1 1077 0 discriminator 2
 4869 014e 334B     		ldr	r3, .L265+16
 4870 0150 1B68     		ldr	r3, [r3]
 4871 0152 002B     		cmp	r3, #0
 4872 0154 06D1     		bne	.L260
1078:.\main.c      ****             LED_2_ON;
 4873              		.loc 1 1078 0 is_stmt 1
 4874 0156 0120     		movs	r0, #1
 4875 0158 FFF7FEFF 		bl	LED_2_Write
1079:.\main.c      ****             turn(LEFT);
 4876              		.loc 1 1079 0
 4877 015c 0220     		movs	r0, #2
 4878 015e FFF7FEFF 		bl	turn
 4879 0162 11E0     		b	.L259
 4880              	.L260:
1080:.\main.c      ****         }
1081:.\main.c      ****         else if (orientation == DOWN && turnDone_180 == 0) {
 4881              		.loc 1 1081 0
 4882 0164 2A4B     		ldr	r3, .L265+4
 4883 0166 1B68     		ldr	r3, [r3]
 4884 0168 042B     		cmp	r3, #4
 4885 016a 0AD1     		bne	.L261
 4886              		.loc 1 1081 0 is_stmt 0 discriminator 1
 4887 016c 294B     		ldr	r3, .L265+8
 4888 016e 1B68     		ldr	r3, [r3]
 4889 0170 002B     		cmp	r3, #0
 4890 0172 06D1     		bne	.L261
1082:.\main.c      ****             LED_1_ON;
 4891              		.loc 1 1082 0 is_stmt 1
 4892 0174 0120     		movs	r0, #1
 4893 0176 FFF7FEFF 		bl	LED_1_Write
1083:.\main.c      ****             turn(180);
 4894              		.loc 1 1083 0
 4895 017a B420     		movs	r0, #180
 4896 017c FFF7FEFF 		bl	turn
 4897 0180 02E0     		b	.L259
 4898              	.L261:
1084:.\main.c      ****         }
1085:.\main.c      ****         else {
1086:.\main.c      ****             Straight();
 4899              		.loc 1 1086 0
 4900 0182 FFF7FEFF 		bl	Straight
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 107


 4901 0186 3FE0     		b	.L245
 4902              	.L259:
 4903 0188 3EE0     		b	.L245
 4904              	.L257:
1087:.\main.c      ****         }
1088:.\main.c      ****     }
1089:.\main.c      ****     
1090:.\main.c      ****     // If our next PathNode is to the bottom...
1091:.\main.c      ****     else if (nextNodeDirection(path_index) == DOWN) {
 4905              		.loc 1 1091 0
 4906 018a 204B     		ldr	r3, .L265
 4907 018c 1B68     		ldr	r3, [r3]
 4908 018e 1846     		mov	r0, r3
 4909 0190 FFF7FEFF 		bl	nextNodeDirection
 4910 0194 0346     		mov	r3, r0
 4911 0196 042B     		cmp	r3, #4
 4912 0198 36D1     		bne	.L245
1092:.\main.c      ****         if (orientation == LEFT && (BOTTOM_LEFT == 0) && turnDone == 0) {
 4913              		.loc 1 1092 0
 4914 019a 1D4B     		ldr	r3, .L265+4
 4915 019c 1B68     		ldr	r3, [r3]
 4916 019e 022B     		cmp	r3, #2
 4917 01a0 0ED1     		bne	.L262
 4918              		.loc 1 1092 0 is_stmt 0 discriminator 1
 4919 01a2 1F4B     		ldr	r3, .L265+20
 4920 01a4 1B68     		ldr	r3, [r3]
 4921 01a6 002B     		cmp	r3, #0
 4922 01a8 0AD1     		bne	.L262
 4923              		.loc 1 1092 0 discriminator 2
 4924 01aa 1C4B     		ldr	r3, .L265+16
 4925 01ac 1B68     		ldr	r3, [r3]
 4926 01ae 002B     		cmp	r3, #0
 4927 01b0 06D1     		bne	.L262
1093:.\main.c      ****             LED_2_ON;
 4928              		.loc 1 1093 0 is_stmt 1
 4929 01b2 0120     		movs	r0, #1
 4930 01b4 FFF7FEFF 		bl	LED_2_Write
1094:.\main.c      ****             turn(LEFT);
 4931              		.loc 1 1094 0
 4932 01b8 0220     		movs	r0, #2
 4933 01ba FFF7FEFF 		bl	turn
 4934 01be 23E0     		b	.L245
 4935              	.L262:
1095:.\main.c      ****         }
1096:.\main.c      ****         else if (orientation == RIGHT && (BOTTOM_RIGHT == 0) && turnDone == 0) {
 4936              		.loc 1 1096 0
 4937 01c0 134B     		ldr	r3, .L265+4
 4938 01c2 1B68     		ldr	r3, [r3]
 4939 01c4 012B     		cmp	r3, #1
 4940 01c6 0ED1     		bne	.L263
 4941              		.loc 1 1096 0 is_stmt 0 discriminator 1
 4942 01c8 134B     		ldr	r3, .L265+12
 4943 01ca 1B68     		ldr	r3, [r3]
 4944 01cc 002B     		cmp	r3, #0
 4945 01ce 0AD1     		bne	.L263
 4946              		.loc 1 1096 0 discriminator 2
 4947 01d0 124B     		ldr	r3, .L265+16
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 108


 4948 01d2 1B68     		ldr	r3, [r3]
 4949 01d4 002B     		cmp	r3, #0
 4950 01d6 06D1     		bne	.L263
1097:.\main.c      ****             LED_2_ON;
 4951              		.loc 1 1097 0 is_stmt 1
 4952 01d8 0120     		movs	r0, #1
 4953 01da FFF7FEFF 		bl	LED_2_Write
1098:.\main.c      ****             turn(RIGHT);
 4954              		.loc 1 1098 0
 4955 01de 0120     		movs	r0, #1
 4956 01e0 FFF7FEFF 		bl	turn
 4957 01e4 10E0     		b	.L245
 4958              	.L263:
1099:.\main.c      ****         }
1100:.\main.c      ****         else if (orientation == UP && turnDone_180 == 0) {
 4959              		.loc 1 1100 0
 4960 01e6 0A4B     		ldr	r3, .L265+4
 4961 01e8 1B68     		ldr	r3, [r3]
 4962 01ea 032B     		cmp	r3, #3
 4963 01ec 0AD1     		bne	.L264
 4964              		.loc 1 1100 0 is_stmt 0 discriminator 1
 4965 01ee 094B     		ldr	r3, .L265+8
 4966 01f0 1B68     		ldr	r3, [r3]
 4967 01f2 002B     		cmp	r3, #0
 4968 01f4 06D1     		bne	.L264
1101:.\main.c      ****             LED_1_ON;
 4969              		.loc 1 1101 0 is_stmt 1
 4970 01f6 0120     		movs	r0, #1
 4971 01f8 FFF7FEFF 		bl	LED_1_Write
1102:.\main.c      ****             turn(180);
 4972              		.loc 1 1102 0
 4973 01fc B420     		movs	r0, #180
 4974 01fe FFF7FEFF 		bl	turn
 4975 0202 01E0     		b	.L245
 4976              	.L264:
1103:.\main.c      ****         }
1104:.\main.c      ****         else {
1105:.\main.c      ****             Straight();
 4977              		.loc 1 1105 0
 4978 0204 FFF7FEFF 		bl	Straight
 4979              	.L245:
1106:.\main.c      ****         }
1107:.\main.c      ****     }
1108:.\main.c      **** }
 4980              		.loc 1 1108 0
 4981 0208 80BD     		pop	{r7, pc}
 4982              	.L266:
 4983 020a 00BF     		.align	2
 4984              	.L265:
 4985 020c 00000000 		.word	path_index
 4986 0210 00000000 		.word	orientation
 4987 0214 00000000 		.word	turnDone_180
 4988 0218 00000000 		.word	ADC_5
 4989 021c 00000000 		.word	turnDone
 4990 0220 00000000 		.word	ADC_1
 4991              		.cfi_endproc
 4992              	.LFE84:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 109


 4993              		.size	useRF, .-useRF
 4994              		.section	.text.main,"ax",%progbits
 4995              		.align	2
 4996              		.global	main
 4997              		.thumb
 4998              		.thumb_func
 4999              		.type	main, %function
 5000              	main:
 5001              	.LFB85:
1109:.\main.c      **** 
1110:.\main.c      **** 
1111:.\main.c      **** 
1112:.\main.c      **** 
1113:.\main.c      **** 
1114:.\main.c      **** /*
1115:.\main.c      **** ooo        ooooo       .o.       ooooo ooooo      ooo 
1116:.\main.c      **** `88.       .888'      .888.      `888' `888b.     `8' 
1117:.\main.c      ****  888b     d'888      .8"888.      888   8 `88b.    8  
1118:.\main.c      ****  8 Y88. .P  888     .8' `888.     888   8   `88b.  8  
1119:.\main.c      ****  8  `888'   888    .88ooo8888.    888   8     `88b.8  
1120:.\main.c      ****  8    Y     888   .8'     `888.   888   8       `888  
1121:.\main.c      **** o8o        o888o o88o     o8888o o888o o8o        `8                                       
1122:.\main.c      **** */
1123:.\main.c      **** 
1124:.\main.c      **** int main()
1125:.\main.c      **** {
 5002              		.loc 1 1125 0
 5003              		.cfi_startproc
 5004              		@ args = 0, pretend = 0, frame = 16
 5005              		@ frame_needed = 1, uses_anonymous_args = 0
 5006 0000 80B5     		push	{r7, lr}
 5007              		.cfi_def_cfa_offset 8
 5008              		.cfi_offset 7, -8
 5009              		.cfi_offset 14, -4
 5010 0002 84B0     		sub	sp, sp, #16
 5011              		.cfi_def_cfa_offset 24
 5012 0004 00AF     		add	r7, sp, #0
 5013              		.cfi_def_cfa_register 7
1126:.\main.c      **** 
1127:.\main.c      **** // --------------------------------
1128:.\main.c      **** // ----- INITIALIZATIONS ----------
1129:.\main.c      ****     CYGlobalIntEnable;
 5014              		.loc 1 1129 0
 5015              	@ 1129 ".\main.c" 1
 5016 0006 62B6     		CPSIE   i
 5017              	@ 0 "" 2
1130:.\main.c      ****     //LED_OFF;
1131:.\main.c      ****     QuadDec_M1_Start();
 5018              		.loc 1 1131 0
 5019              		.thumb
 5020 0008 FFF7FEFF 		bl	QuadDec_M1_Start
1132:.\main.c      ****     QuadDec_M2_Start();
 5021              		.loc 1 1132 0
 5022 000c FFF7FEFF 		bl	QuadDec_M2_Start
1133:.\main.c      ****     PWM_1_Start();
 5023              		.loc 1 1133 0
 5024 0010 FFF7FEFF 		bl	PWM_1_Start
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 110


1134:.\main.c      ****     PWM_2_Start();
 5025              		.loc 1 1134 0
 5026 0014 FFF7FEFF 		bl	PWM_2_Start
1135:.\main.c      ****     Timer_1_Start();
 5027              		.loc 1 1135 0
 5028 0018 FFF7FEFF 		bl	Timer_1_Start
1136:.\main.c      ****     Timer_2_Start();
 5029              		.loc 1 1136 0
 5030 001c FFF7FEFF 		bl	Timer_2_Start
1137:.\main.c      ****     check_StartEx(check);
 5031              		.loc 1 1137 0
 5032 0020 9548     		ldr	r0, .L287
 5033 0022 FFF7FEFF 		bl	check_StartEx
1138:.\main.c      ****     printing_StartEx(printing);
 5034              		.loc 1 1138 0
 5035 0026 9548     		ldr	r0, .L287+4
 5036 0028 FFF7FEFF 		bl	printing_StartEx
1139:.\main.c      ****     isrRF_RX_StartEx(test_isr);
 5037              		.loc 1 1139 0
 5038 002c 9448     		ldr	r0, .L287+8
 5039 002e FFF7FEFF 		bl	isrRF_RX_StartEx
1140:.\main.c      ****     
1141:.\main.c      ****     
1142:.\main.c      ****     // ADC Initialisations
1143:.\main.c      ****     ADC_Start();
 5040              		.loc 1 1143 0
 5041 0032 FFF7FEFF 		bl	ADC_Start
1144:.\main.c      ****     ADC_StartConvert();
 5042              		.loc 1 1144 0
 5043 0036 FFF7FEFF 		bl	ADC_StartConvert
1145:.\main.c      ****     
1146:.\main.c      ****     //UART Init
1147:.\main.c      ****     RF_BT_SELECT_Write(0);
 5044              		.loc 1 1147 0
 5045 003a 0020     		movs	r0, #0
 5046 003c FFF7FEFF 		bl	RF_BT_SELECT_Write
1148:.\main.c      ****     UART_Start();
 5047              		.loc 1 1148 0
 5048 0040 FFF7FEFF 		bl	UART_Start
1149:.\main.c      ****     
1150:.\main.c      ****     // Set the robot's PWM to a value that roughly matches the set speed. (Benchmark 4)
1151:.\main.c      ****     PWM_1_WriteCompare(80);
 5049              		.loc 1 1151 0
 5050 0044 5020     		movs	r0, #80
 5051 0046 FFF7FEFF 		bl	PWM_1_WriteCompare
1152:.\main.c      ****     PWM_2_WriteCompare(80);
 5052              		.loc 1 1152 0
 5053 004a 5020     		movs	r0, #80
 5054 004c FFF7FEFF 		bl	PWM_2_WriteCompare
1153:.\main.c      ****     
1154:.\main.c      ****     int m2i = 0;
 5055              		.loc 1 1154 0
 5056 0050 0023     		movs	r3, #0
 5057 0052 FB60     		str	r3, [r7, #12]
 5058              	.LBB26:
1155:.\main.c      ****     
1156:.\main.c      ****     // Initialises the final path array.
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 111


1157:.\main.c      ****     for (int i = 0; i < 500; ++i) {
 5059              		.loc 1 1157 0
 5060 0054 0023     		movs	r3, #0
 5061 0056 BB60     		str	r3, [r7, #8]
 5062 0058 0DE0     		b	.L268
 5063              	.L269:
1158:.\main.c      ****         FinalArray[i].row = TAIL;
 5064              		.loc 1 1158 0 discriminator 3
 5065 005a 8A4A     		ldr	r2, .L287+12
 5066 005c BB68     		ldr	r3, [r7, #8]
 5067 005e 6521     		movs	r1, #101
 5068 0060 02F81310 		strb	r1, [r2, r3, lsl #1]
1159:.\main.c      ****         FinalArray[i].col = TAIL;
 5069              		.loc 1 1159 0 discriminator 3
 5070 0064 874A     		ldr	r2, .L287+12
 5071 0066 BB68     		ldr	r3, [r7, #8]
 5072 0068 5B00     		lsls	r3, r3, #1
 5073 006a 1344     		add	r3, r3, r2
 5074 006c 6522     		movs	r2, #101
 5075 006e 5A70     		strb	r2, [r3, #1]
1157:.\main.c      ****         FinalArray[i].row = TAIL;
 5076              		.loc 1 1157 0 discriminator 3
 5077 0070 BB68     		ldr	r3, [r7, #8]
 5078 0072 0133     		adds	r3, r3, #1
 5079 0074 BB60     		str	r3, [r7, #8]
 5080              	.L268:
1157:.\main.c      ****         FinalArray[i].row = TAIL;
 5081              		.loc 1 1157 0 is_stmt 0 discriminator 1
 5082 0076 BB68     		ldr	r3, [r7, #8]
 5083 0078 B3F5FA7F 		cmp	r3, #500
 5084 007c EDDB     		blt	.L269
 5085              	.LBE26:
 5086              	.LBB27:
1160:.\main.c      ****     }
1161:.\main.c      ****     
1162:.\main.c      ****     // Initialises the food states array. (It's exactly the same as the map array!)
1163:.\main.c      ****     for (int i = 0; i < MAXMAP_ROWS; ++i) {
 5087              		.loc 1 1163 0 is_stmt 1
 5088 007e 0023     		movs	r3, #0
 5089 0080 7B60     		str	r3, [r7, #4]
 5090 0082 23E0     		b	.L270
 5091              	.L273:
 5092              	.LBB28:
1164:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 5093              		.loc 1 1164 0
 5094 0084 0023     		movs	r3, #0
 5095 0086 3B60     		str	r3, [r7]
 5096 0088 1AE0     		b	.L271
 5097              	.L272:
1165:.\main.c      ****             food_states[i][j] = map[i][j];
 5098              		.loc 1 1165 0 discriminator 3
 5099 008a 7F49     		ldr	r1, .L287+16
 5100 008c 7A68     		ldr	r2, [r7, #4]
 5101 008e 1346     		mov	r3, r2
 5102 0090 DB00     		lsls	r3, r3, #3
 5103 0092 1344     		add	r3, r3, r2
 5104 0094 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 112


 5105 0096 1344     		add	r3, r3, r2
 5106 0098 3A68     		ldr	r2, [r7]
 5107 009a 1344     		add	r3, r3, r2
 5108 009c 51F82330 		ldr	r3, [r1, r3, lsl #2]
 5109 00a0 D8B2     		uxtb	r0, r3
 5110 00a2 7A49     		ldr	r1, .L287+20
 5111 00a4 7A68     		ldr	r2, [r7, #4]
 5112 00a6 1346     		mov	r3, r2
 5113 00a8 DB00     		lsls	r3, r3, #3
 5114 00aa 1344     		add	r3, r3, r2
 5115 00ac 5B00     		lsls	r3, r3, #1
 5116 00ae 1344     		add	r3, r3, r2
 5117 00b0 3A68     		ldr	r2, [r7]
 5118 00b2 1344     		add	r3, r3, r2
 5119 00b4 0B44     		add	r3, r3, r1
 5120 00b6 0246     		mov	r2, r0
 5121 00b8 1A70     		strb	r2, [r3]
1164:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 5122              		.loc 1 1164 0 discriminator 3
 5123 00ba 3B68     		ldr	r3, [r7]
 5124 00bc 0133     		adds	r3, r3, #1
 5125 00be 3B60     		str	r3, [r7]
 5126              	.L271:
1164:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 5127              		.loc 1 1164 0 is_stmt 0 discriminator 1
 5128 00c0 3B68     		ldr	r3, [r7]
 5129 00c2 122B     		cmp	r3, #18
 5130 00c4 E1DD     		ble	.L272
 5131              	.LBE28:
1163:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 5132              		.loc 1 1163 0 is_stmt 1 discriminator 2
 5133 00c6 7B68     		ldr	r3, [r7, #4]
 5134 00c8 0133     		adds	r3, r3, #1
 5135 00ca 7B60     		str	r3, [r7, #4]
 5136              	.L270:
1163:.\main.c      ****         for (int j = 0; j < MAXMAP_COLS; ++j) {
 5137              		.loc 1 1163 0 is_stmt 0 discriminator 1
 5138 00cc 7B68     		ldr	r3, [r7, #4]
 5139 00ce 0E2B     		cmp	r3, #14
 5140 00d0 D8DD     		ble	.L273
 5141              	.LBE27:
1166:.\main.c      ****         }
1167:.\main.c      ****     }
1168:.\main.c      ****     
1169:.\main.c      ****     /*
1170:.\main.c      ****      .oooooo..o     .                          .        ooooo   ooooo                              
1171:.\main.c      ****     d8P'    `Y8   .o8                        .o8        `888'   `888'                              
1172:.\main.c      ****     Y88bo.      .o888oo  .oooo.   oooo d8b .o888oo       888     888   .ooooo.  oooo d8b  .ooooo.  
1173:.\main.c      ****      `"Y8888o.    888   `P  )88b  `888""8P   888         888ooooo888  d88' `88b `888""8P d88' `88b 
1174:.\main.c      ****          `"Y88b   888    .oP"888   888       888         888     888  888ooo888  888     888ooo888 
1175:.\main.c      ****     oo     .d8P   888 . d8(  888   888       888 .       888     888  888    .o  888     888    .o 
1176:.\main.c      ****     8""88888P'    "888" `Y888""8o d888b      "888"      o888o   o888o `Y8bod8P' d888b    `Y8bod8P' 
1177:.\main.c      ****     */
1178:.\main.c      ****     
1179:.\main.c      ****     START_ROW = 1;
 5142              		.loc 1 1179 0 is_stmt 1
 5143 00d2 6F4B     		ldr	r3, .L287+24
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 113


 5144 00d4 0122     		movs	r2, #1
 5145 00d6 1A70     		strb	r2, [r3]
1180:.\main.c      ****     START_COL = 1;
 5146              		.loc 1 1180 0
 5147 00d8 6E4B     		ldr	r3, .L287+28
 5148 00da 0122     		movs	r2, #1
 5149 00dc 1A70     		strb	r2, [r3]
1181:.\main.c      ****     orientation = DOWN;
 5150              		.loc 1 1181 0
 5151 00de 6E4B     		ldr	r3, .L287+32
 5152 00e0 0422     		movs	r2, #4
 5153 00e2 1A60     		str	r2, [r3]
1182:.\main.c      ****     
1183:.\main.c      ****     FinalArray[next_free_index].row = START_ROW;
 5154              		.loc 1 1183 0
 5155 00e4 6D4B     		ldr	r3, .L287+36
 5156 00e6 1B68     		ldr	r3, [r3]
 5157 00e8 694A     		ldr	r2, .L287+24
 5158 00ea 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5159 00ec 654A     		ldr	r2, .L287+12
 5160 00ee 02F81310 		strb	r1, [r2, r3, lsl #1]
1184:.\main.c      ****     FinalArray[next_free_index].col = START_COL;
 5161              		.loc 1 1184 0
 5162 00f2 6A4B     		ldr	r3, .L287+36
 5163 00f4 1B68     		ldr	r3, [r3]
 5164 00f6 674A     		ldr	r2, .L287+28
 5165 00f8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5166 00fa 624A     		ldr	r2, .L287+12
 5167 00fc 5B00     		lsls	r3, r3, #1
 5168 00fe 1344     		add	r3, r3, r2
 5169 0100 0A46     		mov	r2, r1
 5170 0102 5A70     		strb	r2, [r3, #1]
1185:.\main.c      ****     
1186:.\main.c      ****     // For the final test, Mode 1 or Mode 2...
1187:.\main.c      ****     if (DIP0_Read() == 0 && DIP1_Read() == 0) {
 5171              		.loc 1 1187 0
 5172 0104 FFF7FEFF 		bl	DIP0_Read
 5173 0108 0346     		mov	r3, r0
 5174 010a 002B     		cmp	r3, #0
 5175 010c 0FD1     		bne	.L274
 5176              		.loc 1 1187 0 is_stmt 0 discriminator 1
 5177 010e FFF7FEFF 		bl	DIP1_Read
 5178 0112 0346     		mov	r3, r0
 5179 0114 002B     		cmp	r3, #0
 5180 0116 0AD1     		bne	.L274
1188:.\main.c      ****         while (foodLeft() > 0) {
 5181              		.loc 1 1188 0 is_stmt 1
 5182 0118 03E0     		b	.L275
 5183              	.L276:
1189:.\main.c      ****         findNearestFood();
 5184              		.loc 1 1189 0
 5185 011a FFF7FEFF 		bl	findNearestFood
1190:.\main.c      **** 	    astar_and_append();
 5186              		.loc 1 1190 0
 5187 011e FFF7FEFF 		bl	astar_and_append
 5188              	.L275:
1188:.\main.c      ****         while (foodLeft() > 0) {
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 114


 5189              		.loc 1 1188 0
 5190 0122 FFF7FEFF 		bl	foodLeft
 5191 0126 0346     		mov	r3, r0
 5192 0128 002B     		cmp	r3, #0
 5193 012a F6DC     		bgt	.L276
1187:.\main.c      ****         while (foodLeft() > 0) {
 5194              		.loc 1 1187 0
 5195 012c 21E0     		b	.L277
 5196              	.L274:
1191:.\main.c      ****         }
1192:.\main.c      ****     }
1193:.\main.c      ****     else if (DIP0_Read() == 1 && DIP1_Read() == 0) {
 5197              		.loc 1 1193 0
 5198 012e FFF7FEFF 		bl	DIP0_Read
 5199 0132 0346     		mov	r3, r0
 5200 0134 012B     		cmp	r3, #1
 5201 0136 1CD1     		bne	.L277
 5202              		.loc 1 1193 0 is_stmt 0 discriminator 1
 5203 0138 FFF7FEFF 		bl	DIP1_Read
 5204 013c 0346     		mov	r3, r0
 5205 013e 002B     		cmp	r3, #0
 5206 0140 17D1     		bne	.L277
1194:.\main.c      ****         while (m2i != 6) {
 5207              		.loc 1 1194 0 is_stmt 1
 5208 0142 13E0     		b	.L278
 5209              	.L279:
1195:.\main.c      ****     		PIZZA_ROW = food_list[m2i][1];
 5210              		.loc 1 1195 0
 5211 0144 564A     		ldr	r2, .L287+40
 5212 0146 FB68     		ldr	r3, [r7, #12]
 5213 0148 DB00     		lsls	r3, r3, #3
 5214 014a 1344     		add	r3, r3, r2
 5215 014c 5B68     		ldr	r3, [r3, #4]
 5216 014e DAB2     		uxtb	r2, r3
 5217 0150 544B     		ldr	r3, .L287+44
 5218 0152 1A70     		strb	r2, [r3]
1196:.\main.c      ****     		PIZZA_COL = food_list[m2i][0];
 5219              		.loc 1 1196 0
 5220 0154 524A     		ldr	r2, .L287+40
 5221 0156 FB68     		ldr	r3, [r7, #12]
 5222 0158 52F83330 		ldr	r3, [r2, r3, lsl #3]
 5223 015c DAB2     		uxtb	r2, r3
 5224 015e 524B     		ldr	r3, .L287+48
 5225 0160 1A70     		strb	r2, [r3]
1197:.\main.c      ****     		astar_and_append();
 5226              		.loc 1 1197 0
 5227 0162 FFF7FEFF 		bl	astar_and_append
1198:.\main.c      ****     		++m2i;
 5228              		.loc 1 1198 0
 5229 0166 FB68     		ldr	r3, [r7, #12]
 5230 0168 0133     		adds	r3, r3, #1
 5231 016a FB60     		str	r3, [r7, #12]
 5232              	.L278:
1194:.\main.c      ****     		PIZZA_ROW = food_list[m2i][1];
 5233              		.loc 1 1194 0
 5234 016c FB68     		ldr	r3, [r7, #12]
 5235 016e 062B     		cmp	r3, #6
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 115


 5236 0170 E8D1     		bne	.L279
 5237              	.L277:
1199:.\main.c      ****     	}
1200:.\main.c      ****     }
1201:.\main.c      ****     
1202:.\main.c      ****     LED_ON;
 5238              		.loc 1 1202 0
 5239 0172 0120     		movs	r0, #1
 5240 0174 FFF7FEFF 		bl	LED_Write
 5241              	.L286:
1203:.\main.c      ****     
1204:.\main.c      ****     //running while loop 
1205:.\main.c      ****     while (1) {
1206:.\main.c      ****         
1207:.\main.c      ****         //get the current position for the first time
1208:.\main.c      ****         currentRFpos.row = RFround(RFdata.robot_ypos);
 5242              		.loc 1 1208 0
 5243 0178 4C4B     		ldr	r3, .L287+52
 5244 017a 9B88     		ldrh	r3, [r3, #4]
 5245 017c 1BB2     		sxth	r3, r3
 5246 017e 1846     		mov	r0, r3
 5247 0180 FFF7FEFF 		bl	RFround
 5248 0184 0346     		mov	r3, r0
 5249 0186 DAB2     		uxtb	r2, r3
 5250 0188 494B     		ldr	r3, .L287+56
 5251 018a 1A70     		strb	r2, [r3]
1209:.\main.c      ****         currentRFpos.col = RFround(RFdata.robot_xpos);
 5252              		.loc 1 1209 0
 5253 018c 474B     		ldr	r3, .L287+52
 5254 018e 5B88     		ldrh	r3, [r3, #2]
 5255 0190 1BB2     		sxth	r3, r3
 5256 0192 1846     		mov	r0, r3
 5257 0194 FFF7FEFF 		bl	RFround
 5258 0198 0346     		mov	r3, r0
 5259 019a DAB2     		uxtb	r2, r3
 5260 019c 444B     		ldr	r3, .L287+56
 5261 019e 5A70     		strb	r2, [r3, #1]
1210:.\main.c      ****         
1211:.\main.c      ****         while(path_index != ARRAY_SIZE) { //while it is not the last node
 5262              		.loc 1 1211 0
 5263 01a0 63E0     		b	.L280
 5264              	.L285:
1212:.\main.c      ****             
1213:.\main.c      ****             //while it has not reach the next node yet
1214:.\main.c      ****             while(currentRFpos.row != FinalArray[path_index + 1].row || currentRFpos.col != FinalAr
 5265              		.loc 1 1214 0
 5266 01a2 1BE0     		b	.L281
 5267              	.L283:
1215:.\main.c      ****                 
1216:.\main.c      ****                 duplicateFlag = 0;
 5268              		.loc 1 1216 0
 5269 01a4 434B     		ldr	r3, .L287+60
 5270 01a6 0022     		movs	r2, #0
 5271 01a8 1A60     		str	r2, [r3]
1217:.\main.c      ****                 
1218:.\main.c      ****                 if (off_track == 1) {
 5272              		.loc 1 1218 0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 116


 5273 01aa 434B     		ldr	r3, .L287+64
 5274 01ac 1B68     		ldr	r3, [r3]
 5275 01ae 012B     		cmp	r3, #1
 5276 01b0 0CD1     		bne	.L282
1219:.\main.c      ****                     Direction_Control_1_Write(2);
 5277              		.loc 1 1219 0
 5278 01b2 0220     		movs	r0, #2
 5279 01b4 FFF7FEFF 		bl	Direction_Control_1_Write
1220:.\main.c      ****                     Direction_Control_2_Write(1);
 5280              		.loc 1 1220 0
 5281 01b8 0120     		movs	r0, #1
 5282 01ba FFF7FEFF 		bl	Direction_Control_2_Write
1221:.\main.c      ****                     PWM_1_WriteCompare(60);
 5283              		.loc 1 1221 0
 5284 01be 3C20     		movs	r0, #60
 5285 01c0 FFF7FEFF 		bl	PWM_1_WriteCompare
1222:.\main.c      ****                     PWM_2_WriteCompare(60);
 5286              		.loc 1 1222 0
 5287 01c4 3C20     		movs	r0, #60
 5288 01c6 FFF7FEFF 		bl	PWM_2_WriteCompare
 5289 01ca 07E0     		b	.L281
 5290              	.L282:
1223:.\main.c      ****                 }
1224:.\main.c      ****                 else {
1225:.\main.c      ****                     // Prioritises using RF over the new turning code.
1226:.\main.c      ****                     Direction_Control_1_Write(1);
 5291              		.loc 1 1226 0
 5292 01cc 0120     		movs	r0, #1
 5293 01ce FFF7FEFF 		bl	Direction_Control_1_Write
1227:.\main.c      ****                     Direction_Control_2_Write(2);
 5294              		.loc 1 1227 0
 5295 01d2 0220     		movs	r0, #2
 5296 01d4 FFF7FEFF 		bl	Direction_Control_2_Write
1228:.\main.c      ****                     useRF();
 5297              		.loc 1 1228 0
 5298 01d8 FFF7FEFF 		bl	useRF
 5299              	.L281:
1214:.\main.c      ****                 
 5300              		.loc 1 1214 0
 5301 01dc 344B     		ldr	r3, .L287+56
 5302 01de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5303 01e0 364B     		ldr	r3, .L287+68
 5304 01e2 1B68     		ldr	r3, [r3]
 5305 01e4 0133     		adds	r3, r3, #1
 5306 01e6 2749     		ldr	r1, .L287+12
 5307 01e8 11F81330 		ldrb	r3, [r1, r3, lsl #1]	@ zero_extendqisi2
 5308 01ec 9A42     		cmp	r2, r3
 5309 01ee D9D1     		bne	.L283
1214:.\main.c      ****                 
 5310              		.loc 1 1214 0 is_stmt 0 discriminator 1
 5311 01f0 2F4B     		ldr	r3, .L287+56
 5312 01f2 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5313 01f4 314B     		ldr	r3, .L287+68
 5314 01f6 1B68     		ldr	r3, [r3]
 5315 01f8 0133     		adds	r3, r3, #1
 5316 01fa 2249     		ldr	r1, .L287+12
 5317 01fc 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 117


 5318 01fe 0B44     		add	r3, r3, r1
 5319 0200 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5320 0202 9A42     		cmp	r2, r3
 5321 0204 CED1     		bne	.L283
1229:.\main.c      ****                 }
1230:.\main.c      ****             }
1231:.\main.c      ****             
1232:.\main.c      ****             if (duplicateFlag == 0) {
 5322              		.loc 1 1232 0 is_stmt 1
 5323 0206 2B4B     		ldr	r3, .L287+60
 5324 0208 1B68     		ldr	r3, [r3]
 5325 020a 002B     		cmp	r3, #0
 5326 020c 12D1     		bne	.L284
1233:.\main.c      ****                 orientation = nextNodeDirection(path_index);
 5327              		.loc 1 1233 0
 5328 020e 2B4B     		ldr	r3, .L287+68
 5329 0210 1B68     		ldr	r3, [r3]
 5330 0212 1846     		mov	r0, r3
 5331 0214 FFF7FEFF 		bl	nextNodeDirection
 5332 0218 0246     		mov	r2, r0
 5333 021a 1F4B     		ldr	r3, .L287+32
 5334 021c 1A60     		str	r2, [r3]
1234:.\main.c      ****                 ++path_index;
 5335              		.loc 1 1234 0
 5336 021e 274B     		ldr	r3, .L287+68
 5337 0220 1B68     		ldr	r3, [r3]
 5338 0222 0133     		adds	r3, r3, #1
 5339 0224 254A     		ldr	r2, .L287+68
 5340 0226 1360     		str	r3, [r2]
1235:.\main.c      ****                 duplicateFlag = 1;
 5341              		.loc 1 1235 0
 5342 0228 224B     		ldr	r3, .L287+60
 5343 022a 0122     		movs	r2, #1
 5344 022c 1A60     		str	r2, [r3]
1236:.\main.c      ****                 turnDone_180 = 0;
 5345              		.loc 1 1236 0
 5346 022e 244B     		ldr	r3, .L287+72
 5347 0230 0022     		movs	r2, #0
 5348 0232 1A60     		str	r2, [r3]
 5349              	.L284:
1237:.\main.c      ****             }
1238:.\main.c      ****             
1239:.\main.c      ****             // WE ARE DONE!
1240:.\main.c      ****             if (FinalArray[path_index].row == TAIL && FinalArray[path_index].col == TAIL) {
 5350              		.loc 1 1240 0
 5351 0234 214B     		ldr	r3, .L287+68
 5352 0236 1B68     		ldr	r3, [r3]
 5353 0238 124A     		ldr	r2, .L287+12
 5354 023a 12F81330 		ldrb	r3, [r2, r3, lsl #1]	@ zero_extendqisi2
 5355 023e 652B     		cmp	r3, #101
 5356 0240 13D1     		bne	.L280
 5357              		.loc 1 1240 0 is_stmt 0 discriminator 1
 5358 0242 1E4B     		ldr	r3, .L287+68
 5359 0244 1B68     		ldr	r3, [r3]
 5360 0246 0F4A     		ldr	r2, .L287+12
 5361 0248 5B00     		lsls	r3, r3, #1
 5362 024a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 118


 5363 024c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5364 024e 652B     		cmp	r3, #101
 5365 0250 0BD1     		bne	.L280
1241:.\main.c      ****                 Direction_Control_1_Write(1);
 5366              		.loc 1 1241 0 is_stmt 1
 5367 0252 0120     		movs	r0, #1
 5368 0254 FFF7FEFF 		bl	Direction_Control_1_Write
1242:.\main.c      ****                 Direction_Control_2_Write(1);
 5369              		.loc 1 1242 0
 5370 0258 0120     		movs	r0, #1
 5371 025a FFF7FEFF 		bl	Direction_Control_2_Write
1243:.\main.c      ****                 PWM_1_WriteCompare(255);
 5372              		.loc 1 1243 0
 5373 025e FF20     		movs	r0, #255
 5374 0260 FFF7FEFF 		bl	PWM_1_WriteCompare
1244:.\main.c      ****                 PWM_2_WriteCompare(255);
 5375              		.loc 1 1244 0
 5376 0264 FF20     		movs	r0, #255
 5377 0266 FFF7FEFF 		bl	PWM_2_WriteCompare
 5378              	.L280:
1211:.\main.c      ****             
 5379              		.loc 1 1211 0
 5380 026a 144B     		ldr	r3, .L287+68
 5381 026c 1B68     		ldr	r3, [r3]
 5382 026e B3F5967F 		cmp	r3, #300
 5383 0272 96D1     		bne	.L285
1245:.\main.c      ****             }
1246:.\main.c      ****         }
1247:.\main.c      ****     }
 5384              		.loc 1 1247 0
 5385 0274 80E7     		b	.L286
 5386              	.L288:
 5387 0276 00BF     		.align	2
 5388              	.L287:
 5389 0278 00000000 		.word	check
 5390 027c 00000000 		.word	printing
 5391 0280 00000000 		.word	test_isr
 5392 0284 00000000 		.word	FinalArray
 5393 0288 00000000 		.word	map
 5394 028c 00000000 		.word	food_states
 5395 0290 00000000 		.word	START_ROW
 5396 0294 00000000 		.word	START_COL
 5397 0298 00000000 		.word	orientation
 5398 029c 00000000 		.word	next_free_index
 5399 02a0 00000000 		.word	food_list
 5400 02a4 00000000 		.word	PIZZA_ROW
 5401 02a8 00000000 		.word	PIZZA_COL
 5402 02ac 00000000 		.word	RFdata
 5403 02b0 00000000 		.word	currentRFpos
 5404 02b4 00000000 		.word	duplicateFlag
 5405 02b8 00000000 		.word	off_track
 5406 02bc 00000000 		.word	path_index
 5407 02c0 00000000 		.word	turnDone_180
 5408              		.cfi_endproc
 5409              	.LFE85:
 5410              		.size	main, .-main
 5411              		.text
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 119


 5412              	.Letext0:
 5413              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5414              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 5415              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5416              		.file 5 ".\\vars.h"
 5417              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 5418              		.file 7 ".\\map.h"
 5419              		.section	.debug_info,"",%progbits
 5420              	.Ldebug_info0:
 5421 0000 AE0F0000 		.4byte	0xfae
 5422 0004 0400     		.2byte	0x4
 5423 0006 00000000 		.4byte	.Ldebug_abbrev0
 5424 000a 04       		.byte	0x4
 5425 000b 01       		.uleb128 0x1
 5426 000c 51040000 		.4byte	.LASF165
 5427 0010 01       		.byte	0x1
 5428 0011 94070000 		.4byte	.LASF166
 5429 0015 01070000 		.4byte	.LASF167
 5430 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5431 001d 00000000 		.4byte	0
 5432 0021 00000000 		.4byte	.Ldebug_line0
 5433 0025 02       		.uleb128 0x2
 5434 0026 01       		.byte	0x1
 5435 0027 06       		.byte	0x6
 5436 0028 68060000 		.4byte	.LASF0
 5437 002c 02       		.uleb128 0x2
 5438 002d 01       		.byte	0x1
 5439 002e 08       		.byte	0x8
 5440 002f EE050000 		.4byte	.LASF1
 5441 0033 02       		.uleb128 0x2
 5442 0034 02       		.byte	0x2
 5443 0035 05       		.byte	0x5
 5444 0036 FC040000 		.4byte	.LASF2
 5445 003a 02       		.uleb128 0x2
 5446 003b 02       		.byte	0x2
 5447 003c 07       		.byte	0x7
 5448 003d 74060000 		.4byte	.LASF3
 5449 0041 03       		.uleb128 0x3
 5450 0042 86000000 		.4byte	.LASF11
 5451 0046 02       		.byte	0x2
 5452 0047 3F       		.byte	0x3f
 5453 0048 4C000000 		.4byte	0x4c
 5454 004c 02       		.uleb128 0x2
 5455 004d 04       		.byte	0x4
 5456 004e 05       		.byte	0x5
 5457 004f 06050000 		.4byte	.LASF4
 5458 0053 02       		.uleb128 0x2
 5459 0054 04       		.byte	0x4
 5460 0055 07       		.byte	0x7
 5461 0056 A1050000 		.4byte	.LASF5
 5462 005a 02       		.uleb128 0x2
 5463 005b 08       		.byte	0x8
 5464 005c 05       		.byte	0x5
 5465 005d 1E030000 		.4byte	.LASF6
 5466 0061 02       		.uleb128 0x2
 5467 0062 08       		.byte	0x8
 5468 0063 07       		.byte	0x7
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 120


 5469 0064 9B010000 		.4byte	.LASF7
 5470 0068 04       		.uleb128 0x4
 5471 0069 04       		.byte	0x4
 5472 006a 05       		.byte	0x5
 5473 006b 696E7400 		.ascii	"int\000"
 5474 006f 02       		.uleb128 0x2
 5475 0070 04       		.byte	0x4
 5476 0071 07       		.byte	0x7
 5477 0072 41000000 		.4byte	.LASF8
 5478 0076 02       		.uleb128 0x2
 5479 0077 04       		.byte	0x4
 5480 0078 07       		.byte	0x7
 5481 0079 98050000 		.4byte	.LASF9
 5482 007d 02       		.uleb128 0x2
 5483 007e 01       		.byte	0x1
 5484 007f 08       		.byte	0x8
 5485 0080 B5020000 		.4byte	.LASF10
 5486 0084 03       		.uleb128 0x3
 5487 0085 BC050000 		.4byte	.LASF12
 5488 0089 03       		.byte	0x3
 5489 008a 2C       		.byte	0x2c
 5490 008b 41000000 		.4byte	0x41
 5491 008f 05       		.uleb128 0x5
 5492 0090 B6060000 		.4byte	.LASF13
 5493 0094 04       		.byte	0x4
 5494 0095 9201     		.2byte	0x192
 5495 0097 2C000000 		.4byte	0x2c
 5496 009b 05       		.uleb128 0x5
 5497 009c CA020000 		.4byte	.LASF14
 5498 00a0 04       		.byte	0x4
 5499 00a1 9301     		.2byte	0x193
 5500 00a3 3A000000 		.4byte	0x3a
 5501 00a7 05       		.uleb128 0x5
 5502 00a8 D1020000 		.4byte	.LASF15
 5503 00ac 04       		.byte	0x4
 5504 00ad 9501     		.2byte	0x195
 5505 00af 25000000 		.4byte	0x25
 5506 00b3 05       		.uleb128 0x5
 5507 00b4 90000000 		.4byte	.LASF16
 5508 00b8 04       		.byte	0x4
 5509 00b9 9601     		.2byte	0x196
 5510 00bb 33000000 		.4byte	0x33
 5511 00bf 02       		.uleb128 0x2
 5512 00c0 04       		.byte	0x4
 5513 00c1 04       		.byte	0x4
 5514 00c2 74010000 		.4byte	.LASF17
 5515 00c6 02       		.uleb128 0x2
 5516 00c7 08       		.byte	0x8
 5517 00c8 04       		.byte	0x4
 5518 00c9 BC060000 		.4byte	.LASF18
 5519 00cd 02       		.uleb128 0x2
 5520 00ce 08       		.byte	0x8
 5521 00cf 04       		.byte	0x4
 5522 00d0 04040000 		.4byte	.LASF19
 5523 00d4 06       		.uleb128 0x6
 5524 00d5 AC030000 		.4byte	.LASF38
 5525 00d9 20       		.byte	0x20
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 121


 5526 00da 05       		.byte	0x5
 5527 00db 29       		.byte	0x29
 5528 00dc AD010000 		.4byte	0x1ad
 5529 00e0 07       		.uleb128 0x7
 5530 00e1 C5030000 		.4byte	.LASF20
 5531 00e5 05       		.byte	0x5
 5532 00e6 2A       		.byte	0x2a
 5533 00e7 A7000000 		.4byte	0xa7
 5534 00eb 00       		.byte	0
 5535 00ec 07       		.uleb128 0x7
 5536 00ed 90010000 		.4byte	.LASF21
 5537 00f1 05       		.byte	0x5
 5538 00f2 2B       		.byte	0x2b
 5539 00f3 8F000000 		.4byte	0x8f
 5540 00f7 01       		.byte	0x1
 5541 00f8 07       		.uleb128 0x7
 5542 00f9 C4050000 		.4byte	.LASF22
 5543 00fd 05       		.byte	0x5
 5544 00fe 2C       		.byte	0x2c
 5545 00ff B3000000 		.4byte	0xb3
 5546 0103 02       		.byte	0x2
 5547 0104 07       		.uleb128 0x7
 5548 0105 79020000 		.4byte	.LASF23
 5549 0109 05       		.byte	0x5
 5550 010a 2D       		.byte	0x2d
 5551 010b B3000000 		.4byte	0xb3
 5552 010f 04       		.byte	0x4
 5553 0110 07       		.uleb128 0x7
 5554 0111 87060000 		.4byte	.LASF24
 5555 0115 05       		.byte	0x5
 5556 0116 2E       		.byte	0x2e
 5557 0117 B3000000 		.4byte	0xb3
 5558 011b 06       		.byte	0x6
 5559 011c 07       		.uleb128 0x7
 5560 011d F9060000 		.4byte	.LASF25
 5561 0121 05       		.byte	0x5
 5562 0122 2F       		.byte	0x2f
 5563 0123 B3000000 		.4byte	0xb3
 5564 0127 08       		.byte	0x8
 5565 0128 07       		.uleb128 0x7
 5566 0129 7A030000 		.4byte	.LASF26
 5567 012d 05       		.byte	0x5
 5568 012e 30       		.byte	0x30
 5569 012f B3000000 		.4byte	0xb3
 5570 0133 0A       		.byte	0xa
 5571 0134 07       		.uleb128 0x7
 5572 0135 BA020000 		.4byte	.LASF27
 5573 0139 05       		.byte	0x5
 5574 013a 31       		.byte	0x31
 5575 013b B3000000 		.4byte	0xb3
 5576 013f 0C       		.byte	0xc
 5577 0140 07       		.uleb128 0x7
 5578 0141 CA030000 		.4byte	.LASF28
 5579 0145 05       		.byte	0x5
 5580 0146 32       		.byte	0x32
 5581 0147 B3000000 		.4byte	0xb3
 5582 014b 0E       		.byte	0xe
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 122


 5583 014c 07       		.uleb128 0x7
 5584 014d 35030000 		.4byte	.LASF29
 5585 0151 05       		.byte	0x5
 5586 0152 33       		.byte	0x33
 5587 0153 B3000000 		.4byte	0xb3
 5588 0157 10       		.byte	0x10
 5589 0158 07       		.uleb128 0x7
 5590 0159 70050000 		.4byte	.LASF30
 5591 015d 05       		.byte	0x5
 5592 015e 34       		.byte	0x34
 5593 015f B3000000 		.4byte	0xb3
 5594 0163 12       		.byte	0x12
 5595 0164 07       		.uleb128 0x7
 5596 0165 76070000 		.4byte	.LASF31
 5597 0169 05       		.byte	0x5
 5598 016a 35       		.byte	0x35
 5599 016b B3000000 		.4byte	0xb3
 5600 016f 14       		.byte	0x14
 5601 0170 07       		.uleb128 0x7
 5602 0171 ED020000 		.4byte	.LASF32
 5603 0175 05       		.byte	0x5
 5604 0176 36       		.byte	0x36
 5605 0177 B3000000 		.4byte	0xb3
 5606 017b 16       		.byte	0x16
 5607 017c 07       		.uleb128 0x7
 5608 017d C7000000 		.4byte	.LASF33
 5609 0181 05       		.byte	0x5
 5610 0182 37       		.byte	0x37
 5611 0183 B3000000 		.4byte	0xb3
 5612 0187 18       		.byte	0x18
 5613 0188 07       		.uleb128 0x7
 5614 0189 54050000 		.4byte	.LASF34
 5615 018d 05       		.byte	0x5
 5616 018e 38       		.byte	0x38
 5617 018f B3000000 		.4byte	0xb3
 5618 0193 1A       		.byte	0x1a
 5619 0194 07       		.uleb128 0x7
 5620 0195 71030000 		.4byte	.LASF35
 5621 0199 05       		.byte	0x5
 5622 019a 39       		.byte	0x39
 5623 019b B3000000 		.4byte	0xb3
 5624 019f 1C       		.byte	0x1c
 5625 01a0 07       		.uleb128 0x7
 5626 01a1 4C010000 		.4byte	.LASF36
 5627 01a5 05       		.byte	0x5
 5628 01a6 3A       		.byte	0x3a
 5629 01a7 B3000000 		.4byte	0xb3
 5630 01ab 1E       		.byte	0x1e
 5631 01ac 00       		.byte	0
 5632 01ad 03       		.uleb128 0x3
 5633 01ae AE020000 		.4byte	.LASF37
 5634 01b2 05       		.byte	0x5
 5635 01b3 3B       		.byte	0x3b
 5636 01b4 D4000000 		.4byte	0xd4
 5637 01b8 08       		.uleb128 0x8
 5638 01b9 4D415000 		.ascii	"MAP\000"
 5639 01bd 7404     		.2byte	0x474
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 123


 5640 01bf 01       		.byte	0x1
 5641 01c0 C9       		.byte	0xc9
 5642 01c1 D2010000 		.4byte	0x1d2
 5643 01c5 09       		.uleb128 0x9
 5644 01c6 6D617000 		.ascii	"map\000"
 5645 01ca 01       		.byte	0x1
 5646 01cb CA       		.byte	0xca
 5647 01cc D2010000 		.4byte	0x1d2
 5648 01d0 00       		.byte	0
 5649 01d1 00       		.byte	0
 5650 01d2 0A       		.uleb128 0xa
 5651 01d3 68000000 		.4byte	0x68
 5652 01d7 E8010000 		.4byte	0x1e8
 5653 01db 0B       		.uleb128 0xb
 5654 01dc 76000000 		.4byte	0x76
 5655 01e0 0E       		.byte	0xe
 5656 01e1 0B       		.uleb128 0xb
 5657 01e2 76000000 		.4byte	0x76
 5658 01e6 12       		.byte	0x12
 5659 01e7 00       		.byte	0
 5660 01e8 0C       		.uleb128 0xc
 5661 01e9 4D415000 		.ascii	"MAP\000"
 5662 01ed 01       		.byte	0x1
 5663 01ee CB       		.byte	0xcb
 5664 01ef B8010000 		.4byte	0x1b8
 5665 01f3 06       		.uleb128 0x6
 5666 01f4 BE010000 		.4byte	.LASF39
 5667 01f8 02       		.byte	0x2
 5668 01f9 01       		.byte	0x1
 5669 01fa CE       		.byte	0xce
 5670 01fb 18020000 		.4byte	0x218
 5671 01ff 09       		.uleb128 0x9
 5672 0200 726F7700 		.ascii	"row\000"
 5673 0204 01       		.byte	0x1
 5674 0205 CF       		.byte	0xcf
 5675 0206 7D000000 		.4byte	0x7d
 5676 020a 00       		.byte	0
 5677 020b 09       		.uleb128 0x9
 5678 020c 636F6C00 		.ascii	"col\000"
 5679 0210 01       		.byte	0x1
 5680 0211 D0       		.byte	0xd0
 5681 0212 7D000000 		.4byte	0x7d
 5682 0216 01       		.byte	0x1
 5683 0217 00       		.byte	0
 5684 0218 03       		.uleb128 0x3
 5685 0219 BE010000 		.4byte	.LASF39
 5686 021d 01       		.byte	0x1
 5687 021e D1       		.byte	0xd1
 5688 021f F3010000 		.4byte	0x1f3
 5689 0223 06       		.uleb128 0x6
 5690 0224 31010000 		.4byte	.LASF40
 5691 0228 09       		.byte	0x9
 5692 0229 01       		.byte	0x1
 5693 022a D4       		.byte	0xd4
 5694 022b 48020000 		.4byte	0x248
 5695 022f 07       		.uleb128 0x7
 5696 0230 9C030000 		.4byte	.LASF41
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 124


 5697 0234 01       		.byte	0x1
 5698 0235 D5       		.byte	0xd5
 5699 0236 48020000 		.4byte	0x248
 5700 023a 00       		.byte	0
 5701 023b 07       		.uleb128 0x7
 5702 023c FC050000 		.4byte	.LASF42
 5703 0240 01       		.byte	0x1
 5704 0241 D6       		.byte	0xd6
 5705 0242 7D000000 		.4byte	0x7d
 5706 0246 08       		.byte	0x8
 5707 0247 00       		.byte	0
 5708 0248 0A       		.uleb128 0xa
 5709 0249 18020000 		.4byte	0x218
 5710 024d 58020000 		.4byte	0x258
 5711 0251 0B       		.uleb128 0xb
 5712 0252 76000000 		.4byte	0x76
 5713 0256 03       		.byte	0x3
 5714 0257 00       		.byte	0
 5715 0258 03       		.uleb128 0x3
 5716 0259 31010000 		.4byte	.LASF40
 5717 025d 01       		.byte	0x1
 5718 025e D7       		.byte	0xd7
 5719 025f 23020000 		.4byte	0x223
 5720 0263 0D       		.uleb128 0xd
 5721 0264 D6020000 		.4byte	.LASF43
 5722 0268 3A02     		.2byte	0x23a
 5723 026a 01       		.byte	0x1
 5724 026b D9       		.byte	0xd9
 5725 026c 7D020000 		.4byte	0x27d
 5726 0270 09       		.uleb128 0x9
 5727 0271 6D617000 		.ascii	"map\000"
 5728 0275 01       		.byte	0x1
 5729 0276 DA       		.byte	0xda
 5730 0277 7D020000 		.4byte	0x27d
 5731 027b 00       		.byte	0
 5732 027c 00       		.byte	0
 5733 027d 0A       		.uleb128 0xa
 5734 027e 18020000 		.4byte	0x218
 5735 0282 93020000 		.4byte	0x293
 5736 0286 0B       		.uleb128 0xb
 5737 0287 76000000 		.4byte	0x76
 5738 028b 0E       		.byte	0xe
 5739 028c 0B       		.uleb128 0xb
 5740 028d 76000000 		.4byte	0x76
 5741 0291 12       		.byte	0x12
 5742 0292 00       		.byte	0
 5743 0293 03       		.uleb128 0x3
 5744 0294 D6020000 		.4byte	.LASF43
 5745 0298 01       		.byte	0x1
 5746 0299 DB       		.byte	0xdb
 5747 029a 63020000 		.4byte	0x263
 5748 029e 0E       		.uleb128 0xe
 5749 029f AB000000 		.4byte	.LASF44
 5750 02a3 01       		.byte	0x1
 5751 02a4 2901     		.2byte	0x129
 5752 02a6 00000000 		.4byte	.LFB63
 5753 02aa A4040000 		.4byte	.LFE63-.LFB63
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 125


 5754 02ae 01       		.uleb128 0x1
 5755 02af 9C       		.byte	0x9c
 5756 02b0 0E       		.uleb128 0xe
 5757 02b1 B3050000 		.4byte	.LASF45
 5758 02b5 01       		.byte	0x1
 5759 02b6 BA01     		.2byte	0x1ba
 5760 02b8 00000000 		.4byte	.LFB64
 5761 02bc 5C000000 		.4byte	.LFE64-.LFB64
 5762 02c0 01       		.uleb128 0x1
 5763 02c1 9C       		.byte	0x9c
 5764 02c2 0F       		.uleb128 0xf
 5765 02c3 E1000000 		.4byte	.LASF47
 5766 02c7 01       		.byte	0x1
 5767 02c8 CE01     		.2byte	0x1ce
 5768 02ca 00000000 		.4byte	.LFB65
 5769 02ce A0010000 		.4byte	.LFE65-.LFB65
 5770 02d2 01       		.uleb128 0x1
 5771 02d3 9C       		.byte	0x9c
 5772 02d4 FF020000 		.4byte	0x2ff
 5773 02d8 10       		.uleb128 0x10
 5774 02d9 2F020000 		.4byte	.LASF46
 5775 02dd 01       		.byte	0x1
 5776 02de D001     		.2byte	0x1d0
 5777 02e0 8F000000 		.4byte	0x8f
 5778 02e4 02       		.uleb128 0x2
 5779 02e5 91       		.byte	0x91
 5780 02e6 6F       		.sleb128 -17
 5781 02e7 11       		.uleb128 0x11
 5782 02e8 18000000 		.4byte	.LBB2
 5783 02ec 68000000 		.4byte	.LBE2-.LBB2
 5784 02f0 12       		.uleb128 0x12
 5785 02f1 6100     		.ascii	"a\000"
 5786 02f3 01       		.byte	0x1
 5787 02f4 D201     		.2byte	0x1d2
 5788 02f6 AD010000 		.4byte	0x1ad
 5789 02fa 02       		.uleb128 0x2
 5790 02fb 91       		.byte	0x91
 5791 02fc 4C       		.sleb128 -52
 5792 02fd 00       		.byte	0
 5793 02fe 00       		.byte	0
 5794 02ff 0F       		.uleb128 0xf
 5795 0300 CC010000 		.4byte	.LASF48
 5796 0304 01       		.byte	0x1
 5797 0305 0202     		.2byte	0x202
 5798 0307 00000000 		.4byte	.LFB66
 5799 030b 74020000 		.4byte	.LFE66-.LFB66
 5800 030f 01       		.uleb128 0x1
 5801 0310 9C       		.byte	0x9c
 5802 0311 23030000 		.4byte	0x323
 5803 0315 13       		.uleb128 0x13
 5804 0316 6300     		.ascii	"c\000"
 5805 0318 01       		.byte	0x1
 5806 0319 0202     		.2byte	0x202
 5807 031b 8F000000 		.4byte	0x8f
 5808 031f 02       		.uleb128 0x2
 5809 0320 91       		.byte	0x91
 5810 0321 77       		.sleb128 -9
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 126


 5811 0322 00       		.byte	0
 5812 0323 14       		.uleb128 0x14
 5813 0324 7A010000 		.4byte	.LASF49
 5814 0328 01       		.byte	0x1
 5815 0329 3D02     		.2byte	0x23d
 5816 032b B3000000 		.4byte	0xb3
 5817 032f 00000000 		.4byte	.LFB67
 5818 0333 74000000 		.4byte	.LFE67-.LFB67
 5819 0337 01       		.uleb128 0x1
 5820 0338 9C       		.byte	0x9c
 5821 0339 58030000 		.4byte	0x358
 5822 033d 13       		.uleb128 0x13
 5823 033e 6100     		.ascii	"a\000"
 5824 0340 01       		.byte	0x1
 5825 0341 3D02     		.2byte	0x23d
 5826 0343 B3000000 		.4byte	0xb3
 5827 0347 02       		.uleb128 0x2
 5828 0348 91       		.byte	0x91
 5829 0349 76       		.sleb128 -10
 5830 034a 13       		.uleb128 0x13
 5831 034b 6200     		.ascii	"b\000"
 5832 034d 01       		.byte	0x1
 5833 034e 3D02     		.2byte	0x23d
 5834 0350 8F000000 		.4byte	0x8f
 5835 0354 02       		.uleb128 0x2
 5836 0355 91       		.byte	0x91
 5837 0356 75       		.sleb128 -11
 5838 0357 00       		.byte	0
 5839 0358 15       		.uleb128 0x15
 5840 0359 1C050000 		.4byte	.LASF50
 5841 035d 01       		.byte	0x1
 5842 035e 5902     		.2byte	0x259
 5843 0360 C6000000 		.4byte	0xc6
 5844 0364 00000000 		.4byte	.LFB68
 5845 0368 38000000 		.4byte	.LFE68-.LFB68
 5846 036c 01       		.uleb128 0x1
 5847 036d 9C       		.byte	0x9c
 5848 036e 90030000 		.4byte	0x390
 5849 0372 13       		.uleb128 0x13
 5850 0373 41444300 		.ascii	"ADC\000"
 5851 0377 01       		.byte	0x1
 5852 0378 5902     		.2byte	0x259
 5853 037a 68000000 		.4byte	0x68
 5854 037e 02       		.uleb128 0x2
 5855 037f 91       		.byte	0x91
 5856 0380 6C       		.sleb128 -20
 5857 0381 12       		.uleb128 0x12
 5858 0382 544C00   		.ascii	"TL\000"
 5859 0385 01       		.byte	0x1
 5860 0386 5C02     		.2byte	0x25c
 5861 0388 C6000000 		.4byte	0xc6
 5862 038c 02       		.uleb128 0x2
 5863 038d 91       		.byte	0x91
 5864 038e 70       		.sleb128 -16
 5865 038f 00       		.byte	0
 5866 0390 16       		.uleb128 0x16
 5867 0391 7F070000 		.4byte	.LASF73
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 127


 5868 0395 01       		.byte	0x1
 5869 0396 6F02     		.2byte	0x26f
 5870 0398 00000000 		.4byte	.LFB69
 5871 039c 4C030000 		.4byte	.LFE69-.LFB69
 5872 03a0 01       		.uleb128 0x1
 5873 03a1 9C       		.byte	0x9c
 5874 03a2 59040000 		.4byte	0x459
 5875 03a6 10       		.uleb128 0x10
 5876 03a7 FB030000 		.4byte	.LASF51
 5877 03ab 01       		.byte	0x1
 5878 03ac 7102     		.2byte	0x271
 5879 03ae 18020000 		.4byte	0x218
 5880 03b2 02       		.uleb128 0x2
 5881 03b3 91       		.byte	0x91
 5882 03b4 4C       		.sleb128 -52
 5883 03b5 10       		.uleb128 0x10
 5884 03b6 11000000 		.4byte	.LASF52
 5885 03ba 01       		.byte	0x1
 5886 03bb 7902     		.2byte	0x279
 5887 03bd 18020000 		.4byte	0x218
 5888 03c1 02       		.uleb128 0x2
 5889 03c2 91       		.byte	0x91
 5890 03c3 48       		.sleb128 -56
 5891 03c4 10       		.uleb128 0x10
 5892 03c5 CF000000 		.4byte	.LASF53
 5893 03c9 01       		.byte	0x1
 5894 03ca 7D02     		.2byte	0x27d
 5895 03cc 18020000 		.4byte	0x218
 5896 03d0 02       		.uleb128 0x2
 5897 03d1 91       		.byte	0x91
 5898 03d2 44       		.sleb128 -60
 5899 03d3 12       		.uleb128 0x12
 5900 03d4 726F7700 		.ascii	"row\000"
 5901 03d8 01       		.byte	0x1
 5902 03d9 8102     		.2byte	0x281
 5903 03db 68000000 		.4byte	0x68
 5904 03df 02       		.uleb128 0x2
 5905 03e0 91       		.byte	0x91
 5906 03e1 58       		.sleb128 -40
 5907 03e2 12       		.uleb128 0x12
 5908 03e3 636F6C00 		.ascii	"col\000"
 5909 03e7 01       		.byte	0x1
 5910 03e8 8202     		.2byte	0x282
 5911 03ea 68000000 		.4byte	0x68
 5912 03ee 02       		.uleb128 0x2
 5913 03ef 91       		.byte	0x91
 5914 03f0 54       		.sleb128 -44
 5915 03f1 10       		.uleb128 0x10
 5916 03f2 76000000 		.4byte	.LASF54
 5917 03f6 01       		.byte	0x1
 5918 03f7 9002     		.2byte	0x290
 5919 03f9 18020000 		.4byte	0x218
 5920 03fd 02       		.uleb128 0x2
 5921 03fe 91       		.byte	0x91
 5922 03ff 40       		.sleb128 -64
 5923 0400 10       		.uleb128 0x10
 5924 0401 C3020000 		.4byte	.LASF55
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 128


 5925 0405 01       		.byte	0x1
 5926 0406 9102     		.2byte	0x291
 5927 0408 68000000 		.4byte	0x68
 5928 040c 02       		.uleb128 0x2
 5929 040d 91       		.byte	0x91
 5930 040e 50       		.sleb128 -48
 5931 040f 17       		.uleb128 0x17
 5932 0410 54000000 		.4byte	.LBB3
 5933 0414 42000000 		.4byte	.LBE3-.LBB3
 5934 0418 41040000 		.4byte	0x441
 5935 041c 12       		.uleb128 0x12
 5936 041d 6900     		.ascii	"i\000"
 5937 041f 01       		.byte	0x1
 5938 0420 8502     		.2byte	0x285
 5939 0422 68000000 		.4byte	0x68
 5940 0426 02       		.uleb128 0x2
 5941 0427 91       		.byte	0x91
 5942 0428 64       		.sleb128 -28
 5943 0429 11       		.uleb128 0x11
 5944 042a 5A000000 		.4byte	.LBB4
 5945 042e 2E000000 		.4byte	.LBE4-.LBB4
 5946 0432 12       		.uleb128 0x12
 5947 0433 6A00     		.ascii	"j\000"
 5948 0435 01       		.byte	0x1
 5949 0436 8602     		.2byte	0x286
 5950 0438 68000000 		.4byte	0x68
 5951 043c 02       		.uleb128 0x2
 5952 043d 91       		.byte	0x91
 5953 043e 60       		.sleb128 -32
 5954 043f 00       		.byte	0
 5955 0440 00       		.byte	0
 5956 0441 11       		.uleb128 0x11
 5957 0442 44010000 		.4byte	.LBB5
 5958 0446 DE010000 		.4byte	.LBE5-.LBB5
 5959 044a 12       		.uleb128 0x12
 5960 044b 6900     		.ascii	"i\000"
 5961 044d 01       		.byte	0x1
 5962 044e 9D02     		.2byte	0x29d
 5963 0450 68000000 		.4byte	0x68
 5964 0454 02       		.uleb128 0x2
 5965 0455 91       		.byte	0x91
 5966 0456 5C       		.sleb128 -36
 5967 0457 00       		.byte	0
 5968 0458 00       		.byte	0
 5969 0459 0F       		.uleb128 0xf
 5970 045a B1000000 		.4byte	.LASF56
 5971 045e 01       		.byte	0x1
 5972 045f B602     		.2byte	0x2b6
 5973 0461 00000000 		.4byte	.LFB70
 5974 0465 E8000000 		.4byte	.LFE70-.LFB70
 5975 0469 01       		.uleb128 0x1
 5976 046a 9C       		.byte	0x9c
 5977 046b BB040000 		.4byte	0x4bb
 5978 046f 18       		.uleb128 0x18
 5979 0470 11000000 		.4byte	.LASF52
 5980 0474 01       		.byte	0x1
 5981 0475 B602     		.2byte	0x2b6
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 129


 5982 0477 18020000 		.4byte	0x218
 5983 047b 02       		.uleb128 0x2
 5984 047c 91       		.byte	0x91
 5985 047d 64       		.sleb128 -28
 5986 047e 18       		.uleb128 0x18
 5987 047f CF000000 		.4byte	.LASF53
 5988 0483 01       		.byte	0x1
 5989 0484 B602     		.2byte	0x2b6
 5990 0486 18020000 		.4byte	0x218
 5991 048a 02       		.uleb128 0x2
 5992 048b 91       		.byte	0x91
 5993 048c 60       		.sleb128 -32
 5994 048d 10       		.uleb128 0x10
 5995 048e 7E000000 		.4byte	.LASF57
 5996 0492 01       		.byte	0x1
 5997 0493 B702     		.2byte	0x2b7
 5998 0495 68000000 		.4byte	0x68
 5999 0499 02       		.uleb128 0x2
 6000 049a 91       		.byte	0x91
 6001 049b 74       		.sleb128 -12
 6002 049c 10       		.uleb128 0x10
 6003 049d BF000000 		.4byte	.LASF58
 6004 04a1 01       		.byte	0x1
 6005 04a2 B802     		.2byte	0x2b8
 6006 04a4 68000000 		.4byte	0x68
 6007 04a8 02       		.uleb128 0x2
 6008 04a9 91       		.byte	0x91
 6009 04aa 70       		.sleb128 -16
 6010 04ab 10       		.uleb128 0x10
 6011 04ac 4F050000 		.4byte	.LASF59
 6012 04b0 01       		.byte	0x1
 6013 04b1 B902     		.2byte	0x2b9
 6014 04b3 18020000 		.4byte	0x218
 6015 04b7 02       		.uleb128 0x2
 6016 04b8 91       		.byte	0x91
 6017 04b9 6C       		.sleb128 -20
 6018 04ba 00       		.byte	0
 6019 04bb 14       		.uleb128 0x14
 6020 04bc C3060000 		.4byte	.LASF60
 6021 04c0 01       		.byte	0x1
 6022 04c1 CB02     		.2byte	0x2cb
 6023 04c3 18020000 		.4byte	0x218
 6024 04c7 00000000 		.4byte	.LFB71
 6025 04cb DE000000 		.4byte	.LFE71-.LFB71
 6026 04cf 01       		.uleb128 0x1
 6027 04d0 9C       		.byte	0x9c
 6028 04d1 34050000 		.4byte	0x534
 6029 04d5 18       		.uleb128 0x18
 6030 04d6 78050000 		.4byte	.LASF61
 6031 04da 01       		.byte	0x1
 6032 04db CB02     		.2byte	0x2cb
 6033 04dd 34050000 		.4byte	0x534
 6034 04e1 02       		.uleb128 0x2
 6035 04e2 91       		.byte	0x91
 6036 04e3 4C       		.sleb128 -52
 6037 04e4 13       		.uleb128 0x13
 6038 04e5 4D617000 		.ascii	"Map\000"
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 130


 6039 04e9 01       		.byte	0x1
 6040 04ea CB02     		.2byte	0x2cb
 6041 04ec E8010000 		.4byte	0x1e8
 6042 04f0 02       		.uleb128 0x2
 6043 04f1 91       		.byte	0x91
 6044 04f2 74       		.sleb128 -12
 6045 04f3 12       		.uleb128 0x12
 6046 04f4 6900     		.ascii	"i\000"
 6047 04f6 01       		.byte	0x1
 6048 04f7 CC02     		.2byte	0x2cc
 6049 04f9 68000000 		.4byte	0x68
 6050 04fd 02       		.uleb128 0x2
 6051 04fe 91       		.byte	0x91
 6052 04ff 5C       		.sleb128 -36
 6053 0500 10       		.uleb128 0x10
 6054 0501 C3010000 		.4byte	.LASF62
 6055 0505 01       		.byte	0x1
 6056 0506 CD02     		.2byte	0x2cd
 6057 0508 68000000 		.4byte	0x68
 6058 050c 02       		.uleb128 0x2
 6059 050d 91       		.byte	0x91
 6060 050e 64       		.sleb128 -28
 6061 050f 12       		.uleb128 0x12
 6062 0510 4E00     		.ascii	"N\000"
 6063 0512 01       		.byte	0x1
 6064 0513 CE02     		.2byte	0x2ce
 6065 0515 18020000 		.4byte	0x218
 6066 0519 02       		.uleb128 0x2
 6067 051a 91       		.byte	0x91
 6068 051b 54       		.sleb128 -44
 6069 051c 11       		.uleb128 0x11
 6070 051d 1C000000 		.4byte	.LBB6
 6071 0521 A2000000 		.4byte	.LBE6-.LBB6
 6072 0525 12       		.uleb128 0x12
 6073 0526 6900     		.ascii	"i\000"
 6074 0528 01       		.byte	0x1
 6075 0529 CF02     		.2byte	0x2cf
 6076 052b 68000000 		.4byte	0x68
 6077 052f 02       		.uleb128 0x2
 6078 0530 91       		.byte	0x91
 6079 0531 60       		.sleb128 -32
 6080 0532 00       		.byte	0
 6081 0533 00       		.byte	0
 6082 0534 19       		.uleb128 0x19
 6083 0535 04       		.byte	0x4
 6084 0536 18020000 		.4byte	0x218
 6085 053a 1A       		.uleb128 0x1a
 6086 053b DE020000 		.4byte	.LASF63
 6087 053f 01       		.byte	0x1
 6088 0540 DC02     		.2byte	0x2dc
 6089 0542 00000000 		.4byte	.LFB72
 6090 0546 70010000 		.4byte	.LFE72-.LFB72
 6091 054a 01       		.uleb128 0x1
 6092 054b 9C       		.byte	0x9c
 6093 054c DE050000 		.4byte	0x5de
 6094 0550 13       		.uleb128 0x13
 6095 0551 76616C00 		.ascii	"val\000"
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 131


 6096 0555 01       		.byte	0x1
 6097 0556 DC02     		.2byte	0x2dc
 6098 0558 18020000 		.4byte	0x218
 6099 055c 03       		.uleb128 0x3
 6100 055d 91       		.byte	0x91
 6101 055e AC7F     		.sleb128 -84
 6102 0560 10       		.uleb128 0x10
 6103 0561 DE020000 		.4byte	.LASF63
 6104 0565 01       		.byte	0x1
 6105 0566 DD02     		.2byte	0x2dd
 6106 0568 58020000 		.4byte	0x258
 6107 056c 02       		.uleb128 0x2
 6108 056d 91       		.byte	0x91
 6109 056e 5C       		.sleb128 -36
 6110 056f 10       		.uleb128 0x10
 6111 0570 3A060000 		.4byte	.LASF64
 6112 0574 01       		.byte	0x1
 6113 0575 DE02     		.2byte	0x2de
 6114 0577 68000000 		.4byte	0x68
 6115 057b 02       		.uleb128 0x2
 6116 057c 91       		.byte	0x91
 6117 057d 6C       		.sleb128 -20
 6118 057e 10       		.uleb128 0x10
 6119 057f 00000000 		.4byte	.LASF65
 6120 0583 01       		.byte	0x1
 6121 0584 E002     		.2byte	0x2e0
 6122 0586 DE050000 		.4byte	0x5de
 6123 058a 03       		.uleb128 0x3
 6124 058b 91       		.byte	0x91
 6125 058c BC7F     		.sleb128 -68
 6126 058e 11       		.uleb128 0x11
 6127 058f 36000000 		.4byte	.LBB7
 6128 0593 24010000 		.4byte	.LBE7-.LBB7
 6129 0597 12       		.uleb128 0x12
 6130 0598 7200     		.ascii	"r\000"
 6131 059a 01       		.byte	0x1
 6132 059b E402     		.2byte	0x2e4
 6133 059d 68000000 		.4byte	0x68
 6134 05a1 02       		.uleb128 0x2
 6135 05a2 91       		.byte	0x91
 6136 05a3 68       		.sleb128 -24
 6137 05a4 17       		.uleb128 0x17
 6138 05a5 7A000000 		.4byte	.LBB8
 6139 05a9 4A000000 		.4byte	.LBE8-.LBB8
 6140 05ad C2050000 		.4byte	0x5c2
 6141 05b1 10       		.uleb128 0x10
 6142 05b2 68030000 		.4byte	.LASF66
 6143 05b6 01       		.byte	0x1
 6144 05b7 E802     		.2byte	0x2e8
 6145 05b9 18020000 		.4byte	0x218
 6146 05bd 03       		.uleb128 0x3
 6147 05be 91       		.byte	0x91
 6148 05bf B87F     		.sleb128 -72
 6149 05c1 00       		.byte	0
 6150 05c2 11       		.uleb128 0x11
 6151 05c3 02010000 		.4byte	.LBB9
 6152 05c7 4A000000 		.4byte	.LBE9-.LBB9
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 132


 6153 05cb 10       		.uleb128 0x10
 6154 05cc 68030000 		.4byte	.LASF66
 6155 05d0 01       		.byte	0x1
 6156 05d1 F202     		.2byte	0x2f2
 6157 05d3 18020000 		.4byte	0x218
 6158 05d7 03       		.uleb128 0x3
 6159 05d8 91       		.byte	0x91
 6160 05d9 B47F     		.sleb128 -76
 6161 05db 00       		.byte	0
 6162 05dc 00       		.byte	0
 6163 05dd 00       		.byte	0
 6164 05de 0A       		.uleb128 0xa
 6165 05df 68000000 		.4byte	0x68
 6166 05e3 F4050000 		.4byte	0x5f4
 6167 05e7 0B       		.uleb128 0xb
 6168 05e8 76000000 		.4byte	0x76
 6169 05ec 03       		.byte	0x3
 6170 05ed 0B       		.uleb128 0xb
 6171 05ee 76000000 		.4byte	0x76
 6172 05f2 01       		.byte	0x1
 6173 05f3 00       		.byte	0
 6174 05f4 15       		.uleb128 0x15
 6175 05f5 32000000 		.4byte	.LASF67
 6176 05f9 01       		.byte	0x1
 6177 05fa FC02     		.2byte	0x2fc
 6178 05fc 68000000 		.4byte	0x68
 6179 0600 00000000 		.4byte	.LFB73
 6180 0604 5C000000 		.4byte	.LFE73-.LFB73
 6181 0608 01       		.uleb128 0x1
 6182 0609 9C       		.byte	0x9c
 6183 060a 2D060000 		.4byte	0x62d
 6184 060e 18       		.uleb128 0x18
 6185 060f A4060000 		.4byte	.LASF68
 6186 0613 01       		.byte	0x1
 6187 0614 FC02     		.2byte	0x2fc
 6188 0616 18020000 		.4byte	0x218
 6189 061a 02       		.uleb128 0x2
 6190 061b 91       		.byte	0x91
 6191 061c 74       		.sleb128 -12
 6192 061d 18       		.uleb128 0x18
 6193 061e 1B020000 		.4byte	.LASF69
 6194 0622 01       		.byte	0x1
 6195 0623 FC02     		.2byte	0x2fc
 6196 0625 18020000 		.4byte	0x218
 6197 0629 02       		.uleb128 0x2
 6198 062a 91       		.byte	0x91
 6199 062b 70       		.sleb128 -16
 6200 062c 00       		.byte	0
 6201 062d 1A       		.uleb128 0x1a
 6202 062e 96010000 		.4byte	.LASF70
 6203 0632 01       		.byte	0x1
 6204 0633 0003     		.2byte	0x300
 6205 0635 00000000 		.4byte	.LFB74
 6206 0639 4E000000 		.4byte	.LFE74-.LFB74
 6207 063d 01       		.uleb128 0x1
 6208 063e 9C       		.byte	0x9c
 6209 063f 77060000 		.4byte	0x677
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 133


 6210 0643 13       		.uleb128 0x13
 6211 0644 7000     		.ascii	"p\000"
 6212 0646 01       		.byte	0x1
 6213 0647 0003     		.2byte	0x300
 6214 0649 18020000 		.4byte	0x218
 6215 064d 02       		.uleb128 0x2
 6216 064e 91       		.byte	0x91
 6217 064f 6C       		.sleb128 -20
 6218 0650 18       		.uleb128 0x18
 6219 0651 78050000 		.4byte	.LASF61
 6220 0655 01       		.byte	0x1
 6221 0656 0003     		.2byte	0x300
 6222 0658 34050000 		.4byte	0x534
 6223 065c 02       		.uleb128 0x2
 6224 065d 91       		.byte	0x91
 6225 065e 68       		.sleb128 -24
 6226 065f 11       		.uleb128 0x11
 6227 0660 0A000000 		.4byte	.LBB10
 6228 0664 30000000 		.4byte	.LBE10-.LBB10
 6229 0668 12       		.uleb128 0x12
 6230 0669 6900     		.ascii	"i\000"
 6231 066b 01       		.byte	0x1
 6232 066c 0203     		.2byte	0x302
 6233 066e 68000000 		.4byte	0x68
 6234 0672 02       		.uleb128 0x2
 6235 0673 91       		.byte	0x91
 6236 0674 74       		.sleb128 -12
 6237 0675 00       		.byte	0
 6238 0676 00       		.byte	0
 6239 0677 1A       		.uleb128 0x1a
 6240 0678 69010000 		.4byte	.LASF71
 6241 067c 01       		.byte	0x1
 6242 067d 0A03     		.2byte	0x30a
 6243 067f 00000000 		.4byte	.LFB75
 6244 0683 84000000 		.4byte	.LFE75-.LFB75
 6245 0687 01       		.uleb128 0x1
 6246 0688 9C       		.byte	0x9c
 6247 0689 CE060000 		.4byte	0x6ce
 6248 068d 13       		.uleb128 0x13
 6249 068e 7000     		.ascii	"p\000"
 6250 0690 01       		.byte	0x1
 6251 0691 0A03     		.2byte	0x30a
 6252 0693 18020000 		.4byte	0x218
 6253 0697 02       		.uleb128 0x2
 6254 0698 91       		.byte	0x91
 6255 0699 6C       		.sleb128 -20
 6256 069a 18       		.uleb128 0x18
 6257 069b 78050000 		.4byte	.LASF61
 6258 069f 01       		.byte	0x1
 6259 06a0 0A03     		.2byte	0x30a
 6260 06a2 34050000 		.4byte	0x534
 6261 06a6 02       		.uleb128 0x2
 6262 06a7 91       		.byte	0x91
 6263 06a8 68       		.sleb128 -24
 6264 06a9 12       		.uleb128 0x12
 6265 06aa 6600     		.ascii	"f\000"
 6266 06ac 01       		.byte	0x1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 134


 6267 06ad 0B03     		.2byte	0x30b
 6268 06af 68000000 		.4byte	0x68
 6269 06b3 02       		.uleb128 0x2
 6270 06b4 91       		.byte	0x91
 6271 06b5 74       		.sleb128 -12
 6272 06b6 11       		.uleb128 0x11
 6273 06b7 0E000000 		.4byte	.LBB11
 6274 06bb 56000000 		.4byte	.LBE11-.LBB11
 6275 06bf 12       		.uleb128 0x12
 6276 06c0 6900     		.ascii	"i\000"
 6277 06c2 01       		.byte	0x1
 6278 06c3 0C03     		.2byte	0x30c
 6279 06c5 68000000 		.4byte	0x68
 6280 06c9 02       		.uleb128 0x2
 6281 06ca 91       		.byte	0x91
 6282 06cb 70       		.sleb128 -16
 6283 06cc 00       		.byte	0
 6284 06cd 00       		.byte	0
 6285 06ce 14       		.uleb128 0x14
 6286 06cf 42020000 		.4byte	.LASF72
 6287 06d3 01       		.byte	0x1
 6288 06d4 1803     		.2byte	0x318
 6289 06d6 68000000 		.4byte	0x68
 6290 06da 00000000 		.4byte	.LFB76
 6291 06de 50000000 		.4byte	.LFE76-.LFB76
 6292 06e2 01       		.uleb128 0x1
 6293 06e3 9C       		.byte	0x9c
 6294 06e4 1C070000 		.4byte	0x71c
 6295 06e8 13       		.uleb128 0x13
 6296 06e9 7000     		.ascii	"p\000"
 6297 06eb 01       		.byte	0x1
 6298 06ec 1803     		.2byte	0x318
 6299 06ee 18020000 		.4byte	0x218
 6300 06f2 02       		.uleb128 0x2
 6301 06f3 91       		.byte	0x91
 6302 06f4 6C       		.sleb128 -20
 6303 06f5 18       		.uleb128 0x18
 6304 06f6 78050000 		.4byte	.LASF61
 6305 06fa 01       		.byte	0x1
 6306 06fb 1803     		.2byte	0x318
 6307 06fd 34050000 		.4byte	0x534
 6308 0701 02       		.uleb128 0x2
 6309 0702 91       		.byte	0x91
 6310 0703 68       		.sleb128 -24
 6311 0704 11       		.uleb128 0x11
 6312 0705 0A000000 		.4byte	.LBB12
 6313 0709 38000000 		.4byte	.LBE12-.LBB12
 6314 070d 12       		.uleb128 0x12
 6315 070e 6900     		.ascii	"i\000"
 6316 0710 01       		.byte	0x1
 6317 0711 1903     		.2byte	0x319
 6318 0713 68000000 		.4byte	0x68
 6319 0717 02       		.uleb128 0x2
 6320 0718 91       		.byte	0x91
 6321 0719 74       		.sleb128 -12
 6322 071a 00       		.byte	0
 6323 071b 00       		.byte	0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 135


 6324 071c 16       		.uleb128 0x16
 6325 071d E7010000 		.4byte	.LASF74
 6326 0721 01       		.byte	0x1
 6327 0722 2103     		.2byte	0x321
 6328 0724 00000000 		.4byte	.LFB77
 6329 0728 C8010000 		.4byte	.LFE77-.LFB77
 6330 072c 01       		.uleb128 0x1
 6331 072d 9C       		.byte	0x9c
 6332 072e F7070000 		.4byte	0x7f7
 6333 0732 10       		.uleb128 0x10
 6334 0733 FB030000 		.4byte	.LASF51
 6335 0737 01       		.byte	0x1
 6336 0738 4A03     		.2byte	0x34a
 6337 073a 18020000 		.4byte	0x218
 6338 073e 02       		.uleb128 0x2
 6339 073f 91       		.byte	0x91
 6340 0740 58       		.sleb128 -40
 6341 0741 17       		.uleb128 0x17
 6342 0742 0A000000 		.4byte	.LBB13
 6343 0746 28000000 		.4byte	.LBE13-.LBB13
 6344 074a 5C070000 		.4byte	0x75c
 6345 074e 12       		.uleb128 0x12
 6346 074f 6900     		.ascii	"i\000"
 6347 0751 01       		.byte	0x1
 6348 0752 2703     		.2byte	0x327
 6349 0754 68000000 		.4byte	0x68
 6350 0758 02       		.uleb128 0x2
 6351 0759 91       		.byte	0x91
 6352 075a 74       		.sleb128 -12
 6353 075b 00       		.byte	0
 6354 075c 17       		.uleb128 0x17
 6355 075d 32000000 		.4byte	.LBB14
 6356 0761 3A000000 		.4byte	.LBE14-.LBB14
 6357 0765 77070000 		.4byte	0x777
 6358 0769 12       		.uleb128 0x12
 6359 076a 6900     		.ascii	"i\000"
 6360 076c 01       		.byte	0x1
 6361 076d 2F03     		.2byte	0x32f
 6362 076f 68000000 		.4byte	0x68
 6363 0773 02       		.uleb128 0x2
 6364 0774 91       		.byte	0x91
 6365 0775 70       		.sleb128 -16
 6366 0776 00       		.byte	0
 6367 0777 17       		.uleb128 0x17
 6368 0778 6C000000 		.4byte	.LBB15
 6369 077c 42000000 		.4byte	.LBE15-.LBB15
 6370 0780 92070000 		.4byte	0x792
 6371 0784 12       		.uleb128 0x12
 6372 0785 6900     		.ascii	"i\000"
 6373 0787 01       		.byte	0x1
 6374 0788 3503     		.2byte	0x335
 6375 078a 68000000 		.4byte	0x68
 6376 078e 02       		.uleb128 0x2
 6377 078f 91       		.byte	0x91
 6378 0790 6C       		.sleb128 -20
 6379 0791 00       		.byte	0
 6380 0792 17       		.uleb128 0x17
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 136


 6381 0793 AE000000 		.4byte	.LBB16
 6382 0797 56000000 		.4byte	.LBE16-.LBB16
 6383 079b AD070000 		.4byte	0x7ad
 6384 079f 12       		.uleb128 0x12
 6385 07a0 6900     		.ascii	"i\000"
 6386 07a2 01       		.byte	0x1
 6387 07a3 3A03     		.2byte	0x33a
 6388 07a5 68000000 		.4byte	0x68
 6389 07a9 02       		.uleb128 0x2
 6390 07aa 91       		.byte	0x91
 6391 07ab 68       		.sleb128 -24
 6392 07ac 00       		.byte	0
 6393 07ad 17       		.uleb128 0x17
 6394 07ae 04010000 		.4byte	.LBB17
 6395 07b2 54000000 		.4byte	.LBE17-.LBB17
 6396 07b6 DF070000 		.4byte	0x7df
 6397 07ba 12       		.uleb128 0x12
 6398 07bb 6900     		.ascii	"i\000"
 6399 07bd 01       		.byte	0x1
 6400 07be 4303     		.2byte	0x343
 6401 07c0 68000000 		.4byte	0x68
 6402 07c4 02       		.uleb128 0x2
 6403 07c5 91       		.byte	0x91
 6404 07c6 64       		.sleb128 -28
 6405 07c7 11       		.uleb128 0x11
 6406 07c8 0A010000 		.4byte	.LBB18
 6407 07cc 42000000 		.4byte	.LBE18-.LBB18
 6408 07d0 12       		.uleb128 0x12
 6409 07d1 6A00     		.ascii	"j\000"
 6410 07d3 01       		.byte	0x1
 6411 07d4 4403     		.2byte	0x344
 6412 07d6 68000000 		.4byte	0x68
 6413 07da 02       		.uleb128 0x2
 6414 07db 91       		.byte	0x91
 6415 07dc 60       		.sleb128 -32
 6416 07dd 00       		.byte	0
 6417 07de 00       		.byte	0
 6418 07df 11       		.uleb128 0x11
 6419 07e0 60010000 		.4byte	.LBB19
 6420 07e4 1C000000 		.4byte	.LBE19-.LBB19
 6421 07e8 12       		.uleb128 0x12
 6422 07e9 6900     		.ascii	"i\000"
 6423 07eb 01       		.byte	0x1
 6424 07ec 4E03     		.2byte	0x34e
 6425 07ee 68000000 		.4byte	0x68
 6426 07f2 02       		.uleb128 0x2
 6427 07f3 91       		.byte	0x91
 6428 07f4 5C       		.sleb128 -36
 6429 07f5 00       		.byte	0
 6430 07f6 00       		.byte	0
 6431 07f7 16       		.uleb128 0x16
 6432 07f8 8C030000 		.4byte	.LASF75
 6433 07fc 01       		.byte	0x1
 6434 07fd 5703     		.2byte	0x357
 6435 07ff 00000000 		.4byte	.LFB78
 6436 0803 24010000 		.4byte	.LFE78-.LFB78
 6437 0807 01       		.uleb128 0x1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 137


 6438 0808 9C       		.byte	0x9c
 6439 0809 64080000 		.4byte	0x864
 6440 080d 10       		.uleb128 0x10
 6441 080e 84020000 		.4byte	.LASF76
 6442 0812 01       		.byte	0x1
 6443 0813 5903     		.2byte	0x359
 6444 0815 C6000000 		.4byte	0xc6
 6445 0819 02       		.uleb128 0x2
 6446 081a 91       		.byte	0x91
 6447 081b 68       		.sleb128 -24
 6448 081c 11       		.uleb128 0x11
 6449 081d 30000000 		.4byte	.LBB20
 6450 0821 D0000000 		.4byte	.LBE20-.LBB20
 6451 0825 12       		.uleb128 0x12
 6452 0826 6900     		.ascii	"i\000"
 6453 0828 01       		.byte	0x1
 6454 0829 5E03     		.2byte	0x35e
 6455 082b 68000000 		.4byte	0x68
 6456 082f 02       		.uleb128 0x2
 6457 0830 91       		.byte	0x91
 6458 0831 64       		.sleb128 -28
 6459 0832 11       		.uleb128 0x11
 6460 0833 36000000 		.4byte	.LBB21
 6461 0837 BE000000 		.4byte	.LBE21-.LBB21
 6462 083b 12       		.uleb128 0x12
 6463 083c 6A00     		.ascii	"j\000"
 6464 083e 01       		.byte	0x1
 6465 083f 5F03     		.2byte	0x35f
 6466 0841 68000000 		.4byte	0x68
 6467 0845 02       		.uleb128 0x2
 6468 0846 91       		.byte	0x91
 6469 0847 60       		.sleb128 -32
 6470 0848 11       		.uleb128 0x11
 6471 0849 56000000 		.4byte	.LBB22
 6472 084d 92000000 		.4byte	.LBE22-.LBB22
 6473 0851 10       		.uleb128 0x10
 6474 0852 3C050000 		.4byte	.LASF77
 6475 0856 01       		.byte	0x1
 6476 0857 6303     		.2byte	0x363
 6477 0859 C6000000 		.4byte	0xc6
 6478 085d 02       		.uleb128 0x2
 6479 085e 91       		.byte	0x91
 6480 085f 58       		.sleb128 -40
 6481 0860 00       		.byte	0
 6482 0861 00       		.byte	0
 6483 0862 00       		.byte	0
 6484 0863 00       		.byte	0
 6485 0864 1B       		.uleb128 0x1b
 6486 0865 2C030000 		.4byte	.LASF78
 6487 0869 01       		.byte	0x1
 6488 086a 7003     		.2byte	0x370
 6489 086c 68000000 		.4byte	0x68
 6490 0870 00000000 		.4byte	.LFB79
 6491 0874 60000000 		.4byte	.LFE79-.LFB79
 6492 0878 01       		.uleb128 0x1
 6493 0879 9C       		.byte	0x9c
 6494 087a BC080000 		.4byte	0x8bc
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 138


 6495 087e 10       		.uleb128 0x10
 6496 087f 13020000 		.4byte	.LASF79
 6497 0883 01       		.byte	0x1
 6498 0884 7203     		.2byte	0x372
 6499 0886 68000000 		.4byte	0x68
 6500 088a 02       		.uleb128 0x2
 6501 088b 91       		.byte	0x91
 6502 088c 74       		.sleb128 -12
 6503 088d 11       		.uleb128 0x11
 6504 088e 0A000000 		.4byte	.LBB23
 6505 0892 44000000 		.4byte	.LBE23-.LBB23
 6506 0896 12       		.uleb128 0x12
 6507 0897 6900     		.ascii	"i\000"
 6508 0899 01       		.byte	0x1
 6509 089a 7403     		.2byte	0x374
 6510 089c 68000000 		.4byte	0x68
 6511 08a0 02       		.uleb128 0x2
 6512 08a1 91       		.byte	0x91
 6513 08a2 70       		.sleb128 -16
 6514 08a3 11       		.uleb128 0x11
 6515 08a4 10000000 		.4byte	.LBB24
 6516 08a8 32000000 		.4byte	.LBE24-.LBB24
 6517 08ac 12       		.uleb128 0x12
 6518 08ad 6A00     		.ascii	"j\000"
 6519 08af 01       		.byte	0x1
 6520 08b0 7503     		.2byte	0x375
 6521 08b2 68000000 		.4byte	0x68
 6522 08b6 02       		.uleb128 0x2
 6523 08b7 91       		.byte	0x91
 6524 08b8 6C       		.sleb128 -20
 6525 08b9 00       		.byte	0
 6526 08ba 00       		.byte	0
 6527 08bb 00       		.byte	0
 6528 08bc 14       		.uleb128 0x14
 6529 08bd 3A010000 		.4byte	.LASF80
 6530 08c1 01       		.byte	0x1
 6531 08c2 8003     		.2byte	0x380
 6532 08c4 68000000 		.4byte	0x68
 6533 08c8 00000000 		.4byte	.LFB80
 6534 08cc 9C000000 		.4byte	.LFE80-.LFB80
 6535 08d0 01       		.uleb128 0x1
 6536 08d1 9C       		.byte	0x9c
 6537 08d2 E4080000 		.4byte	0x8e4
 6538 08d6 13       		.uleb128 0x13
 6539 08d7 6900     		.ascii	"i\000"
 6540 08d9 01       		.byte	0x1
 6541 08da 8003     		.2byte	0x380
 6542 08dc 68000000 		.4byte	0x68
 6543 08e0 02       		.uleb128 0x2
 6544 08e1 91       		.byte	0x91
 6545 08e2 74       		.sleb128 -12
 6546 08e3 00       		.byte	0
 6547 08e4 0F       		.uleb128 0xf
 6548 08e5 74020000 		.4byte	.LASF81
 6549 08e9 01       		.byte	0x1
 6550 08ea 9103     		.2byte	0x391
 6551 08ec 00000000 		.4byte	.LFB81
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 139


 6552 08f0 94010000 		.4byte	.LFE81-.LFB81
 6553 08f4 01       		.uleb128 0x1
 6554 08f5 9C       		.byte	0x9c
 6555 08f6 23090000 		.4byte	0x923
 6556 08fa 18       		.uleb128 0x18
 6557 08fb 00000000 		.4byte	.LASF65
 6558 08ff 01       		.byte	0x1
 6559 0900 9103     		.2byte	0x391
 6560 0902 68000000 		.4byte	0x68
 6561 0906 02       		.uleb128 0x2
 6562 0907 91       		.byte	0x91
 6563 0908 6C       		.sleb128 -20
 6564 0909 11       		.uleb128 0x11
 6565 090a C8000000 		.4byte	.LBB25
 6566 090e 78000000 		.4byte	.LBE25-.LBB25
 6567 0912 10       		.uleb128 0x10
 6568 0913 2D040000 		.4byte	.LASF82
 6569 0917 01       		.byte	0x1
 6570 0918 C003     		.2byte	0x3c0
 6571 091a 68000000 		.4byte	0x68
 6572 091e 02       		.uleb128 0x2
 6573 091f 91       		.byte	0x91
 6574 0920 74       		.sleb128 -12
 6575 0921 00       		.byte	0
 6576 0922 00       		.byte	0
 6577 0923 15       		.uleb128 0x15
 6578 0924 F3030000 		.4byte	.LASF83
 6579 0928 01       		.byte	0x1
 6580 0929 DD03     		.2byte	0x3dd
 6581 092b 68000000 		.4byte	0x68
 6582 092f 00000000 		.4byte	.LFB82
 6583 0933 A8000000 		.4byte	.LFE82-.LFB82
 6584 0937 01       		.uleb128 0x1
 6585 0938 9C       		.byte	0x9c
 6586 0939 88090000 		.4byte	0x988
 6587 093d 18       		.uleb128 0x18
 6588 093e 21000000 		.4byte	.LASF84
 6589 0942 01       		.byte	0x1
 6590 0943 DD03     		.2byte	0x3dd
 6591 0945 B3000000 		.4byte	0xb3
 6592 0949 02       		.uleb128 0x2
 6593 094a 91       		.byte	0x91
 6594 094b 5E       		.sleb128 -34
 6595 094c 10       		.uleb128 0x10
 6596 094d 17000000 		.4byte	.LASF85
 6597 0951 01       		.byte	0x1
 6598 0952 E003     		.2byte	0x3e0
 6599 0954 C6000000 		.4byte	0xc6
 6600 0958 02       		.uleb128 0x2
 6601 0959 91       		.byte	0x91
 6602 095a 68       		.sleb128 -24
 6603 095b 10       		.uleb128 0x10
 6604 095c 1C000000 		.4byte	.LASF86
 6605 0960 01       		.byte	0x1
 6606 0961 E303     		.2byte	0x3e3
 6607 0963 68000000 		.4byte	0x68
 6608 0967 02       		.uleb128 0x2
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 140


 6609 0968 91       		.byte	0x91
 6610 0969 64       		.sleb128 -28
 6611 096a 12       		.uleb128 0x12
 6612 096b 6D6F6400 		.ascii	"mod\000"
 6613 096f 01       		.byte	0x1
 6614 0970 E603     		.2byte	0x3e6
 6615 0972 68000000 		.4byte	0x68
 6616 0976 02       		.uleb128 0x2
 6617 0977 91       		.byte	0x91
 6618 0978 60       		.sleb128 -32
 6619 0979 12       		.uleb128 0x12
 6620 097a 726600   		.ascii	"rf\000"
 6621 097d 01       		.byte	0x1
 6622 097e E903     		.2byte	0x3e9
 6623 0980 68000000 		.4byte	0x68
 6624 0984 02       		.uleb128 0x2
 6625 0985 91       		.byte	0x91
 6626 0986 74       		.sleb128 -12
 6627 0987 00       		.byte	0
 6628 0988 1C       		.uleb128 0x1c
 6629 0989 48030000 		.4byte	.LASF87
 6630 098d 01       		.byte	0x1
 6631 098e F403     		.2byte	0x3f4
 6632 0990 00000000 		.4byte	.LFB83
 6633 0994 48000000 		.4byte	.LFE83-.LFB83
 6634 0998 01       		.uleb128 0x1
 6635 0999 9C       		.byte	0x9c
 6636 099a 1C       		.uleb128 0x1c
 6637 099b 99060000 		.4byte	.LASF88
 6638 099f 01       		.byte	0x1
 6639 09a0 0704     		.2byte	0x407
 6640 09a2 00000000 		.4byte	.LFB84
 6641 09a6 24020000 		.4byte	.LFE84-.LFB84
 6642 09aa 01       		.uleb128 0x1
 6643 09ab 9C       		.byte	0x9c
 6644 09ac 1D       		.uleb128 0x1d
 6645 09ad 9F060000 		.4byte	.LASF89
 6646 09b1 01       		.byte	0x1
 6647 09b2 6404     		.2byte	0x464
 6648 09b4 68000000 		.4byte	0x68
 6649 09b8 00000000 		.4byte	.LFB85
 6650 09bc C4020000 		.4byte	.LFE85-.LFB85
 6651 09c0 01       		.uleb128 0x1
 6652 09c1 9C       		.byte	0x9c
 6653 09c2 1F0A0000 		.4byte	0xa1f
 6654 09c6 12       		.uleb128 0x12
 6655 09c7 6D326900 		.ascii	"m2i\000"
 6656 09cb 01       		.byte	0x1
 6657 09cc 8204     		.2byte	0x482
 6658 09ce 68000000 		.4byte	0x68
 6659 09d2 02       		.uleb128 0x2
 6660 09d3 91       		.byte	0x91
 6661 09d4 74       		.sleb128 -12
 6662 09d5 17       		.uleb128 0x17
 6663 09d6 54000000 		.4byte	.LBB26
 6664 09da 2A000000 		.4byte	.LBE26-.LBB26
 6665 09de F0090000 		.4byte	0x9f0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 141


 6666 09e2 12       		.uleb128 0x12
 6667 09e3 6900     		.ascii	"i\000"
 6668 09e5 01       		.byte	0x1
 6669 09e6 8504     		.2byte	0x485
 6670 09e8 68000000 		.4byte	0x68
 6671 09ec 02       		.uleb128 0x2
 6672 09ed 91       		.byte	0x91
 6673 09ee 70       		.sleb128 -16
 6674 09ef 00       		.byte	0
 6675 09f0 11       		.uleb128 0x11
 6676 09f1 7E000000 		.4byte	.LBB27
 6677 09f5 54000000 		.4byte	.LBE27-.LBB27
 6678 09f9 12       		.uleb128 0x12
 6679 09fa 6900     		.ascii	"i\000"
 6680 09fc 01       		.byte	0x1
 6681 09fd 8B04     		.2byte	0x48b
 6682 09ff 68000000 		.4byte	0x68
 6683 0a03 02       		.uleb128 0x2
 6684 0a04 91       		.byte	0x91
 6685 0a05 6C       		.sleb128 -20
 6686 0a06 11       		.uleb128 0x11
 6687 0a07 84000000 		.4byte	.LBB28
 6688 0a0b 42000000 		.4byte	.LBE28-.LBB28
 6689 0a0f 12       		.uleb128 0x12
 6690 0a10 6A00     		.ascii	"j\000"
 6691 0a12 01       		.byte	0x1
 6692 0a13 8C04     		.2byte	0x48c
 6693 0a15 68000000 		.4byte	0x68
 6694 0a19 02       		.uleb128 0x2
 6695 0a1a 91       		.byte	0x91
 6696 0a1b 68       		.sleb128 -24
 6697 0a1c 00       		.byte	0
 6698 0a1d 00       		.byte	0
 6699 0a1e 00       		.byte	0
 6700 0a1f 1E       		.uleb128 0x1e
 6701 0a20 0F050000 		.4byte	.LASF90
 6702 0a24 06       		.byte	0x6
 6703 0a25 9606     		.2byte	0x696
 6704 0a27 2B0A0000 		.4byte	0xa2b
 6705 0a2b 1F       		.uleb128 0x1f
 6706 0a2c 84000000 		.4byte	0x84
 6707 0a30 20       		.uleb128 0x20
 6708 0a31 6D617000 		.ascii	"map\000"
 6709 0a35 07       		.byte	0x7
 6710 0a36 02       		.byte	0x2
 6711 0a37 D2010000 		.4byte	0x1d2
 6712 0a3b 05       		.uleb128 0x5
 6713 0a3c 03       		.byte	0x3
 6714 0a3d 00000000 		.4byte	map
 6715 0a41 0A       		.uleb128 0xa
 6716 0a42 68000000 		.4byte	0x68
 6717 0a46 570A0000 		.4byte	0xa57
 6718 0a4a 0B       		.uleb128 0xb
 6719 0a4b 76000000 		.4byte	0x76
 6720 0a4f 05       		.byte	0x5
 6721 0a50 0B       		.uleb128 0xb
 6722 0a51 76000000 		.4byte	0x76
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 142


 6723 0a55 01       		.byte	0x1
 6724 0a56 00       		.byte	0
 6725 0a57 21       		.uleb128 0x21
 6726 0a58 82030000 		.4byte	.LASF91
 6727 0a5c 07       		.byte	0x7
 6728 0a5d 14       		.byte	0x14
 6729 0a5e 410A0000 		.4byte	0xa41
 6730 0a62 05       		.uleb128 0x5
 6731 0a63 03       		.byte	0x3
 6732 0a64 00000000 		.4byte	food_list
 6733 0a68 20       		.uleb128 0x20
 6734 0a69 747300   		.ascii	"ts\000"
 6735 0a6c 05       		.byte	0x5
 6736 0a6d 10       		.byte	0x10
 6737 0a6e 8F000000 		.4byte	0x8f
 6738 0a72 05       		.uleb128 0x5
 6739 0a73 03       		.byte	0x3
 6740 0a74 00000000 		.4byte	ts
 6741 0a78 21       		.uleb128 0x21
 6742 0a79 23060000 		.4byte	.LASF92
 6743 0a7d 05       		.byte	0x5
 6744 0a7e 11       		.byte	0x11
 6745 0a7f 9B000000 		.4byte	0x9b
 6746 0a83 05       		.uleb128 0x5
 6747 0a84 03       		.byte	0x3
 6748 0a85 00000000 		.4byte	ts_enc
 6749 0a89 21       		.uleb128 0x21
 6750 0a8a 29050000 		.4byte	.LASF93
 6751 0a8e 05       		.byte	0x5
 6752 0a8f 12       		.byte	0x12
 6753 0a90 9B000000 		.4byte	0x9b
 6754 0a94 05       		.uleb128 0x5
 6755 0a95 03       		.byte	0x3
 6756 0a96 00000000 		.4byte	ts_update
 6757 0a9a 21       		.uleb128 0x21
 6758 0a9b 39020000 		.4byte	.LASF94
 6759 0a9f 05       		.byte	0x5
 6760 0aa0 13       		.byte	0x13
 6761 0aa1 9B000000 		.4byte	0x9b
 6762 0aa5 05       		.uleb128 0x5
 6763 0aa6 03       		.byte	0x3
 6764 0aa7 00000000 		.4byte	ts_speed
 6765 0aab 21       		.uleb128 0x21
 6766 0aac A3020000 		.4byte	.LASF95
 6767 0ab0 05       		.byte	0x5
 6768 0ab1 14       		.byte	0x14
 6769 0ab2 9B000000 		.4byte	0x9b
 6770 0ab6 05       		.uleb128 0x5
 6771 0ab7 03       		.byte	0x3
 6772 0ab8 00000000 		.4byte	ts_display
 6773 0abc 21       		.uleb128 0x21
 6774 0abd 07020000 		.4byte	.LASF96
 6775 0ac1 05       		.byte	0x5
 6776 0ac2 16       		.byte	0x16
 6777 0ac3 8F000000 		.4byte	0x8f
 6778 0ac7 05       		.uleb128 0x5
 6779 0ac8 03       		.byte	0x3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 143


 6780 0ac9 00000000 		.4byte	flag_ts_enc
 6781 0acd 21       		.uleb128 0x21
 6782 0ace F8010000 		.4byte	.LASF97
 6783 0ad2 05       		.byte	0x5
 6784 0ad3 17       		.byte	0x17
 6785 0ad4 8F000000 		.4byte	0x8f
 6786 0ad8 05       		.uleb128 0x5
 6787 0ad9 03       		.byte	0x3
 6788 0ada 00000000 		.4byte	flag_ts_update
 6789 0ade 21       		.uleb128 0x21
 6790 0adf 10040000 		.4byte	.LASF98
 6791 0ae3 05       		.byte	0x5
 6792 0ae4 18       		.byte	0x18
 6793 0ae5 8F000000 		.4byte	0x8f
 6794 0ae9 05       		.uleb128 0x5
 6795 0aea 03       		.byte	0x3
 6796 0aeb 00000000 		.4byte	flag_ts_speed
 6797 0aef 21       		.uleb128 0x21
 6798 0af0 2A060000 		.4byte	.LASF99
 6799 0af4 05       		.byte	0x5
 6800 0af5 19       		.byte	0x19
 6801 0af6 8F000000 		.4byte	0x8f
 6802 0afa 05       		.uleb128 0x5
 6803 0afb 03       		.byte	0x3
 6804 0afc 00000000 		.4byte	flag_ts_display
 6805 0b00 21       		.uleb128 0x21
 6806 0b01 EA040000 		.4byte	.LASF100
 6807 0b05 05       		.byte	0x5
 6808 0b06 1C       		.byte	0x1c
 6809 0b07 8F000000 		.4byte	0x8f
 6810 0b0b 05       		.uleb128 0x5
 6811 0b0c 03       		.byte	0x3
 6812 0b0d 00000000 		.4byte	flag_rx
 6813 0b11 21       		.uleb128 0x21
 6814 0b12 B2010000 		.4byte	.LASF101
 6815 0b16 05       		.byte	0x5
 6816 0b17 1D       		.byte	0x1d
 6817 0b18 8F000000 		.4byte	0x8f
 6818 0b1c 05       		.uleb128 0x5
 6819 0b1d 03       		.byte	0x3
 6820 0b1e 00000000 		.4byte	flag_packet
 6821 0b22 21       		.uleb128 0x21
 6822 0b23 5A070000 		.4byte	.LASF102
 6823 0b27 05       		.byte	0x5
 6824 0b28 1E       		.byte	0x1e
 6825 0b29 8F000000 		.4byte	0x8f
 6826 0b2d 05       		.uleb128 0x5
 6827 0b2e 03       		.byte	0x3
 6828 0b2f 00000000 		.4byte	flag_KB_string
 6829 0b33 21       		.uleb128 0x21
 6830 0b34 1E040000 		.4byte	.LASF103
 6831 0b38 05       		.byte	0x5
 6832 0b39 20       		.byte	0x20
 6833 0b3a 8F000000 		.4byte	0x8f
 6834 0b3e 05       		.uleb128 0x5
 6835 0b3f 03       		.byte	0x3
 6836 0b40 00000000 		.4byte	dataready_flag
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 144


 6837 0b44 21       		.uleb128 0x21
 6838 0b45 F5000000 		.4byte	.LASF104
 6839 0b49 05       		.byte	0x5
 6840 0b4a 22       		.byte	0x22
 6841 0b4b 8F000000 		.4byte	0x8f
 6842 0b4f 05       		.uleb128 0x5
 6843 0b50 03       		.byte	0x3
 6844 0b51 00000000 		.4byte	flag_rf_transmission_active
 6845 0b55 0A       		.uleb128 0xa
 6846 0b56 7D000000 		.4byte	0x7d
 6847 0b5a 650B0000 		.4byte	0xb65
 6848 0b5e 0B       		.uleb128 0xb
 6849 0b5f 76000000 		.4byte	0x76
 6850 0b63 3F       		.byte	0x3f
 6851 0b64 00       		.byte	0
 6852 0b65 21       		.uleb128 0x21
 6853 0b66 45060000 		.4byte	.LASF105
 6854 0b6a 05       		.byte	0x5
 6855 0b6b 25       		.byte	0x25
 6856 0b6c 550B0000 		.4byte	0xb55
 6857 0b70 05       		.uleb128 0x5
 6858 0b71 03       		.byte	0x3
 6859 0b72 00000000 		.4byte	displaystring
 6860 0b76 21       		.uleb128 0x21
 6861 0b77 06060000 		.4byte	.LASF106
 6862 0b7b 05       		.byte	0x5
 6863 0b7c 26       		.byte	0x26
 6864 0b7d 550B0000 		.4byte	0xb55
 6865 0b81 05       		.uleb128 0x5
 6866 0b82 03       		.byte	0x3
 6867 0b83 00000000 		.4byte	line
 6868 0b87 21       		.uleb128 0x21
 6869 0b88 DA050000 		.4byte	.LASF107
 6870 0b8c 05       		.byte	0x5
 6871 0b8d 26       		.byte	0x26
 6872 0b8e 550B0000 		.4byte	0xb55
 6873 0b92 05       		.uleb128 0x5
 6874 0b93 03       		.byte	0x3
 6875 0b94 00000000 		.4byte	entry
 6876 0b98 0A       		.uleb128 0xa
 6877 0b99 8F000000 		.4byte	0x8f
 6878 0b9d A80B0000 		.4byte	0xba8
 6879 0ba1 0B       		.uleb128 0xb
 6880 0ba2 76000000 		.4byte	0x76
 6881 0ba6 3F       		.byte	0x3f
 6882 0ba7 00       		.byte	0
 6883 0ba8 21       		.uleb128 0x21
 6884 0ba9 86010000 		.4byte	.LASF108
 6885 0bad 05       		.byte	0x5
 6886 0bae 27       		.byte	0x27
 6887 0baf 980B0000 		.4byte	0xb98
 6888 0bb3 05       		.uleb128 0x5
 6889 0bb4 03       		.byte	0x3
 6890 0bb5 00000000 		.4byte	usbBuffer
 6891 0bb9 21       		.uleb128 0x21
 6892 0bba 69070000 		.4byte	.LASF109
 6893 0bbe 05       		.byte	0x5
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 145


 6894 0bbf 3C       		.byte	0x3c
 6895 0bc0 D4000000 		.4byte	0xd4
 6896 0bc4 05       		.uleb128 0x5
 6897 0bc5 03       		.byte	0x3
 6898 0bc6 00000000 		.4byte	system_state
 6899 0bca 21       		.uleb128 0x21
 6900 0bcb 24010000 		.4byte	.LASF110
 6901 0bcf 01       		.byte	0x1
 6902 0bd0 9B       		.byte	0x9b
 6903 0bd1 68000000 		.4byte	0x68
 6904 0bd5 05       		.uleb128 0x5
 6905 0bd6 03       		.byte	0x3
 6906 0bd7 00000000 		.4byte	printingFlag
 6907 0bdb 21       		.uleb128 0x21
 6908 0bdc 10060000 		.4byte	.LASF111
 6909 0be0 01       		.byte	0x1
 6910 0be1 A0       		.byte	0xa0
 6911 0be2 68000000 		.4byte	0x68
 6912 0be6 05       		.uleb128 0x5
 6913 0be7 03       		.byte	0x3
 6914 0be8 00000000 		.4byte	timeout
 6915 0bec 21       		.uleb128 0x21
 6916 0bed 58020000 		.4byte	.LASF112
 6917 0bf1 01       		.byte	0x1
 6918 0bf2 A2       		.byte	0xa2
 6919 0bf3 68000000 		.4byte	0x68
 6920 0bf7 05       		.uleb128 0x5
 6921 0bf8 03       		.byte	0x3
 6922 0bf9 00000000 		.4byte	ADC_0
 6923 0bfd 21       		.uleb128 0x21
 6924 0bfe 3D030000 		.4byte	.LASF113
 6925 0c02 01       		.byte	0x1
 6926 0c03 A3       		.byte	0xa3
 6927 0c04 68000000 		.4byte	0x68
 6928 0c08 05       		.uleb128 0x5
 6929 0c09 03       		.byte	0x3
 6930 0c0a 00000000 		.4byte	adc0_count
 6931 0c0e 21       		.uleb128 0x21
 6932 0c0f 5E020000 		.4byte	.LASF114
 6933 0c13 01       		.byte	0x1
 6934 0c14 A4       		.byte	0xa4
 6935 0c15 68000000 		.4byte	0x68
 6936 0c19 05       		.uleb128 0x5
 6937 0c1a 03       		.byte	0x3
 6938 0c1b 00000000 		.4byte	ADC_1
 6939 0c1f 21       		.uleb128 0x21
 6940 0c20 EE060000 		.4byte	.LASF115
 6941 0c24 01       		.byte	0x1
 6942 0c25 A5       		.byte	0xa5
 6943 0c26 68000000 		.4byte	0x68
 6944 0c2a 05       		.uleb128 0x5
 6945 0c2b 03       		.byte	0x3
 6946 0c2c 00000000 		.4byte	adc1_count
 6947 0c30 21       		.uleb128 0x21
 6948 0c31 91020000 		.4byte	.LASF116
 6949 0c35 01       		.byte	0x1
 6950 0c36 A6       		.byte	0xa6
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 146


 6951 0c37 68000000 		.4byte	0x68
 6952 0c3b 05       		.uleb128 0x5
 6953 0c3c 03       		.byte	0x3
 6954 0c3d 00000000 		.4byte	ADC_2
 6955 0c41 21       		.uleb128 0x21
 6956 0c42 51030000 		.4byte	.LASF117
 6957 0c46 01       		.byte	0x1
 6958 0c47 A7       		.byte	0xa7
 6959 0c48 68000000 		.4byte	0x68
 6960 0c4c 05       		.uleb128 0x5
 6961 0c4d 03       		.byte	0x3
 6962 0c4e 00000000 		.4byte	adc2_count
 6963 0c52 21       		.uleb128 0x21
 6964 0c53 97020000 		.4byte	.LASF118
 6965 0c57 01       		.byte	0x1
 6966 0c58 A8       		.byte	0xa8
 6967 0c59 68000000 		.4byte	0x68
 6968 0c5d 05       		.uleb128 0x5
 6969 0c5e 03       		.byte	0x3
 6970 0c5f 00000000 		.4byte	ADC_3
 6971 0c63 21       		.uleb128 0x21
 6972 0c64 6B000000 		.4byte	.LASF119
 6973 0c68 01       		.byte	0x1
 6974 0c69 A9       		.byte	0xa9
 6975 0c6a 68000000 		.4byte	0x68
 6976 0c6e 05       		.uleb128 0x5
 6977 0c6f 03       		.byte	0x3
 6978 0c70 00000000 		.4byte	adc3_count
 6979 0c74 21       		.uleb128 0x21
 6980 0c75 9D020000 		.4byte	.LASF120
 6981 0c79 01       		.byte	0x1
 6982 0c7a AA       		.byte	0xaa
 6983 0c7b 68000000 		.4byte	0x68
 6984 0c7f 05       		.uleb128 0x5
 6985 0c80 03       		.byte	0x3
 6986 0c81 00000000 		.4byte	ADC_4
 6987 0c85 21       		.uleb128 0x21
 6988 0c86 46040000 		.4byte	.LASF121
 6989 0c8a 01       		.byte	0x1
 6990 0c8b AB       		.byte	0xab
 6991 0c8c 68000000 		.4byte	0x68
 6992 0c90 05       		.uleb128 0x5
 6993 0c91 03       		.byte	0x3
 6994 0c92 00000000 		.4byte	adc4_count
 6995 0c96 21       		.uleb128 0x21
 6996 0c97 6E020000 		.4byte	.LASF122
 6997 0c9b 01       		.byte	0x1
 6998 0c9c AC       		.byte	0xac
 6999 0c9d 68000000 		.4byte	0x68
 7000 0ca1 05       		.uleb128 0x5
 7001 0ca2 03       		.byte	0x3
 7002 0ca3 00000000 		.4byte	ADC_5
 7003 0ca7 21       		.uleb128 0x21
 7004 0ca8 DE030000 		.4byte	.LASF123
 7005 0cac 01       		.byte	0x1
 7006 0cad AD       		.byte	0xad
 7007 0cae 68000000 		.4byte	0x68
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 147


 7008 0cb2 05       		.uleb128 0x5
 7009 0cb3 03       		.byte	0x3
 7010 0cb4 00000000 		.4byte	adc5_count
 7011 0cb8 21       		.uleb128 0x21
 7012 0cb9 D3060000 		.4byte	.LASF124
 7013 0cbd 01       		.byte	0x1
 7014 0cbe B1       		.byte	0xb1
 7015 0cbf 68000000 		.4byte	0x68
 7016 0cc3 05       		.uleb128 0x5
 7017 0cc4 03       		.byte	0x3
 7018 0cc5 00000000 		.4byte	has_received
 7019 0cc9 21       		.uleb128 0x21
 7020 0cca 7E050000 		.4byte	.LASF125
 7021 0cce 01       		.byte	0x1
 7022 0ccf B2       		.byte	0xb2
 7023 0cd0 68000000 		.4byte	0x68
 7024 0cd4 05       		.uleb128 0x5
 7025 0cd5 03       		.byte	0x3
 7026 0cd6 00000000 		.4byte	start_receiving
 7027 0cda 21       		.uleb128 0x21
 7028 0cdb D9010000 		.4byte	.LASF126
 7029 0cdf 01       		.byte	0x1
 7030 0ce0 B3       		.byte	0xb3
 7031 0ce1 68000000 		.4byte	0x68
 7032 0ce5 05       		.uleb128 0x5
 7033 0ce6 03       		.byte	0x3
 7034 0ce7 00000000 		.4byte	end_receiving
 7035 0ceb 21       		.uleb128 0x21
 7036 0cec 64020000 		.4byte	.LASF127
 7037 0cf0 01       		.byte	0x1
 7038 0cf1 B4       		.byte	0xb4
 7039 0cf2 68000000 		.4byte	0x68
 7040 0cf6 05       		.uleb128 0x5
 7041 0cf7 03       		.byte	0x3
 7042 0cf8 00000000 		.4byte	analysing
 7043 0cfc 21       		.uleb128 0x21
 7044 0cfd 0A000000 		.4byte	.LASF128
 7045 0d01 01       		.byte	0x1
 7046 0d02 B6       		.byte	0xb6
 7047 0d03 68000000 		.4byte	0x68
 7048 0d07 05       		.uleb128 0x5
 7049 0d08 03       		.byte	0x3
 7050 0d09 00000000 		.4byte	path_i
 7051 0d0d 21       		.uleb128 0x21
 7052 0d0e 4E000000 		.4byte	.LASF129
 7053 0d12 01       		.byte	0x1
 7054 0d13 B7       		.byte	0xb7
 7055 0d14 68000000 		.4byte	0x68
 7056 0d18 05       		.uleb128 0x5
 7057 0d19 03       		.byte	0x3
 7058 0d1a 00000000 		.4byte	commaCount
 7059 0d1e 21       		.uleb128 0x21
 7060 0d1f 33050000 		.4byte	.LASF130
 7061 0d23 01       		.byte	0x1
 7062 0d24 B8       		.byte	0xb8
 7063 0d25 68000000 		.4byte	0x68
 7064 0d29 05       		.uleb128 0x5
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 148


 7065 0d2a 03       		.byte	0x3
 7066 0d2b 00000000 		.4byte	negative
 7067 0d2f 21       		.uleb128 0x21
 7068 0d30 0B060000 		.4byte	.LASF131
 7069 0d34 01       		.byte	0x1
 7070 0d35 B9       		.byte	0xb9
 7071 0d36 68000000 		.4byte	0x68
 7072 0d3a 05       		.uleb128 0x5
 7073 0d3b 03       		.byte	0x3
 7074 0d3c 00000000 		.4byte	test
 7075 0d40 21       		.uleb128 0x21
 7076 0d41 D7030000 		.4byte	.LASF132
 7077 0d45 01       		.byte	0x1
 7078 0d46 BA       		.byte	0xba
 7079 0d47 AD010000 		.4byte	0x1ad
 7080 0d4b 05       		.uleb128 0x5
 7081 0d4c 03       		.byte	0x3
 7082 0d4d 00000000 		.4byte	RFdata
 7083 0d51 21       		.uleb128 0x21
 7084 0d52 4E020000 		.4byte	.LASF133
 7085 0d56 01       		.byte	0x1
 7086 0d57 BB       		.byte	0xbb
 7087 0d58 AD010000 		.4byte	0x1ad
 7088 0d5c 05       		.uleb128 0x5
 7089 0d5d 03       		.byte	0x3
 7090 0d5e 00000000 		.4byte	clearedRF
 7091 0d62 21       		.uleb128 0x21
 7092 0d63 03030000 		.4byte	.LASF134
 7093 0d67 01       		.byte	0x1
 7094 0d68 BD       		.byte	0xbd
 7095 0d69 68000000 		.4byte	0x68
 7096 0d6d 05       		.uleb128 0x5
 7097 0d6e 03       		.byte	0x3
 7098 0d6f 00000000 		.4byte	currentRForient
 7099 0d73 21       		.uleb128 0x21
 7100 0d74 B6030000 		.4byte	.LASF135
 7101 0d78 01       		.byte	0x1
 7102 0d79 BE       		.byte	0xbe
 7103 0d7a 68000000 		.4byte	0x68
 7104 0d7e 05       		.uleb128 0x5
 7105 0d7f 03       		.byte	0x3
 7106 0d80 00000000 		.4byte	turnDone_delay
 7107 0d84 21       		.uleb128 0x21
 7108 0d85 45050000 		.4byte	.LASF136
 7109 0d89 01       		.byte	0x1
 7110 0d8a BF       		.byte	0xbf
 7111 0d8b 68000000 		.4byte	0x68
 7112 0d8f 05       		.uleb128 0x5
 7113 0d90 03       		.byte	0x3
 7114 0d91 00000000 		.4byte	off_track
 7115 0d95 21       		.uleb128 0x21
 7116 0d96 59000000 		.4byte	.LASF137
 7117 0d9a 01       		.byte	0x1
 7118 0d9b C0       		.byte	0xc0
 7119 0d9c 68000000 		.4byte	0x68
 7120 0da0 05       		.uleb128 0x5
 7121 0da1 03       		.byte	0x3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 149


 7122 0da2 00000000 		.4byte	off_track_counter
 7123 0da6 21       		.uleb128 0x21
 7124 0da7 85070000 		.4byte	.LASF138
 7125 0dab 01       		.byte	0x1
 7126 0dac C1       		.byte	0xc1
 7127 0dad 68000000 		.4byte	0x68
 7128 0db1 05       		.uleb128 0x5
 7129 0db2 03       		.byte	0x3
 7130 0db3 00000000 		.4byte	front_detected
 7131 0db7 21       		.uleb128 0x21
 7132 0db8 53060000 		.4byte	.LASF139
 7133 0dbc 01       		.byte	0x1
 7134 0dbd C2       		.byte	0xc2
 7135 0dbe 68000000 		.4byte	0x68
 7136 0dc2 05       		.uleb128 0x5
 7137 0dc3 03       		.byte	0x3
 7138 0dc4 00000000 		.4byte	free_to_detect_front
 7139 0dc8 0A       		.uleb128 0xa
 7140 0dc9 18020000 		.4byte	0x218
 7141 0dcd D90D0000 		.4byte	0xdd9
 7142 0dd1 22       		.uleb128 0x22
 7143 0dd2 76000000 		.4byte	0x76
 7144 0dd6 2B01     		.2byte	0x12b
 7145 0dd8 00       		.byte	0
 7146 0dd9 21       		.uleb128 0x21
 7147 0dda F2040000 		.4byte	.LASF140
 7148 0dde 01       		.byte	0x1
 7149 0ddf DE       		.byte	0xde
 7150 0de0 C80D0000 		.4byte	0xdc8
 7151 0de4 05       		.uleb128 0x5
 7152 0de5 03       		.byte	0x3
 7153 0de6 00000000 		.4byte	PathArray
 7154 0dea 0A       		.uleb128 0xa
 7155 0deb 18020000 		.4byte	0x218
 7156 0def FB0D0000 		.4byte	0xdfb
 7157 0df3 22       		.uleb128 0x22
 7158 0df4 76000000 		.4byte	0x76
 7159 0df8 F301     		.2byte	0x1f3
 7160 0dfa 00       		.byte	0
 7161 0dfb 21       		.uleb128 0x21
 7162 0dfc CF050000 		.4byte	.LASF141
 7163 0e00 01       		.byte	0x1
 7164 0e01 DF       		.byte	0xdf
 7165 0e02 EA0D0000 		.4byte	0xdea
 7166 0e06 05       		.uleb128 0x5
 7167 0e07 03       		.byte	0x3
 7168 0e08 00000000 		.4byte	FinalArray
 7169 0e0c 21       		.uleb128 0x21
 7170 0e0d FA020000 		.4byte	.LASF142
 7171 0e11 01       		.byte	0x1
 7172 0e12 E0       		.byte	0xe0
 7173 0e13 C80D0000 		.4byte	0xdc8
 7174 0e17 05       		.uleb128 0x5
 7175 0e18 03       		.byte	0x3
 7176 0e19 00000000 		.4byte	NewNodes
 7177 0e1d 21       		.uleb128 0x21
 7178 0e1e 1B010000 		.4byte	.LASF143
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 150


 7179 0e22 01       		.byte	0x1
 7180 0e23 E1       		.byte	0xe1
 7181 0e24 C80D0000 		.4byte	0xdc8
 7182 0e28 05       		.uleb128 0x5
 7183 0e29 03       		.byte	0x3
 7184 0e2a 00000000 		.4byte	OldNodes
 7185 0e2e 21       		.uleb128 0x21
 7186 0e2f 65050000 		.4byte	.LASF144
 7187 0e33 01       		.byte	0x1
 7188 0e34 E2       		.byte	0xe2
 7189 0e35 48020000 		.4byte	0x248
 7190 0e39 05       		.uleb128 0x5
 7191 0e3a 03       		.byte	0x3
 7192 0e3b 00000000 		.4byte	neighbours
 7193 0e3f 0A       		.uleb128 0xa
 7194 0e40 7D000000 		.4byte	0x7d
 7195 0e44 550E0000 		.4byte	0xe55
 7196 0e48 0B       		.uleb128 0xb
 7197 0e49 76000000 		.4byte	0x76
 7198 0e4d 0E       		.byte	0xe
 7199 0e4e 0B       		.uleb128 0xb
 7200 0e4f 76000000 		.4byte	0x76
 7201 0e53 12       		.byte	0x12
 7202 0e54 00       		.byte	0
 7203 0e55 21       		.uleb128 0x21
 7204 0e56 96000000 		.4byte	.LASF145
 7205 0e5a 01       		.byte	0x1
 7206 0e5b E4       		.byte	0xe4
 7207 0e5c 3F0E0000 		.4byte	0xe3f
 7208 0e60 05       		.uleb128 0x5
 7209 0e61 03       		.byte	0x3
 7210 0e62 00000000 		.4byte	visited
 7211 0e66 21       		.uleb128 0x21
 7212 0e67 29000000 		.4byte	.LASF146
 7213 0e6b 01       		.byte	0x1
 7214 0e6c E5       		.byte	0xe5
 7215 0e6d 3F0E0000 		.4byte	0xe3f
 7216 0e71 05       		.uleb128 0x5
 7217 0e72 03       		.byte	0x3
 7218 0e73 00000000 		.4byte	newNodes
 7219 0e77 21       		.uleb128 0x21
 7220 0e78 EA000000 		.4byte	.LASF147
 7221 0e7c 01       		.byte	0x1
 7222 0e7d E6       		.byte	0xe6
 7223 0e7e E8010000 		.4byte	0x1e8
 7224 0e82 05       		.uleb128 0x5
 7225 0e83 03       		.byte	0x3
 7226 0e84 00000000 		.4byte	DistBefore
 7227 0e88 21       		.uleb128 0x21
 7228 0e89 8E050000 		.4byte	.LASF148
 7229 0e8d 01       		.byte	0x1
 7230 0e8e E7       		.byte	0xe7
 7231 0e8f E8010000 		.4byte	0x1e8
 7232 0e93 05       		.uleb128 0x5
 7233 0e94 03       		.byte	0x3
 7234 0e95 00000000 		.4byte	TotalDist
 7235 0e99 21       		.uleb128 0x21
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 151


 7236 0e9a 3D040000 		.4byte	.LASF149
 7237 0e9e 01       		.byte	0x1
 7238 0e9f E8       		.byte	0xe8
 7239 0ea0 93020000 		.4byte	0x293
 7240 0ea4 05       		.uleb128 0x5
 7241 0ea5 03       		.byte	0x3
 7242 0ea6 00000000 		.4byte	CameFrom
 7243 0eaa 21       		.uleb128 0x21
 7244 0eab E0050000 		.4byte	.LASF150
 7245 0eaf 01       		.byte	0x1
 7246 0eb0 E9       		.byte	0xe9
 7247 0eb1 68000000 		.4byte	0x68
 7248 0eb5 05       		.uleb128 0x5
 7249 0eb6 03       		.byte	0x3
 7250 0eb7 00000000 		.4byte	tentativeDist
 7251 0ebb 21       		.uleb128 0x21
 7252 0ebc E9030000 		.4byte	.LASF151
 7253 0ec0 01       		.byte	0x1
 7254 0ec1 F6       		.byte	0xf6
 7255 0ec2 7D000000 		.4byte	0x7d
 7256 0ec6 05       		.uleb128 0x5
 7257 0ec7 03       		.byte	0x3
 7258 0ec8 00000000 		.4byte	START_ROW
 7259 0ecc 21       		.uleb128 0x21
 7260 0ecd 33040000 		.4byte	.LASF152
 7261 0ed1 01       		.byte	0x1
 7262 0ed2 F7       		.byte	0xf7
 7263 0ed3 7D000000 		.4byte	0x7d
 7264 0ed7 05       		.uleb128 0x5
 7265 0ed8 03       		.byte	0x3
 7266 0ed9 00000000 		.4byte	START_COL
 7267 0edd 21       		.uleb128 0x21
 7268 0ede AC060000 		.4byte	.LASF153
 7269 0ee2 01       		.byte	0x1
 7270 0ee3 F8       		.byte	0xf8
 7271 0ee4 7D000000 		.4byte	0x7d
 7272 0ee8 05       		.uleb128 0x5
 7273 0ee9 03       		.byte	0x3
 7274 0eea 00000000 		.4byte	PIZZA_ROW
 7275 0eee 21       		.uleb128 0x21
 7276 0eef 11010000 		.4byte	.LASF154
 7277 0ef3 01       		.byte	0x1
 7278 0ef4 F9       		.byte	0xf9
 7279 0ef5 7D000000 		.4byte	0x7d
 7280 0ef9 05       		.uleb128 0x5
 7281 0efa 03       		.byte	0x3
 7282 0efb 00000000 		.4byte	PIZZA_COL
 7283 0eff 21       		.uleb128 0x21
 7284 0f00 59010000 		.4byte	.LASF155
 7285 0f04 01       		.byte	0x1
 7286 0f05 FA       		.byte	0xfa
 7287 0f06 68000000 		.4byte	0x68
 7288 0f0a 05       		.uleb128 0x5
 7289 0f0b 03       		.byte	0x3
 7290 0f0c 00000000 		.4byte	next_free_index
 7291 0f10 21       		.uleb128 0x21
 7292 0f11 5C030000 		.4byte	.LASF156
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 152


 7293 0f15 01       		.byte	0x1
 7294 0f16 FC       		.byte	0xfc
 7295 0f17 3F0E0000 		.4byte	0xe3f
 7296 0f1b 05       		.uleb128 0x5
 7297 0f1c 03       		.byte	0x3
 7298 0f1d 00000000 		.4byte	food_states
 7299 0f21 23       		.uleb128 0x23
 7300 0f22 5C050000 		.4byte	.LASF157
 7301 0f26 01       		.byte	0x1
 7302 0f27 0901     		.2byte	0x109
 7303 0f29 68000000 		.4byte	0x68
 7304 0f2d 05       		.uleb128 0x5
 7305 0f2e 03       		.byte	0x3
 7306 0f2f 00000000 		.4byte	turnDone
 7307 0f33 23       		.uleb128 0x23
 7308 0f34 9E000000 		.4byte	.LASF158
 7309 0f38 01       		.byte	0x1
 7310 0f39 0A01     		.2byte	0x10a
 7311 0f3b 68000000 		.4byte	0x68
 7312 0f3f 05       		.uleb128 0x5
 7313 0f40 03       		.byte	0x3
 7314 0f41 00000000 		.4byte	turnDone_180
 7315 0f45 23       		.uleb128 0x23
 7316 0f46 D5000000 		.4byte	.LASF159
 7317 0f4a 01       		.byte	0x1
 7318 0f4b 0B01     		.2byte	0x10b
 7319 0f4d 68000000 		.4byte	0x68
 7320 0f51 05       		.uleb128 0x5
 7321 0f52 03       		.byte	0x3
 7322 0f53 00000000 		.4byte	orientation
 7323 0f57 23       		.uleb128 0x23
 7324 0f58 13030000 		.4byte	.LASF160
 7325 0f5c 01       		.byte	0x1
 7326 0f5d 0C01     		.2byte	0x10c
 7327 0f5f 68000000 		.4byte	0x68
 7328 0f63 05       		.uleb128 0x5
 7329 0f64 03       		.byte	0x3
 7330 0f65 00000000 		.4byte	path_index
 7331 0f69 23       		.uleb128 0x23
 7332 0f6a E0060000 		.4byte	.LASF161
 7333 0f6e 01       		.byte	0x1
 7334 0f6f 0D01     		.2byte	0x10d
 7335 0f71 68000000 		.4byte	0x68
 7336 0f75 05       		.uleb128 0x5
 7337 0f76 03       		.byte	0x3
 7338 0f77 00000000 		.4byte	duplicateFlag
 7339 0f7b 23       		.uleb128 0x23
 7340 0f7c 18060000 		.4byte	.LASF162
 7341 0f80 01       		.byte	0x1
 7342 0f81 0E01     		.2byte	0x10e
 7343 0f83 68000000 		.4byte	0x68
 7344 0f87 05       		.uleb128 0x5
 7345 0f88 03       		.byte	0x3
 7346 0f89 00000000 		.4byte	almost_180
 7347 0f8d 23       		.uleb128 0x23
 7348 0f8e 22020000 		.4byte	.LASF163
 7349 0f92 01       		.byte	0x1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 153


 7350 0f93 0F01     		.2byte	0x10f
 7351 0f95 18020000 		.4byte	0x218
 7352 0f99 05       		.uleb128 0x5
 7353 0f9a 03       		.byte	0x3
 7354 0f9b 00000000 		.4byte	currentRFpos
 7355 0f9f 23       		.uleb128 0x23
 7356 0fa0 38000000 		.4byte	.LASF164
 7357 0fa4 01       		.byte	0x1
 7358 0fa5 1001     		.2byte	0x110
 7359 0fa7 18020000 		.4byte	0x218
 7360 0fab 05       		.uleb128 0x5
 7361 0fac 03       		.byte	0x3
 7362 0fad 00000000 		.4byte	previous
 7363 0fb1 00       		.byte	0
 7364              		.section	.debug_abbrev,"",%progbits
 7365              	.Ldebug_abbrev0:
 7366 0000 01       		.uleb128 0x1
 7367 0001 11       		.uleb128 0x11
 7368 0002 01       		.byte	0x1
 7369 0003 25       		.uleb128 0x25
 7370 0004 0E       		.uleb128 0xe
 7371 0005 13       		.uleb128 0x13
 7372 0006 0B       		.uleb128 0xb
 7373 0007 03       		.uleb128 0x3
 7374 0008 0E       		.uleb128 0xe
 7375 0009 1B       		.uleb128 0x1b
 7376 000a 0E       		.uleb128 0xe
 7377 000b 55       		.uleb128 0x55
 7378 000c 17       		.uleb128 0x17
 7379 000d 11       		.uleb128 0x11
 7380 000e 01       		.uleb128 0x1
 7381 000f 10       		.uleb128 0x10
 7382 0010 17       		.uleb128 0x17
 7383 0011 00       		.byte	0
 7384 0012 00       		.byte	0
 7385 0013 02       		.uleb128 0x2
 7386 0014 24       		.uleb128 0x24
 7387 0015 00       		.byte	0
 7388 0016 0B       		.uleb128 0xb
 7389 0017 0B       		.uleb128 0xb
 7390 0018 3E       		.uleb128 0x3e
 7391 0019 0B       		.uleb128 0xb
 7392 001a 03       		.uleb128 0x3
 7393 001b 0E       		.uleb128 0xe
 7394 001c 00       		.byte	0
 7395 001d 00       		.byte	0
 7396 001e 03       		.uleb128 0x3
 7397 001f 16       		.uleb128 0x16
 7398 0020 00       		.byte	0
 7399 0021 03       		.uleb128 0x3
 7400 0022 0E       		.uleb128 0xe
 7401 0023 3A       		.uleb128 0x3a
 7402 0024 0B       		.uleb128 0xb
 7403 0025 3B       		.uleb128 0x3b
 7404 0026 0B       		.uleb128 0xb
 7405 0027 49       		.uleb128 0x49
 7406 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 154


 7407 0029 00       		.byte	0
 7408 002a 00       		.byte	0
 7409 002b 04       		.uleb128 0x4
 7410 002c 24       		.uleb128 0x24
 7411 002d 00       		.byte	0
 7412 002e 0B       		.uleb128 0xb
 7413 002f 0B       		.uleb128 0xb
 7414 0030 3E       		.uleb128 0x3e
 7415 0031 0B       		.uleb128 0xb
 7416 0032 03       		.uleb128 0x3
 7417 0033 08       		.uleb128 0x8
 7418 0034 00       		.byte	0
 7419 0035 00       		.byte	0
 7420 0036 05       		.uleb128 0x5
 7421 0037 16       		.uleb128 0x16
 7422 0038 00       		.byte	0
 7423 0039 03       		.uleb128 0x3
 7424 003a 0E       		.uleb128 0xe
 7425 003b 3A       		.uleb128 0x3a
 7426 003c 0B       		.uleb128 0xb
 7427 003d 3B       		.uleb128 0x3b
 7428 003e 05       		.uleb128 0x5
 7429 003f 49       		.uleb128 0x49
 7430 0040 13       		.uleb128 0x13
 7431 0041 00       		.byte	0
 7432 0042 00       		.byte	0
 7433 0043 06       		.uleb128 0x6
 7434 0044 13       		.uleb128 0x13
 7435 0045 01       		.byte	0x1
 7436 0046 03       		.uleb128 0x3
 7437 0047 0E       		.uleb128 0xe
 7438 0048 0B       		.uleb128 0xb
 7439 0049 0B       		.uleb128 0xb
 7440 004a 3A       		.uleb128 0x3a
 7441 004b 0B       		.uleb128 0xb
 7442 004c 3B       		.uleb128 0x3b
 7443 004d 0B       		.uleb128 0xb
 7444 004e 01       		.uleb128 0x1
 7445 004f 13       		.uleb128 0x13
 7446 0050 00       		.byte	0
 7447 0051 00       		.byte	0
 7448 0052 07       		.uleb128 0x7
 7449 0053 0D       		.uleb128 0xd
 7450 0054 00       		.byte	0
 7451 0055 03       		.uleb128 0x3
 7452 0056 0E       		.uleb128 0xe
 7453 0057 3A       		.uleb128 0x3a
 7454 0058 0B       		.uleb128 0xb
 7455 0059 3B       		.uleb128 0x3b
 7456 005a 0B       		.uleb128 0xb
 7457 005b 49       		.uleb128 0x49
 7458 005c 13       		.uleb128 0x13
 7459 005d 38       		.uleb128 0x38
 7460 005e 0B       		.uleb128 0xb
 7461 005f 00       		.byte	0
 7462 0060 00       		.byte	0
 7463 0061 08       		.uleb128 0x8
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 155


 7464 0062 13       		.uleb128 0x13
 7465 0063 01       		.byte	0x1
 7466 0064 03       		.uleb128 0x3
 7467 0065 08       		.uleb128 0x8
 7468 0066 0B       		.uleb128 0xb
 7469 0067 05       		.uleb128 0x5
 7470 0068 3A       		.uleb128 0x3a
 7471 0069 0B       		.uleb128 0xb
 7472 006a 3B       		.uleb128 0x3b
 7473 006b 0B       		.uleb128 0xb
 7474 006c 01       		.uleb128 0x1
 7475 006d 13       		.uleb128 0x13
 7476 006e 00       		.byte	0
 7477 006f 00       		.byte	0
 7478 0070 09       		.uleb128 0x9
 7479 0071 0D       		.uleb128 0xd
 7480 0072 00       		.byte	0
 7481 0073 03       		.uleb128 0x3
 7482 0074 08       		.uleb128 0x8
 7483 0075 3A       		.uleb128 0x3a
 7484 0076 0B       		.uleb128 0xb
 7485 0077 3B       		.uleb128 0x3b
 7486 0078 0B       		.uleb128 0xb
 7487 0079 49       		.uleb128 0x49
 7488 007a 13       		.uleb128 0x13
 7489 007b 38       		.uleb128 0x38
 7490 007c 0B       		.uleb128 0xb
 7491 007d 00       		.byte	0
 7492 007e 00       		.byte	0
 7493 007f 0A       		.uleb128 0xa
 7494 0080 01       		.uleb128 0x1
 7495 0081 01       		.byte	0x1
 7496 0082 49       		.uleb128 0x49
 7497 0083 13       		.uleb128 0x13
 7498 0084 01       		.uleb128 0x1
 7499 0085 13       		.uleb128 0x13
 7500 0086 00       		.byte	0
 7501 0087 00       		.byte	0
 7502 0088 0B       		.uleb128 0xb
 7503 0089 21       		.uleb128 0x21
 7504 008a 00       		.byte	0
 7505 008b 49       		.uleb128 0x49
 7506 008c 13       		.uleb128 0x13
 7507 008d 2F       		.uleb128 0x2f
 7508 008e 0B       		.uleb128 0xb
 7509 008f 00       		.byte	0
 7510 0090 00       		.byte	0
 7511 0091 0C       		.uleb128 0xc
 7512 0092 16       		.uleb128 0x16
 7513 0093 00       		.byte	0
 7514 0094 03       		.uleb128 0x3
 7515 0095 08       		.uleb128 0x8
 7516 0096 3A       		.uleb128 0x3a
 7517 0097 0B       		.uleb128 0xb
 7518 0098 3B       		.uleb128 0x3b
 7519 0099 0B       		.uleb128 0xb
 7520 009a 49       		.uleb128 0x49
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 156


 7521 009b 13       		.uleb128 0x13
 7522 009c 00       		.byte	0
 7523 009d 00       		.byte	0
 7524 009e 0D       		.uleb128 0xd
 7525 009f 13       		.uleb128 0x13
 7526 00a0 01       		.byte	0x1
 7527 00a1 03       		.uleb128 0x3
 7528 00a2 0E       		.uleb128 0xe
 7529 00a3 0B       		.uleb128 0xb
 7530 00a4 05       		.uleb128 0x5
 7531 00a5 3A       		.uleb128 0x3a
 7532 00a6 0B       		.uleb128 0xb
 7533 00a7 3B       		.uleb128 0x3b
 7534 00a8 0B       		.uleb128 0xb
 7535 00a9 01       		.uleb128 0x1
 7536 00aa 13       		.uleb128 0x13
 7537 00ab 00       		.byte	0
 7538 00ac 00       		.byte	0
 7539 00ad 0E       		.uleb128 0xe
 7540 00ae 2E       		.uleb128 0x2e
 7541 00af 00       		.byte	0
 7542 00b0 3F       		.uleb128 0x3f
 7543 00b1 19       		.uleb128 0x19
 7544 00b2 03       		.uleb128 0x3
 7545 00b3 0E       		.uleb128 0xe
 7546 00b4 3A       		.uleb128 0x3a
 7547 00b5 0B       		.uleb128 0xb
 7548 00b6 3B       		.uleb128 0x3b
 7549 00b7 05       		.uleb128 0x5
 7550 00b8 27       		.uleb128 0x27
 7551 00b9 19       		.uleb128 0x19
 7552 00ba 11       		.uleb128 0x11
 7553 00bb 01       		.uleb128 0x1
 7554 00bc 12       		.uleb128 0x12
 7555 00bd 06       		.uleb128 0x6
 7556 00be 40       		.uleb128 0x40
 7557 00bf 18       		.uleb128 0x18
 7558 00c0 9642     		.uleb128 0x2116
 7559 00c2 19       		.uleb128 0x19
 7560 00c3 00       		.byte	0
 7561 00c4 00       		.byte	0
 7562 00c5 0F       		.uleb128 0xf
 7563 00c6 2E       		.uleb128 0x2e
 7564 00c7 01       		.byte	0x1
 7565 00c8 3F       		.uleb128 0x3f
 7566 00c9 19       		.uleb128 0x19
 7567 00ca 03       		.uleb128 0x3
 7568 00cb 0E       		.uleb128 0xe
 7569 00cc 3A       		.uleb128 0x3a
 7570 00cd 0B       		.uleb128 0xb
 7571 00ce 3B       		.uleb128 0x3b
 7572 00cf 05       		.uleb128 0x5
 7573 00d0 27       		.uleb128 0x27
 7574 00d1 19       		.uleb128 0x19
 7575 00d2 11       		.uleb128 0x11
 7576 00d3 01       		.uleb128 0x1
 7577 00d4 12       		.uleb128 0x12
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 157


 7578 00d5 06       		.uleb128 0x6
 7579 00d6 40       		.uleb128 0x40
 7580 00d7 18       		.uleb128 0x18
 7581 00d8 9642     		.uleb128 0x2116
 7582 00da 19       		.uleb128 0x19
 7583 00db 01       		.uleb128 0x1
 7584 00dc 13       		.uleb128 0x13
 7585 00dd 00       		.byte	0
 7586 00de 00       		.byte	0
 7587 00df 10       		.uleb128 0x10
 7588 00e0 34       		.uleb128 0x34
 7589 00e1 00       		.byte	0
 7590 00e2 03       		.uleb128 0x3
 7591 00e3 0E       		.uleb128 0xe
 7592 00e4 3A       		.uleb128 0x3a
 7593 00e5 0B       		.uleb128 0xb
 7594 00e6 3B       		.uleb128 0x3b
 7595 00e7 05       		.uleb128 0x5
 7596 00e8 49       		.uleb128 0x49
 7597 00e9 13       		.uleb128 0x13
 7598 00ea 02       		.uleb128 0x2
 7599 00eb 18       		.uleb128 0x18
 7600 00ec 00       		.byte	0
 7601 00ed 00       		.byte	0
 7602 00ee 11       		.uleb128 0x11
 7603 00ef 0B       		.uleb128 0xb
 7604 00f0 01       		.byte	0x1
 7605 00f1 11       		.uleb128 0x11
 7606 00f2 01       		.uleb128 0x1
 7607 00f3 12       		.uleb128 0x12
 7608 00f4 06       		.uleb128 0x6
 7609 00f5 00       		.byte	0
 7610 00f6 00       		.byte	0
 7611 00f7 12       		.uleb128 0x12
 7612 00f8 34       		.uleb128 0x34
 7613 00f9 00       		.byte	0
 7614 00fa 03       		.uleb128 0x3
 7615 00fb 08       		.uleb128 0x8
 7616 00fc 3A       		.uleb128 0x3a
 7617 00fd 0B       		.uleb128 0xb
 7618 00fe 3B       		.uleb128 0x3b
 7619 00ff 05       		.uleb128 0x5
 7620 0100 49       		.uleb128 0x49
 7621 0101 13       		.uleb128 0x13
 7622 0102 02       		.uleb128 0x2
 7623 0103 18       		.uleb128 0x18
 7624 0104 00       		.byte	0
 7625 0105 00       		.byte	0
 7626 0106 13       		.uleb128 0x13
 7627 0107 05       		.uleb128 0x5
 7628 0108 00       		.byte	0
 7629 0109 03       		.uleb128 0x3
 7630 010a 08       		.uleb128 0x8
 7631 010b 3A       		.uleb128 0x3a
 7632 010c 0B       		.uleb128 0xb
 7633 010d 3B       		.uleb128 0x3b
 7634 010e 05       		.uleb128 0x5
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 158


 7635 010f 49       		.uleb128 0x49
 7636 0110 13       		.uleb128 0x13
 7637 0111 02       		.uleb128 0x2
 7638 0112 18       		.uleb128 0x18
 7639 0113 00       		.byte	0
 7640 0114 00       		.byte	0
 7641 0115 14       		.uleb128 0x14
 7642 0116 2E       		.uleb128 0x2e
 7643 0117 01       		.byte	0x1
 7644 0118 3F       		.uleb128 0x3f
 7645 0119 19       		.uleb128 0x19
 7646 011a 03       		.uleb128 0x3
 7647 011b 0E       		.uleb128 0xe
 7648 011c 3A       		.uleb128 0x3a
 7649 011d 0B       		.uleb128 0xb
 7650 011e 3B       		.uleb128 0x3b
 7651 011f 05       		.uleb128 0x5
 7652 0120 27       		.uleb128 0x27
 7653 0121 19       		.uleb128 0x19
 7654 0122 49       		.uleb128 0x49
 7655 0123 13       		.uleb128 0x13
 7656 0124 11       		.uleb128 0x11
 7657 0125 01       		.uleb128 0x1
 7658 0126 12       		.uleb128 0x12
 7659 0127 06       		.uleb128 0x6
 7660 0128 40       		.uleb128 0x40
 7661 0129 18       		.uleb128 0x18
 7662 012a 9742     		.uleb128 0x2117
 7663 012c 19       		.uleb128 0x19
 7664 012d 01       		.uleb128 0x1
 7665 012e 13       		.uleb128 0x13
 7666 012f 00       		.byte	0
 7667 0130 00       		.byte	0
 7668 0131 15       		.uleb128 0x15
 7669 0132 2E       		.uleb128 0x2e
 7670 0133 01       		.byte	0x1
 7671 0134 3F       		.uleb128 0x3f
 7672 0135 19       		.uleb128 0x19
 7673 0136 03       		.uleb128 0x3
 7674 0137 0E       		.uleb128 0xe
 7675 0138 3A       		.uleb128 0x3a
 7676 0139 0B       		.uleb128 0xb
 7677 013a 3B       		.uleb128 0x3b
 7678 013b 05       		.uleb128 0x5
 7679 013c 27       		.uleb128 0x27
 7680 013d 19       		.uleb128 0x19
 7681 013e 49       		.uleb128 0x49
 7682 013f 13       		.uleb128 0x13
 7683 0140 11       		.uleb128 0x11
 7684 0141 01       		.uleb128 0x1
 7685 0142 12       		.uleb128 0x12
 7686 0143 06       		.uleb128 0x6
 7687 0144 40       		.uleb128 0x40
 7688 0145 18       		.uleb128 0x18
 7689 0146 9642     		.uleb128 0x2116
 7690 0148 19       		.uleb128 0x19
 7691 0149 01       		.uleb128 0x1
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 159


 7692 014a 13       		.uleb128 0x13
 7693 014b 00       		.byte	0
 7694 014c 00       		.byte	0
 7695 014d 16       		.uleb128 0x16
 7696 014e 2E       		.uleb128 0x2e
 7697 014f 01       		.byte	0x1
 7698 0150 3F       		.uleb128 0x3f
 7699 0151 19       		.uleb128 0x19
 7700 0152 03       		.uleb128 0x3
 7701 0153 0E       		.uleb128 0xe
 7702 0154 3A       		.uleb128 0x3a
 7703 0155 0B       		.uleb128 0xb
 7704 0156 3B       		.uleb128 0x3b
 7705 0157 05       		.uleb128 0x5
 7706 0158 11       		.uleb128 0x11
 7707 0159 01       		.uleb128 0x1
 7708 015a 12       		.uleb128 0x12
 7709 015b 06       		.uleb128 0x6
 7710 015c 40       		.uleb128 0x40
 7711 015d 18       		.uleb128 0x18
 7712 015e 9642     		.uleb128 0x2116
 7713 0160 19       		.uleb128 0x19
 7714 0161 01       		.uleb128 0x1
 7715 0162 13       		.uleb128 0x13
 7716 0163 00       		.byte	0
 7717 0164 00       		.byte	0
 7718 0165 17       		.uleb128 0x17
 7719 0166 0B       		.uleb128 0xb
 7720 0167 01       		.byte	0x1
 7721 0168 11       		.uleb128 0x11
 7722 0169 01       		.uleb128 0x1
 7723 016a 12       		.uleb128 0x12
 7724 016b 06       		.uleb128 0x6
 7725 016c 01       		.uleb128 0x1
 7726 016d 13       		.uleb128 0x13
 7727 016e 00       		.byte	0
 7728 016f 00       		.byte	0
 7729 0170 18       		.uleb128 0x18
 7730 0171 05       		.uleb128 0x5
 7731 0172 00       		.byte	0
 7732 0173 03       		.uleb128 0x3
 7733 0174 0E       		.uleb128 0xe
 7734 0175 3A       		.uleb128 0x3a
 7735 0176 0B       		.uleb128 0xb
 7736 0177 3B       		.uleb128 0x3b
 7737 0178 05       		.uleb128 0x5
 7738 0179 49       		.uleb128 0x49
 7739 017a 13       		.uleb128 0x13
 7740 017b 02       		.uleb128 0x2
 7741 017c 18       		.uleb128 0x18
 7742 017d 00       		.byte	0
 7743 017e 00       		.byte	0
 7744 017f 19       		.uleb128 0x19
 7745 0180 0F       		.uleb128 0xf
 7746 0181 00       		.byte	0
 7747 0182 0B       		.uleb128 0xb
 7748 0183 0B       		.uleb128 0xb
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 160


 7749 0184 49       		.uleb128 0x49
 7750 0185 13       		.uleb128 0x13
 7751 0186 00       		.byte	0
 7752 0187 00       		.byte	0
 7753 0188 1A       		.uleb128 0x1a
 7754 0189 2E       		.uleb128 0x2e
 7755 018a 01       		.byte	0x1
 7756 018b 3F       		.uleb128 0x3f
 7757 018c 19       		.uleb128 0x19
 7758 018d 03       		.uleb128 0x3
 7759 018e 0E       		.uleb128 0xe
 7760 018f 3A       		.uleb128 0x3a
 7761 0190 0B       		.uleb128 0xb
 7762 0191 3B       		.uleb128 0x3b
 7763 0192 05       		.uleb128 0x5
 7764 0193 27       		.uleb128 0x27
 7765 0194 19       		.uleb128 0x19
 7766 0195 11       		.uleb128 0x11
 7767 0196 01       		.uleb128 0x1
 7768 0197 12       		.uleb128 0x12
 7769 0198 06       		.uleb128 0x6
 7770 0199 40       		.uleb128 0x40
 7771 019a 18       		.uleb128 0x18
 7772 019b 9742     		.uleb128 0x2117
 7773 019d 19       		.uleb128 0x19
 7774 019e 01       		.uleb128 0x1
 7775 019f 13       		.uleb128 0x13
 7776 01a0 00       		.byte	0
 7777 01a1 00       		.byte	0
 7778 01a2 1B       		.uleb128 0x1b
 7779 01a3 2E       		.uleb128 0x2e
 7780 01a4 01       		.byte	0x1
 7781 01a5 3F       		.uleb128 0x3f
 7782 01a6 19       		.uleb128 0x19
 7783 01a7 03       		.uleb128 0x3
 7784 01a8 0E       		.uleb128 0xe
 7785 01a9 3A       		.uleb128 0x3a
 7786 01aa 0B       		.uleb128 0xb
 7787 01ab 3B       		.uleb128 0x3b
 7788 01ac 05       		.uleb128 0x5
 7789 01ad 49       		.uleb128 0x49
 7790 01ae 13       		.uleb128 0x13
 7791 01af 11       		.uleb128 0x11
 7792 01b0 01       		.uleb128 0x1
 7793 01b1 12       		.uleb128 0x12
 7794 01b2 06       		.uleb128 0x6
 7795 01b3 40       		.uleb128 0x40
 7796 01b4 18       		.uleb128 0x18
 7797 01b5 9742     		.uleb128 0x2117
 7798 01b7 19       		.uleb128 0x19
 7799 01b8 01       		.uleb128 0x1
 7800 01b9 13       		.uleb128 0x13
 7801 01ba 00       		.byte	0
 7802 01bb 00       		.byte	0
 7803 01bc 1C       		.uleb128 0x1c
 7804 01bd 2E       		.uleb128 0x2e
 7805 01be 00       		.byte	0
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 161


 7806 01bf 3F       		.uleb128 0x3f
 7807 01c0 19       		.uleb128 0x19
 7808 01c1 03       		.uleb128 0x3
 7809 01c2 0E       		.uleb128 0xe
 7810 01c3 3A       		.uleb128 0x3a
 7811 01c4 0B       		.uleb128 0xb
 7812 01c5 3B       		.uleb128 0x3b
 7813 01c6 05       		.uleb128 0x5
 7814 01c7 11       		.uleb128 0x11
 7815 01c8 01       		.uleb128 0x1
 7816 01c9 12       		.uleb128 0x12
 7817 01ca 06       		.uleb128 0x6
 7818 01cb 40       		.uleb128 0x40
 7819 01cc 18       		.uleb128 0x18
 7820 01cd 9642     		.uleb128 0x2116
 7821 01cf 19       		.uleb128 0x19
 7822 01d0 00       		.byte	0
 7823 01d1 00       		.byte	0
 7824 01d2 1D       		.uleb128 0x1d
 7825 01d3 2E       		.uleb128 0x2e
 7826 01d4 01       		.byte	0x1
 7827 01d5 3F       		.uleb128 0x3f
 7828 01d6 19       		.uleb128 0x19
 7829 01d7 03       		.uleb128 0x3
 7830 01d8 0E       		.uleb128 0xe
 7831 01d9 3A       		.uleb128 0x3a
 7832 01da 0B       		.uleb128 0xb
 7833 01db 3B       		.uleb128 0x3b
 7834 01dc 05       		.uleb128 0x5
 7835 01dd 49       		.uleb128 0x49
 7836 01de 13       		.uleb128 0x13
 7837 01df 11       		.uleb128 0x11
 7838 01e0 01       		.uleb128 0x1
 7839 01e1 12       		.uleb128 0x12
 7840 01e2 06       		.uleb128 0x6
 7841 01e3 40       		.uleb128 0x40
 7842 01e4 18       		.uleb128 0x18
 7843 01e5 9642     		.uleb128 0x2116
 7844 01e7 19       		.uleb128 0x19
 7845 01e8 01       		.uleb128 0x1
 7846 01e9 13       		.uleb128 0x13
 7847 01ea 00       		.byte	0
 7848 01eb 00       		.byte	0
 7849 01ec 1E       		.uleb128 0x1e
 7850 01ed 34       		.uleb128 0x34
 7851 01ee 00       		.byte	0
 7852 01ef 03       		.uleb128 0x3
 7853 01f0 0E       		.uleb128 0xe
 7854 01f1 3A       		.uleb128 0x3a
 7855 01f2 0B       		.uleb128 0xb
 7856 01f3 3B       		.uleb128 0x3b
 7857 01f4 05       		.uleb128 0x5
 7858 01f5 49       		.uleb128 0x49
 7859 01f6 13       		.uleb128 0x13
 7860 01f7 3F       		.uleb128 0x3f
 7861 01f8 19       		.uleb128 0x19
 7862 01f9 3C       		.uleb128 0x3c
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 162


 7863 01fa 19       		.uleb128 0x19
 7864 01fb 00       		.byte	0
 7865 01fc 00       		.byte	0
 7866 01fd 1F       		.uleb128 0x1f
 7867 01fe 35       		.uleb128 0x35
 7868 01ff 00       		.byte	0
 7869 0200 49       		.uleb128 0x49
 7870 0201 13       		.uleb128 0x13
 7871 0202 00       		.byte	0
 7872 0203 00       		.byte	0
 7873 0204 20       		.uleb128 0x20
 7874 0205 34       		.uleb128 0x34
 7875 0206 00       		.byte	0
 7876 0207 03       		.uleb128 0x3
 7877 0208 08       		.uleb128 0x8
 7878 0209 3A       		.uleb128 0x3a
 7879 020a 0B       		.uleb128 0xb
 7880 020b 3B       		.uleb128 0x3b
 7881 020c 0B       		.uleb128 0xb
 7882 020d 49       		.uleb128 0x49
 7883 020e 13       		.uleb128 0x13
 7884 020f 3F       		.uleb128 0x3f
 7885 0210 19       		.uleb128 0x19
 7886 0211 02       		.uleb128 0x2
 7887 0212 18       		.uleb128 0x18
 7888 0213 00       		.byte	0
 7889 0214 00       		.byte	0
 7890 0215 21       		.uleb128 0x21
 7891 0216 34       		.uleb128 0x34
 7892 0217 00       		.byte	0
 7893 0218 03       		.uleb128 0x3
 7894 0219 0E       		.uleb128 0xe
 7895 021a 3A       		.uleb128 0x3a
 7896 021b 0B       		.uleb128 0xb
 7897 021c 3B       		.uleb128 0x3b
 7898 021d 0B       		.uleb128 0xb
 7899 021e 49       		.uleb128 0x49
 7900 021f 13       		.uleb128 0x13
 7901 0220 3F       		.uleb128 0x3f
 7902 0221 19       		.uleb128 0x19
 7903 0222 02       		.uleb128 0x2
 7904 0223 18       		.uleb128 0x18
 7905 0224 00       		.byte	0
 7906 0225 00       		.byte	0
 7907 0226 22       		.uleb128 0x22
 7908 0227 21       		.uleb128 0x21
 7909 0228 00       		.byte	0
 7910 0229 49       		.uleb128 0x49
 7911 022a 13       		.uleb128 0x13
 7912 022b 2F       		.uleb128 0x2f
 7913 022c 05       		.uleb128 0x5
 7914 022d 00       		.byte	0
 7915 022e 00       		.byte	0
 7916 022f 23       		.uleb128 0x23
 7917 0230 34       		.uleb128 0x34
 7918 0231 00       		.byte	0
 7919 0232 03       		.uleb128 0x3
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 163


 7920 0233 0E       		.uleb128 0xe
 7921 0234 3A       		.uleb128 0x3a
 7922 0235 0B       		.uleb128 0xb
 7923 0236 3B       		.uleb128 0x3b
 7924 0237 05       		.uleb128 0x5
 7925 0238 49       		.uleb128 0x49
 7926 0239 13       		.uleb128 0x13
 7927 023a 3F       		.uleb128 0x3f
 7928 023b 19       		.uleb128 0x19
 7929 023c 02       		.uleb128 0x2
 7930 023d 18       		.uleb128 0x18
 7931 023e 00       		.byte	0
 7932 023f 00       		.byte	0
 7933 0240 00       		.byte	0
 7934              		.section	.debug_aranges,"",%progbits
 7935 0000 CC000000 		.4byte	0xcc
 7936 0004 0200     		.2byte	0x2
 7937 0006 00000000 		.4byte	.Ldebug_info0
 7938 000a 04       		.byte	0x4
 7939 000b 00       		.byte	0
 7940 000c 0000     		.2byte	0
 7941 000e 0000     		.2byte	0
 7942 0010 00000000 		.4byte	.LFB63
 7943 0014 A4040000 		.4byte	.LFE63-.LFB63
 7944 0018 00000000 		.4byte	.LFB64
 7945 001c 5C000000 		.4byte	.LFE64-.LFB64
 7946 0020 00000000 		.4byte	.LFB65
 7947 0024 A0010000 		.4byte	.LFE65-.LFB65
 7948 0028 00000000 		.4byte	.LFB66
 7949 002c 74020000 		.4byte	.LFE66-.LFB66
 7950 0030 00000000 		.4byte	.LFB67
 7951 0034 74000000 		.4byte	.LFE67-.LFB67
 7952 0038 00000000 		.4byte	.LFB68
 7953 003c 38000000 		.4byte	.LFE68-.LFB68
 7954 0040 00000000 		.4byte	.LFB69
 7955 0044 4C030000 		.4byte	.LFE69-.LFB69
 7956 0048 00000000 		.4byte	.LFB70
 7957 004c E8000000 		.4byte	.LFE70-.LFB70
 7958 0050 00000000 		.4byte	.LFB71
 7959 0054 DE000000 		.4byte	.LFE71-.LFB71
 7960 0058 00000000 		.4byte	.LFB72
 7961 005c 70010000 		.4byte	.LFE72-.LFB72
 7962 0060 00000000 		.4byte	.LFB73
 7963 0064 5C000000 		.4byte	.LFE73-.LFB73
 7964 0068 00000000 		.4byte	.LFB74
 7965 006c 4E000000 		.4byte	.LFE74-.LFB74
 7966 0070 00000000 		.4byte	.LFB75
 7967 0074 84000000 		.4byte	.LFE75-.LFB75
 7968 0078 00000000 		.4byte	.LFB76
 7969 007c 50000000 		.4byte	.LFE76-.LFB76
 7970 0080 00000000 		.4byte	.LFB77
 7971 0084 C8010000 		.4byte	.LFE77-.LFB77
 7972 0088 00000000 		.4byte	.LFB78
 7973 008c 24010000 		.4byte	.LFE78-.LFB78
 7974 0090 00000000 		.4byte	.LFB79
 7975 0094 60000000 		.4byte	.LFE79-.LFB79
 7976 0098 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 164


 7977 009c 9C000000 		.4byte	.LFE80-.LFB80
 7978 00a0 00000000 		.4byte	.LFB81
 7979 00a4 94010000 		.4byte	.LFE81-.LFB81
 7980 00a8 00000000 		.4byte	.LFB82
 7981 00ac A8000000 		.4byte	.LFE82-.LFB82
 7982 00b0 00000000 		.4byte	.LFB83
 7983 00b4 48000000 		.4byte	.LFE83-.LFB83
 7984 00b8 00000000 		.4byte	.LFB84
 7985 00bc 24020000 		.4byte	.LFE84-.LFB84
 7986 00c0 00000000 		.4byte	.LFB85
 7987 00c4 C4020000 		.4byte	.LFE85-.LFB85
 7988 00c8 00000000 		.4byte	0
 7989 00cc 00000000 		.4byte	0
 7990              		.section	.debug_ranges,"",%progbits
 7991              	.Ldebug_ranges0:
 7992 0000 00000000 		.4byte	.LFB63
 7993 0004 A4040000 		.4byte	.LFE63
 7994 0008 00000000 		.4byte	.LFB64
 7995 000c 5C000000 		.4byte	.LFE64
 7996 0010 00000000 		.4byte	.LFB65
 7997 0014 A0010000 		.4byte	.LFE65
 7998 0018 00000000 		.4byte	.LFB66
 7999 001c 74020000 		.4byte	.LFE66
 8000 0020 00000000 		.4byte	.LFB67
 8001 0024 74000000 		.4byte	.LFE67
 8002 0028 00000000 		.4byte	.LFB68
 8003 002c 38000000 		.4byte	.LFE68
 8004 0030 00000000 		.4byte	.LFB69
 8005 0034 4C030000 		.4byte	.LFE69
 8006 0038 00000000 		.4byte	.LFB70
 8007 003c E8000000 		.4byte	.LFE70
 8008 0040 00000000 		.4byte	.LFB71
 8009 0044 DE000000 		.4byte	.LFE71
 8010 0048 00000000 		.4byte	.LFB72
 8011 004c 70010000 		.4byte	.LFE72
 8012 0050 00000000 		.4byte	.LFB73
 8013 0054 5C000000 		.4byte	.LFE73
 8014 0058 00000000 		.4byte	.LFB74
 8015 005c 4E000000 		.4byte	.LFE74
 8016 0060 00000000 		.4byte	.LFB75
 8017 0064 84000000 		.4byte	.LFE75
 8018 0068 00000000 		.4byte	.LFB76
 8019 006c 50000000 		.4byte	.LFE76
 8020 0070 00000000 		.4byte	.LFB77
 8021 0074 C8010000 		.4byte	.LFE77
 8022 0078 00000000 		.4byte	.LFB78
 8023 007c 24010000 		.4byte	.LFE78
 8024 0080 00000000 		.4byte	.LFB79
 8025 0084 60000000 		.4byte	.LFE79
 8026 0088 00000000 		.4byte	.LFB80
 8027 008c 9C000000 		.4byte	.LFE80
 8028 0090 00000000 		.4byte	.LFB81
 8029 0094 94010000 		.4byte	.LFE81
 8030 0098 00000000 		.4byte	.LFB82
 8031 009c A8000000 		.4byte	.LFE82
 8032 00a0 00000000 		.4byte	.LFB83
 8033 00a4 48000000 		.4byte	.LFE83
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 165


 8034 00a8 00000000 		.4byte	.LFB84
 8035 00ac 24020000 		.4byte	.LFE84
 8036 00b0 00000000 		.4byte	.LFB85
 8037 00b4 C4020000 		.4byte	.LFE85
 8038 00b8 00000000 		.4byte	0
 8039 00bc 00000000 		.4byte	0
 8040              		.section	.debug_line,"",%progbits
 8041              	.Ldebug_line0:
 8042 0000 F3070000 		.section	.debug_str,"MS",%progbits,1
 8042      02006001 
 8042      00000201 
 8042      FB0E0D00 
 8042      01010101 
 8043              	.LASF65:
 8044 0000 64697265 		.ascii	"direction\000"
 8044      6374696F 
 8044      6E00
 8045              	.LASF128:
 8046 000a 70617468 		.ascii	"path_i\000"
 8046      5F6900
 8047              	.LASF52:
 8048 0011 53746172 		.ascii	"Start\000"
 8048      7400
 8049              	.LASF85:
 8050 0017 72665F64 		.ascii	"rf_d\000"
 8050      00
 8051              	.LASF86:
 8052 001c 72665F69 		.ascii	"rf_i\000"
 8052      00
 8053              	.LASF84:
 8054 0021 52467661 		.ascii	"RFvalue\000"
 8054      6C756500 
 8055              	.LASF146:
 8056 0029 6E65774E 		.ascii	"newNodes\000"
 8056      6F646573 
 8056      00
 8057              	.LASF67:
 8058 0032 68436F73 		.ascii	"hCost\000"
 8058      7400
 8059              	.LASF164:
 8060 0038 70726576 		.ascii	"previous\000"
 8060      696F7573 
 8060      00
 8061              	.LASF8:
 8062 0041 756E7369 		.ascii	"unsigned int\000"
 8062      676E6564 
 8062      20696E74 
 8062      00
 8063              	.LASF129:
 8064 004e 636F6D6D 		.ascii	"commaCount\000"
 8064      61436F75 
 8064      6E7400
 8065              	.LASF137:
 8066 0059 6F66665F 		.ascii	"off_track_counter\000"
 8066      74726163 
 8066      6B5F636F 
 8066      756E7465 
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 166


 8066      7200
 8067              	.LASF119:
 8068 006b 61646333 		.ascii	"adc3_count\000"
 8068      5F636F75 
 8068      6E7400
 8069              	.LASF54:
 8070 0076 43757272 		.ascii	"Current\000"
 8070      656E7400 
 8071              	.LASF57:
 8072 007e 4E657874 		.ascii	"NextRow\000"
 8072      526F7700 
 8073              	.LASF11:
 8074 0086 5F5F696E 		.ascii	"__int32_t\000"
 8074      7433325F 
 8074      7400
 8075              	.LASF16:
 8076 0090 696E7431 		.ascii	"int16\000"
 8076      3600
 8077              	.LASF145:
 8078 0096 76697369 		.ascii	"visited\000"
 8078      74656400 
 8079              	.LASF158:
 8080 009e 7475726E 		.ascii	"turnDone_180\000"
 8080      446F6E65 
 8080      5F313830 
 8080      00
 8081              	.LASF44:
 8082 00ab 63686563 		.ascii	"check\000"
 8082      6B00
 8083              	.LASF56:
 8084 00b1 54696479 		.ascii	"TidyUpThePath\000"
 8084      55705468 
 8084      65506174 
 8084      6800
 8085              	.LASF58:
 8086 00bf 4E657874 		.ascii	"NextCol\000"
 8086      436F6C00 
 8087              	.LASF33:
 8088 00c7 67325F78 		.ascii	"g2_xpos\000"
 8088      706F7300 
 8089              	.LASF53:
 8090 00cf 50697A7A 		.ascii	"Pizza\000"
 8090      6100
 8091              	.LASF159:
 8092 00d5 6F726965 		.ascii	"orientation\000"
 8092      6E746174 
 8092      696F6E00 
 8093              	.LASF47:
 8094 00e1 74657374 		.ascii	"test_isr\000"
 8094      5F697372 
 8094      00
 8095              	.LASF147:
 8096 00ea 44697374 		.ascii	"DistBefore\000"
 8096      4265666F 
 8096      726500
 8097              	.LASF104:
 8098 00f5 666C6167 		.ascii	"flag_rf_transmission_active\000"
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 167


 8098      5F72665F 
 8098      7472616E 
 8098      736D6973 
 8098      73696F6E 
 8099              	.LASF154:
 8100 0111 50495A5A 		.ascii	"PIZZA_COL\000"
 8100      415F434F 
 8100      4C00
 8101              	.LASF143:
 8102 011b 4F6C644E 		.ascii	"OldNodes\000"
 8102      6F646573 
 8102      00
 8103              	.LASF110:
 8104 0124 7072696E 		.ascii	"printingFlag\000"
 8104      74696E67 
 8104      466C6167 
 8104      00
 8105              	.LASF40:
 8106 0131 4E6F6465 		.ascii	"NodeList\000"
 8106      4C697374 
 8106      00
 8107              	.LASF80:
 8108 013a 6E657874 		.ascii	"nextNodeDirection\000"
 8108      4E6F6465 
 8108      44697265 
 8108      6374696F 
 8108      6E00
 8109              	.LASF36:
 8110 014c 67325F64 		.ascii	"g2_direction\000"
 8110      69726563 
 8110      74696F6E 
 8110      00
 8111              	.LASF155:
 8112 0159 6E657874 		.ascii	"next_free_index\000"
 8112      5F667265 
 8112      655F696E 
 8112      64657800 
 8113              	.LASF71:
 8114 0169 64656C65 		.ascii	"deleteNode\000"
 8114      74654E6F 
 8114      646500
 8115              	.LASF17:
 8116 0174 666C6F61 		.ascii	"float\000"
 8116      7400
 8117              	.LASF49:
 8118 017a 636F6E63 		.ascii	"concatenate\000"
 8118      6174656E 
 8118      61746500 
 8119              	.LASF108:
 8120 0186 75736242 		.ascii	"usbBuffer\000"
 8120      75666665 
 8120      7200
 8121              	.LASF21:
 8122 0190 696E6465 		.ascii	"index\000"
 8122      7800
 8123              	.LASF70:
 8124 0196 70757368 		.ascii	"push\000"
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 168


 8124      00
 8125              	.LASF7:
 8126 019b 6C6F6E67 		.ascii	"long long unsigned int\000"
 8126      206C6F6E 
 8126      6720756E 
 8126      7369676E 
 8126      65642069 
 8127              	.LASF101:
 8128 01b2 666C6167 		.ascii	"flag_packet\000"
 8128      5F706163 
 8128      6B657400 
 8129              	.LASF39:
 8130 01be 4E6F6465 		.ascii	"Node\000"
 8130      00
 8131              	.LASF62:
 8132 01c3 73686F72 		.ascii	"shortest\000"
 8132      74657374 
 8132      00
 8133              	.LASF48:
 8134 01cc 52656365 		.ascii	"Receive_Data\000"
 8134      6976655F 
 8134      44617461 
 8134      00
 8135              	.LASF126:
 8136 01d9 656E645F 		.ascii	"end_receiving\000"
 8136      72656365 
 8136      6976696E 
 8136      6700
 8137              	.LASF74:
 8138 01e7 61737461 		.ascii	"astar_and_append\000"
 8138      725F616E 
 8138      645F6170 
 8138      70656E64 
 8138      00
 8139              	.LASF97:
 8140 01f8 666C6167 		.ascii	"flag_ts_update\000"
 8140      5F74735F 
 8140      75706461 
 8140      746500
 8141              	.LASF96:
 8142 0207 666C6167 		.ascii	"flag_ts_enc\000"
 8142      5F74735F 
 8142      656E6300 
 8143              	.LASF79:
 8144 0213 636F756E 		.ascii	"counter\000"
 8144      74657200 
 8145              	.LASF69:
 8146 021b 74617267 		.ascii	"target\000"
 8146      657400
 8147              	.LASF163:
 8148 0222 63757272 		.ascii	"currentRFpos\000"
 8148      656E7452 
 8148      46706F73 
 8148      00
 8149              	.LASF46:
 8150 022f 63686172 		.ascii	"character\000"
 8150      61637465 
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 169


 8150      7200
 8151              	.LASF94:
 8152 0239 74735F73 		.ascii	"ts_speed\000"
 8152      70656564 
 8152      00
 8153              	.LASF72:
 8154 0242 65786973 		.ascii	"existInList\000"
 8154      74496E4C 
 8154      69737400 
 8155              	.LASF133:
 8156 024e 636C6561 		.ascii	"clearedRF\000"
 8156      72656452 
 8156      4600
 8157              	.LASF112:
 8158 0258 4144435F 		.ascii	"ADC_0\000"
 8158      3000
 8159              	.LASF114:
 8160 025e 4144435F 		.ascii	"ADC_1\000"
 8160      3100
 8161              	.LASF127:
 8162 0264 616E616C 		.ascii	"analysing\000"
 8162      7973696E 
 8162      6700
 8163              	.LASF122:
 8164 026e 4144435F 		.ascii	"ADC_5\000"
 8164      3500
 8165              	.LASF81:
 8166 0274 7475726E 		.ascii	"turn\000"
 8166      00
 8167              	.LASF23:
 8168 0279 726F626F 		.ascii	"robot_ypos\000"
 8168      745F7970 
 8168      6F7300
 8169              	.LASF76:
 8170 0284 636C6F73 		.ascii	"closest_dist\000"
 8170      6573745F 
 8170      64697374 
 8170      00
 8171              	.LASF116:
 8172 0291 4144435F 		.ascii	"ADC_2\000"
 8172      3200
 8173              	.LASF118:
 8174 0297 4144435F 		.ascii	"ADC_3\000"
 8174      3300
 8175              	.LASF120:
 8176 029d 4144435F 		.ascii	"ADC_4\000"
 8176      3400
 8177              	.LASF95:
 8178 02a3 74735F64 		.ascii	"ts_display\000"
 8178      6973706C 
 8178      617900
 8179              	.LASF37:
 8180 02ae 76747970 		.ascii	"vtype1\000"
 8180      653100
 8181              	.LASF10:
 8182 02b5 63686172 		.ascii	"char\000"
 8182      00
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 170


 8183              	.LASF27:
 8184 02ba 67305F73 		.ascii	"g0_speed\000"
 8184      70656564 
 8184      00
 8185              	.LASF55:
 8186 02c3 696E6465 		.ascii	"indexN\000"
 8186      784E00
 8187              	.LASF14:
 8188 02ca 75696E74 		.ascii	"uint16\000"
 8188      313600
 8189              	.LASF15:
 8190 02d1 696E7438 		.ascii	"int8\000"
 8190      00
 8191              	.LASF43:
 8192 02d6 4E6F6465 		.ascii	"NodeMAP\000"
 8192      4D415000 
 8193              	.LASF63:
 8194 02de 6C697374 		.ascii	"listNeighbours\000"
 8194      4E656967 
 8194      68626F75 
 8194      727300
 8195              	.LASF32:
 8196 02ed 67315F64 		.ascii	"g1_direction\000"
 8196      69726563 
 8196      74696F6E 
 8196      00
 8197              	.LASF142:
 8198 02fa 4E65774E 		.ascii	"NewNodes\000"
 8198      6F646573 
 8198      00
 8199              	.LASF134:
 8200 0303 63757272 		.ascii	"currentRForient\000"
 8200      656E7452 
 8200      466F7269 
 8200      656E7400 
 8201              	.LASF160:
 8202 0313 70617468 		.ascii	"path_index\000"
 8202      5F696E64 
 8202      657800
 8203              	.LASF6:
 8204 031e 6C6F6E67 		.ascii	"long long int\000"
 8204      206C6F6E 
 8204      6720696E 
 8204      7400
 8205              	.LASF78:
 8206 032c 666F6F64 		.ascii	"foodLeft\000"
 8206      4C656674 
 8206      00
 8207              	.LASF29:
 8208 0335 67315F78 		.ascii	"g1_xpos\000"
 8208      706F7300 
 8209              	.LASF113:
 8210 033d 61646330 		.ascii	"adc0_count\000"
 8210      5F636F75 
 8210      6E7400
 8211              	.LASF87:
 8212 0348 53747261 		.ascii	"Straight\000"
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 171


 8212      69676874 
 8212      00
 8213              	.LASF117:
 8214 0351 61646332 		.ascii	"adc2_count\000"
 8214      5F636F75 
 8214      6E7400
 8215              	.LASF156:
 8216 035c 666F6F64 		.ascii	"food_states\000"
 8216      5F737461 
 8216      74657300 
 8217              	.LASF66:
 8218 0368 73746F72 		.ascii	"storeval\000"
 8218      6576616C 
 8218      00
 8219              	.LASF35:
 8220 0371 67325F73 		.ascii	"g2_speed\000"
 8220      70656564 
 8220      00
 8221              	.LASF26:
 8222 037a 67305F79 		.ascii	"g0_ypos\000"
 8222      706F7300 
 8223              	.LASF91:
 8224 0382 666F6F64 		.ascii	"food_list\000"
 8224      5F6C6973 
 8224      7400
 8225              	.LASF75:
 8226 038c 66696E64 		.ascii	"findNearestFood\000"
 8226      4E656172 
 8226      65737446 
 8226      6F6F6400 
 8227              	.LASF41:
 8228 039c 666F756E 		.ascii	"foundneighbours\000"
 8228      646E6569 
 8228      6768626F 
 8228      75727300 
 8229              	.LASF38:
 8230 03ac 64617461 		.ascii	"data_main\000"
 8230      5F6D6169 
 8230      6E00
 8231              	.LASF135:
 8232 03b6 7475726E 		.ascii	"turnDone_delay\000"
 8232      446F6E65 
 8232      5F64656C 
 8232      617900
 8233              	.LASF20:
 8234 03c5 72737369 		.ascii	"rssi\000"
 8234      00
 8235              	.LASF28:
 8236 03ca 67305F64 		.ascii	"g0_direction\000"
 8236      69726563 
 8236      74696F6E 
 8236      00
 8237              	.LASF132:
 8238 03d7 52466461 		.ascii	"RFdata\000"
 8238      746100
 8239              	.LASF123:
 8240 03de 61646335 		.ascii	"adc5_count\000"
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 172


 8240      5F636F75 
 8240      6E7400
 8241              	.LASF151:
 8242 03e9 53544152 		.ascii	"START_ROW\000"
 8242      545F524F 
 8242      5700
 8243              	.LASF83:
 8244 03f3 5246726F 		.ascii	"RFround\000"
 8244      756E6400 
 8245              	.LASF51:
 8246 03fb 5461696C 		.ascii	"TailNode\000"
 8246      4E6F6465 
 8246      00
 8247              	.LASF19:
 8248 0404 6C6F6E67 		.ascii	"long double\000"
 8248      20646F75 
 8248      626C6500 
 8249              	.LASF98:
 8250 0410 666C6167 		.ascii	"flag_ts_speed\000"
 8250      5F74735F 
 8250      73706565 
 8250      6400
 8251              	.LASF103:
 8252 041e 64617461 		.ascii	"dataready_flag\000"
 8252      72656164 
 8252      795F666C 
 8252      616700
 8253              	.LASF82:
 8254 042d 616E676C 		.ascii	"angle\000"
 8254      6500
 8255              	.LASF152:
 8256 0433 53544152 		.ascii	"START_COL\000"
 8256      545F434F 
 8256      4C00
 8257              	.LASF149:
 8258 043d 43616D65 		.ascii	"CameFrom\000"
 8258      46726F6D 
 8258      00
 8259              	.LASF121:
 8260 0446 61646334 		.ascii	"adc4_count\000"
 8260      5F636F75 
 8260      6E7400
 8261              	.LASF165:
 8262 0451 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8262      4320342E 
 8262      392E3320 
 8262      32303135 
 8262      30333033 
 8263 0484 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8263      20726576 
 8263      6973696F 
 8263      6E203232 
 8263      31323230 
 8264 04b7 30202D73 		.ascii	"0 -std=gnu99 -ffunction-sections -ffat-lto-objects\000"
 8264      74643D67 
 8264      6E753939 
 8264      202D6666 
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 173


 8264      756E6374 
 8265              	.LASF100:
 8266 04ea 666C6167 		.ascii	"flag_rx\000"
 8266      5F727800 
 8267              	.LASF140:
 8268 04f2 50617468 		.ascii	"PathArray\000"
 8268      41727261 
 8268      7900
 8269              	.LASF2:
 8270 04fc 73686F72 		.ascii	"short int\000"
 8270      7420696E 
 8270      7400
 8271              	.LASF4:
 8272 0506 6C6F6E67 		.ascii	"long int\000"
 8272      20696E74 
 8272      00
 8273              	.LASF90:
 8274 050f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8274      52784275 
 8274      66666572 
 8274      00
 8275              	.LASF50:
 8276 051c 63616C63 		.ascii	"calculateADC\000"
 8276      756C6174 
 8276      65414443 
 8276      00
 8277              	.LASF93:
 8278 0529 74735F75 		.ascii	"ts_update\000"
 8278      70646174 
 8278      6500
 8279              	.LASF130:
 8280 0533 6E656761 		.ascii	"negative\000"
 8280      74697665 
 8280      00
 8281              	.LASF77:
 8282 053c 64697374 		.ascii	"distance\000"
 8282      616E6365 
 8282      00
 8283              	.LASF136:
 8284 0545 6F66665F 		.ascii	"off_track\000"
 8284      74726163 
 8284      6B00
 8285              	.LASF59:
 8286 054f 74656D70 		.ascii	"temp\000"
 8286      00
 8287              	.LASF34:
 8288 0554 67325F79 		.ascii	"g2_ypos\000"
 8288      706F7300 
 8289              	.LASF157:
 8290 055c 7475726E 		.ascii	"turnDone\000"
 8290      446F6E65 
 8290      00
 8291              	.LASF144:
 8292 0565 6E656967 		.ascii	"neighbours\000"
 8292      68626F75 
 8292      727300
 8293              	.LASF30:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 174


 8294 0570 67315F79 		.ascii	"g1_ypos\000"
 8294      706F7300 
 8295              	.LASF61:
 8296 0578 41727261 		.ascii	"Array\000"
 8296      7900
 8297              	.LASF125:
 8298 057e 73746172 		.ascii	"start_receiving\000"
 8298      745F7265 
 8298      63656976 
 8298      696E6700 
 8299              	.LASF148:
 8300 058e 546F7461 		.ascii	"TotalDist\000"
 8300      6C446973 
 8300      7400
 8301              	.LASF9:
 8302 0598 73697A65 		.ascii	"sizetype\000"
 8302      74797065 
 8302      00
 8303              	.LASF5:
 8304 05a1 6C6F6E67 		.ascii	"long unsigned int\000"
 8304      20756E73 
 8304      69676E65 
 8304      6420696E 
 8304      7400
 8305              	.LASF45:
 8306 05b3 7072696E 		.ascii	"printing\000"
 8306      74696E67 
 8306      00
 8307              	.LASF12:
 8308 05bc 696E7433 		.ascii	"int32_t\000"
 8308      325F7400 
 8309              	.LASF22:
 8310 05c4 726F626F 		.ascii	"robot_xpos\000"
 8310      745F7870 
 8310      6F7300
 8311              	.LASF141:
 8312 05cf 46696E61 		.ascii	"FinalArray\000"
 8312      6C417272 
 8312      617900
 8313              	.LASF107:
 8314 05da 656E7472 		.ascii	"entry\000"
 8314      7900
 8315              	.LASF150:
 8316 05e0 74656E74 		.ascii	"tentativeDist\000"
 8316      61746976 
 8316      65446973 
 8316      7400
 8317              	.LASF1:
 8318 05ee 756E7369 		.ascii	"unsigned char\000"
 8318      676E6564 
 8318      20636861 
 8318      7200
 8319              	.LASF42:
 8320 05fc 6C617374 		.ascii	"lastindex\000"
 8320      696E6465 
 8320      7800
 8321              	.LASF106:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 175


 8322 0606 6C696E65 		.ascii	"line\000"
 8322      00
 8323              	.LASF131:
 8324 060b 74657374 		.ascii	"test\000"
 8324      00
 8325              	.LASF111:
 8326 0610 74696D65 		.ascii	"timeout\000"
 8326      6F757400 
 8327              	.LASF162:
 8328 0618 616C6D6F 		.ascii	"almost_180\000"
 8328      73745F31 
 8328      383000
 8329              	.LASF92:
 8330 0623 74735F65 		.ascii	"ts_enc\000"
 8330      6E6300
 8331              	.LASF99:
 8332 062a 666C6167 		.ascii	"flag_ts_display\000"
 8332      5F74735F 
 8332      64697370 
 8332      6C617900 
 8333              	.LASF64:
 8334 063a 61727261 		.ascii	"arrayindex\000"
 8334      79696E64 
 8334      657800
 8335              	.LASF105:
 8336 0645 64697370 		.ascii	"displaystring\000"
 8336      6C617973 
 8336      7472696E 
 8336      6700
 8337              	.LASF139:
 8338 0653 66726565 		.ascii	"free_to_detect_front\000"
 8338      5F746F5F 
 8338      64657465 
 8338      63745F66 
 8338      726F6E74 
 8339              	.LASF0:
 8340 0668 7369676E 		.ascii	"signed char\000"
 8340      65642063 
 8340      68617200 
 8341              	.LASF3:
 8342 0674 73686F72 		.ascii	"short unsigned int\000"
 8342      7420756E 
 8342      7369676E 
 8342      65642069 
 8342      6E7400
 8343              	.LASF24:
 8344 0687 726F626F 		.ascii	"robot_orientation\000"
 8344      745F6F72 
 8344      69656E74 
 8344      6174696F 
 8344      6E00
 8345              	.LASF88:
 8346 0699 75736552 		.ascii	"useRF\000"
 8346      4600
 8347              	.LASF89:
 8348 069f 6D61696E 		.ascii	"main\000"
 8348      00
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 176


 8349              	.LASF68:
 8350 06a4 63757272 		.ascii	"current\000"
 8350      656E7400 
 8351              	.LASF153:
 8352 06ac 50495A5A 		.ascii	"PIZZA_ROW\000"
 8352      415F524F 
 8352      5700
 8353              	.LASF13:
 8354 06b6 75696E74 		.ascii	"uint8\000"
 8354      3800
 8355              	.LASF18:
 8356 06bc 646F7562 		.ascii	"double\000"
 8356      6C6500
 8357              	.LASF60:
 8358 06c3 66696E64 		.ascii	"findCurrentNode\000"
 8358      43757272 
 8358      656E744E 
 8358      6F646500 
 8359              	.LASF124:
 8360 06d3 6861735F 		.ascii	"has_received\000"
 8360      72656365 
 8360      69766564 
 8360      00
 8361              	.LASF161:
 8362 06e0 6475706C 		.ascii	"duplicateFlag\000"
 8362      69636174 
 8362      65466C61 
 8362      6700
 8363              	.LASF115:
 8364 06ee 61646331 		.ascii	"adc1_count\000"
 8364      5F636F75 
 8364      6E7400
 8365              	.LASF25:
 8366 06f9 67305F78 		.ascii	"g0_xpos\000"
 8366      706F7300 
 8367              	.LASF167:
 8368 0701 5C5C756F 		.ascii	"\\\\uoa.auckland.ac.nz\\engdfs\\home\\jpat331\\Desk"
 8368      612E6175 
 8368      636B6C61 
 8368      6E642E61 
 8368      632E6E7A 
 8369 072e 746F705C 		.ascii	"top\\CS301_Class.cydsn (4)\\CS301_Class.cydsn\000"
 8369      43533330 
 8369      315F436C 
 8369      6173732E 
 8369      63796473 
 8370              	.LASF102:
 8371 075a 666C6167 		.ascii	"flag_KB_string\000"
 8371      5F4B425F 
 8371      73747269 
 8371      6E6700
 8372              	.LASF109:
 8373 0769 73797374 		.ascii	"system_state\000"
 8373      656D5F73 
 8373      74617465 
 8373      00
 8374              	.LASF31:
ARM GAS  C:\Users\jpat331\AppData\Local\Temp\ccq0jSDR.s 			page 177


 8375 0776 67315F73 		.ascii	"g1_speed\000"
 8375      70656564 
 8375      00
 8376              	.LASF73:
 8377 077f 61737461 		.ascii	"astar\000"
 8377      7200
 8378              	.LASF138:
 8379 0785 66726F6E 		.ascii	"front_detected\000"
 8379      745F6465 
 8379      74656374 
 8379      656400
 8380              	.LASF166:
 8381 0794 2E5C6D61 		.ascii	".\\main.c\000"
 8381      696E2E63 
 8381      00
 8382              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
